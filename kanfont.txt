「kanfont」は「LTsv10kanedit(tsvtool10)」を用いたフォントエディタです。単漢字辞書「kanchar.tsv」を編集します。
version(branch) 20160927T004545

目次

 ０-0． ライセンス及びソフトの使用の補足ガイドライン
 ０-1． 現在わかっている不具合や今後の課題。
 １-1a． 「kanfont」の使い方
 １-1b． グリフキャンバスの座標とSVGパスの座標の違い
 １-1c． 圧縮形式5x10xの解説。
 １-2．  「kanfont.tsv」の解説。
 ２-1．「kanfont」のＦＡＱ
 ２-2．「kan5x5comic」のＦＡＱ
 ３．   作者について、例えば連絡先。


０-0． ライセンス及びソフトの使用の補足ガイドライン

 ※「MIT License」準拠。
   MIT License - Choose a License
   http://choosealicense.com/licenses/mit/

 ※「MIT License」の日本語訳。
   licenses/MIT_license - Open Source Group Japan Wiki - Open Source Group Japan - OSDN
   https://osdn.jp/projects/opensource/wiki/licenses%2FMIT_license

 ※日本語による補足。
   ・複製物にも「MIT License」の[LICENSE]ファイルを添付る事(著作権表示を誤魔化さない事)。
   ・いかなる場合においても作者または著作権所有者は一切責任を負わない事。
   ・ソースコードの閲覧やコピーに制限を設けない事。

 ※「kanedit」「kanfont」共通の問題への言及。
   ・単漢字辞書「kanchar.tsv」の不適切な翻訳やグリフ不足などの不具合に対してもメンテナンス義務もありません。


０-1． 現在わかっている不具合や今後の課題。

 Python 2.7.6(Tahrpup6.0.5)およびPython3.4.4(Wine1.7.18)で開発しています。Windows,cygwin,darwinなどでの動作は確認しておりません。
 フォント「kan5x5comic」は半角と全角の幅の比率が約5:3(1024:624)なのでアスキーアートで問題になる場合があります。グリフ不足で表示できない文字などあります。
 「kanpickle.bin」にグリフ座標データが蓄積されるまでは動作が重いです(「kanmap」で解消可能)。
 「lan5x5comic.ttf」が直接生成できない(グリフデザインまで)。


１-1a． 「kanfont」の使い方

   左上の漢直キーボード         グリフを編集する漢字を選択。
   縦のスケール                 グリフを編集する漢字を選択。漢直キーボードに無い漢字も選択可能。
   縦スケールのスピンボックス   グリフを編集する漢字を選択。縦のスケールと連動。
   縦スケールの「CP」ボタン     クリップボードに縦スケールで選択されてる文字をコピー。
   縦スケールの「PT」ボタン     クリップボードの先頭１文字を使って漢字を選択。左上の漢直キーボードにも反映。
   真ん中のキャンバス           グリフを編集。クリックでポリゴン描画。
                                右回転の青色ポリゴンが描画用途、左回転の緑色ポリゴンが消去もしくは反転あるいは背景色用途。
                                ポリゴンの頂点をドラッグで移動。ポリゴン頂点を動かさないようにクリックを離すと頂点は消える。
                                ポリゴンの線分(頂点の長方形じゃなくて円の部分)をドラッグで頂点を増やせる。
                                ポリゴンの頂点を全て消すとポリゴン(ポリゴンレイヤー)が１枚消える。
   横のスケール                 編集するポリゴンの変更。または新規ポリゴンレイヤーを選択。
   横スケールの「COPY」ボタン   ポリゴンレイヤーを複製。「PASTE」で貼り直す事が可能。クリップボード不使用。
   横スケールの「CUT」ボタン    ポリゴンレイヤーを削除。「PASTE」で貼り直す事が可能。クリップボード不使用。
   横スケールの「PASTE」ボタン  「COPY」「CUT」したポリゴンレイヤーを貼り直す。クリップボード不使用。クリップボードの文字列を使う場合は後述の入力欄で。
   横スケールの「UP」ボタン     ポリゴンレイヤーを重ねる順番を変更。左回転のポリゴンを浮上。
   横スケールの「DOWN」ボタン   ポリゴンレイヤーを重ねる順番を変更。右回転のポリゴンを沈める。
   「grid」スピンボックス       ポリゴンの頂点を固定。「活(5x)」では100「漫(10x)」では50を想定。
   「grid」チェックボックス     通常OFF。スピンボックスの値より1少ない数値にもグリッド指定する事が可能だけどフォントデザインに置いては杞憂だった様子。
   「seg」チェックボックス      ポリゴン線分を表示＆操作許可なので通常ON。
   「ref」チェックボックス      グリフ編集中に参考までに別のフォントを表示。
   グリフラジオボタン(活,漫,筆) キャンバスで編集するグリフを「活:kan5x5」「漫:kan5x5comic」「筆:kan5x5brush」から選択。
   右側の入力欄                 英名音訓送異俗熙簡繁越地顔鍵代逆非難は辞書項目になります。漢直キーボードで入力。
                                辞書項目の入力、漢直キーボードの操作は「LTsv/LTsv.txt」の「１-8b．漢直キーボードの操作方法(マウス)」「１-8c．漢直キーボードの操作方法(物理キーボード)」を参考。
                                活漫筆幅がグリフ項目になります。グリフキャンバスで編集。頂点はSVGパスから独自形式に圧縮される場合があります。
   右下の「save」ボタン         「kan5x5.svg」「LTsv/kanchar.tsv」「LTsv/kanpickle.bin」に保存します。


１-1b． グリフキャンバスの座標とSVGパスの座標の違い

 「kanfont」のグリフキャンバスサイズは512ですがSVGパスの想定サイズは1024です。  
 グリフキャンバスは左上が&#40;0,0&#41;ですがSVGパスは左下が&#40;0,0&#41;です。  
 「kanfont」は直線しか編集できないポリゴン限定ばので、SVGパスは「M」と「z」しか対応してないことに注意。  
 そしてSVGパスを「LTsv/kanchar.tsv」に保存する際に独自形式で圧縮します。

１-1c． 圧縮形式5x10xの解説。


１-2．  「kanfont.tsv」の解説。

  [kanfont|                     「kanfont.py」の設定。
   seek                         縦スケール(編集中のグリフ)の値を保存。初期値は「ぱ」。
   grid                         「grid」スピンボックスの値を保存。初期値は「50」。
   inner                        「grid」チェックボックスの値を保存。初期値は「0」。
   lineseg                      「seg」チェックボックスチェックボックスの値を保存。初期値は「1」。
   gothic                       グリフラジオボタン(活,漫,筆)の値を保存。初期値は「0」。
   gridimage                    キャンバス編集中のグリッド画像を指定。初期値は「kanfont_grid25_5x5.png」。
   refer                        「ref」チェックボックスで表示するグリフ編集中の別フォント名。初期値は「Noto Sans Japanese Regular」。
   refergrid                    「ref」チェックボックスの値を保存。初期値は「1」。
   referGTK                     「ref」チェックボックスで表示するグリフ編集中の別フォントのサイズ色位置調整。初期値は「X:-30	Y:-30	S:420	C:#E5E5E5」。
   referTkinter                 「ref」チェックボックスで表示するグリフ編集中の別フォントのサイズ色位置調整。初期値は「X:-30	Y:-135	S:420	C:#E5E5E5」。
   glyphcolor                   キャンバス編集中のグリフやカーソルの色指定。初期値は「R:#6E81D9	L:#6ED997	X:#D96ED3	G:#9F6C00」。
   dic_name                     「kanchar.tsv」の保存先は変更可能。初期値は「LTsv/kanchar.tsv」。
   svg_name                     フォントグリフSVGの保存先指定。初期値は「kan5x5.svg」。
   font_name                    グリフの名称は変更可能。初期値は「活:kan5x5	漫:kan5x5comic	筆:kan5x5brush」。
   font_glyphtype               「save」ボタンで保存するグリフは「」「」に固定だが、。初期値は「漫」。
   font_widths                  SVG作成時にフォント幅(全角,麻雀牌,半角)で「font id=""」のグループが生成。初期値は「1024,824,624」。
   autosave                     ウィンドウ閉じたときに「kanchar.tsv」に自動保存可能。初期値は「off」。設定に関係なく「LTsv/kanpickle.bin」は保存。
   savetime                     「save」ボタンに保存時間を表示する演出用途。初期値は「@0h:@0n:@0s」。


２-1．「kanfont」のＦＡＱ

 Ｑ．「kanfont」で他のフォントを編集できますか？
 Ａ．「kanfont」は「kan5x5comic」のグリフ編集しかできません。
     ただしガラ空きの「筆」グリフを利用して自作のフォントを生成する事は可能と思います。

 Ｑ．「漫」フォント座標が圧縮できない場合がある。
 Ａ．グリフの交点が細かくなる都合で圧縮できない場合があります。20x以上の圧縮アルゴリズムの予定は今のところありません。

 Ｑ．左回転のポリゴンがフォントに変換したときに描画されてましたよ？
 Ａ．フォントの描画ルールでは、逆回転のポリゴンが重なった場所が透過になるアルゴリズムだからです。
     「L:Tsv」ではポリゴンを単純に上書き描画するアルゴリズムなので左回転の背景色が一見描画されてないようにみえる場合があるだけです。
     なので場合によっては「UP」「DOWN」ボタンで描画順番の入れ替えもしてください。
     フォント変換については「２-2．「kan5x5comic」のＦＡＱ」も参考。

 Ｑ．上下左右で漢直鍵盤のカーソルを移動しようとすると別のGUIにフォーカスが移動してしまいます。
 Ａ．[KANA]+[NFER]で「σ」鍵盤が表示されるのでHJKLで漢直鍵盤入力欄のカーソルが移動できます。

 Ｑ．いやそもそも「kanedit」はともかく「kanfont」まで漢直キーボードにする必要あったんですか？
 Ａ．「Tkinter」が「U+FFFF(BMP)」を越える3バイト以上のUTF-8文字を扱えない問題があったので、独自にフォントモジュールを作る必要に迫られました。
     漢直キーボードに不慣れの場合普通にコピペ入力([Ctrl]+[A],[Ctrl]+[V])も可能です。

 Ｑ．「PT」ボタンで文字を貼り付けたのに漢直キーボードに反映されない。
 Ａ．「LTsv/kanmap.tsv」に含まれてない漢字を探索するには「kanedit」の「探」コマンドを用いてください。
     例えば「」は「kanedit」の「電卓」で「探」すると「探⇔東」が求められます。


２-2．「kan5x5comic」のＦＡＱ

 Ｑ．「kan5x5comic.ttf」の作り方を教えてください。
 Ａ．「kan5x5.svg」を「FontForge」で変換します。

      FontForge
      http://fontforge.github.io/ja/

     「kan5x5comic」を読み込んだ状態に「kan5x5comic_w624」と「kan5x5comic_w824」を「Merge Fonts」してから「kan5x5comic.ttf」として「Generate Fonts」。
     「FontForge」に「kan5x5.svg」を読み込ませると「kan5x5comic」に「kan5x5comic_w624」と「kan5x5comic_w824」の選択肢が出現します。

 Ｑ．「FontForge」を使わない「kan5x5comic.ttf」の作り方を教えてください。
 Ａ．「約四文字」から「kan5x5comic.woff」を落として「WOFF コンバータ」で変換。

      「約四文字」(http://ooblog.github.io/)(「kan5x5comic.woff」のダウンロード準備予定時期未定)
      http://ooblog.github.io/

      WOFFコンバータ
      http://opentype.jp/woffconv.htm

     ただしこの方法だと「約四文字」の更新ラグの影響で古いフォントの入手になるので注意。

 Ｑ．フォント「kan5x5comic.ttf」に変換したけどのインストールが分かりません。
 Ａ．ほとんどの環境ではフォントフォルダにコピーするだけ(もしくは上書き)のはずです。

     Windowsの場合
     C:\Windows\Fonts\kantray5x5comic.ttf

     PuppyLinuxの場合
     /usr/share/fonts/default/TTF/kantray5x5comic.ttf

 Ｑ．「kan5x5comic」はなんでドットフォントでは無いのですか？
 Ａ．「kan5x5comic」はいわゆる「アンチック体」です。漫画とかでよくある「漢字はゴシック体・ひらがなは明朝体」みたいなのを参考にしました。
      ドット絵のひらがなは拡大すると見づらいのでドット絵じゃないグリフも5x5に縮小した時に潰れないグリフも両方必要だったので「活」と「漫」を混ぜたデザインに。

     ふきだし - Wikipedia(漢字はゴシック体、かなはアンチック体（antique=アンティークの意）となっているのである（これをアンチゴチという）)
     https://ja.wikipedia.org/wiki/%E3%81%B5%E3%81%8D%E3%81%A0%E3%81%97


３．   作者について、例えば連絡先。

 更新情報はGitHubやブログを確認してください。

  ooblog/LTsv10kanedit(GitHub)
  https://github.com/ooblog/LTsv10kanedit

 [kantray] - 大風呂ダ敷
  http://d.hatena.ne.jp/ooblog/searchdiary?word=*[kantray]


# Copyright (c) 2016 ooblog
# License: MIT
# https://github.com/ooblog/LTsv10kanedit/blob/master/LICENSE

