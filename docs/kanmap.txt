「kanmap」は「LTsv10kanedit(tsvtool10)」を用いたグリフ進捗ビュアーです。
version(branch):20170114S031328	modify:20170115U100940

目次

 ⓪-0．ライセンス及びソフト使用の補足ガイドライン
 ⓪-1．インストール(ダウンロード・アンインストール)＆セットアップ
 ⓪-2．その他現在わかっている不具合や今後の課題
 ①-0．「kanmap」の使い方(初回起動・表示編)
 ①-1．「kanmap」の使い方(漢字配列編集編)
 ②-0．「kanmap.py」の関数一覧
 ③-0．「kanmap」のＦＡＱ
 ④-0．作者について、例えば連絡先。

⓪-0．ライセンス及びソフト使用の補足ガイドライン

 ※「MIT License」準拠。

   MIT License - Choose a License
   http://choosealicense.com/licenses/mit/

   licenses/MIT_license - Open Source Group Japan Wiki - Open Source Group Japan - OSDN
   https://ja.osdn.net/projects/opensource/wiki/licenses%2FMIT_license

   MITライセンスを1行1行読んでいく | プログラミング | POSTD
   http://postd.cc/mit-license-line-by-line/

 ※口語的説明。
   ・「LICENSE」も含めソースコードの閲覧やコピーに制限を設けない事。
   ・いかなる場合においても作者または著作権者は一切責任を負わない事。


⓪-1．インストール(ダウンロード・アンインストール)＆セットアップ

 ※Pythonは別途インストールされているものとします(Pythonの導入分からない人は「「LTsv10.txt」の⑩-0．「L:Tsv」のＦＡＱ」も参考)。
 ダウンロードは「https://github.com/ooblog/LTsv10kanedit」にある「Clone or download」ボタンを押すと出る「Download ZIP」メニューをクリック。

 インストールは任意(なるだけユーザーディレクトリ内)のフォルダに「LTsv10kanedit-master.zip」を解凍するだけです(「LTsv10kanedit-master」フォルダが作成されるはずです)。
 「*.py」のパーミッションがOFFになってたら実行可能に変更、Wineで使う場合は「wine_sh」フォルダ内の「*.sh」のWineパスを適宜修正。
 最初に「kanmap.py」を起動(前バージョンの「LTsv/kanpickle.bin」ある場合は一旦削除してから)。「LTsv/kanpickle.bin」を新規作成してください。
 「LTsv/kanpickle.bin」を初期化しない場合グリフ座標データが蓄積するまで起動や動作が重くなるか、バージョン(ブランチ)によってはエラーになる場合があります。
 詳細は「①-0．「kanmap」の使い方(初回起動・表示編)」を参考。

 フォント「kan5x5comic.ttf」も用意する場合は「「kanfont.txt」の③-0．「kanfont」のＦＡＱ」を参考。

   ooblog/LTsv10kanedit: 「L:Tsv」の読み書きを中心としたモジュール群と漢字入力「kanedit」のPythonによる実装です(準備中)。
   https://github.com/ooblog/LTsv10kanedit

 アンインストールはインストール時に作成した「LTsv10kanedit-master」フォルダを削除するだけです。


⓪-2．その他現在わかっている不具合や今後の課題

 Python 2.7.6(Tahrpup6.0.5)およびPython3.4.4(Wine1.7.18)で開発しています。Windows,cygwin,darwinなどでの動作は確認しておりません。
 フォント(グリフ)「kan5x5comic」は半角と全角の幅の比率が約5:3(1024:624)なのでアスキーアートで問題になる場合があります。グリフ不足で表示できない文字などあります。
 「kan5x5comic.ttf」と「kan5x5.ttf」を同時に入れると麻雀牌が表示されない(「kan5x5.ttf」の絵文字代替4x5文字が優先される)場合があります。
 私用領域と呼ばれる環境に左右される文字コードを漢直鍵盤の制御に用いてます。「kan5x5comic.ttf」を用意しないとソースが見辛い可能性があります。
 人名に使える漢字の異体字を漢字配列「LTsv/kanmap.tsv」から単漢字辞書「LTsv/kanchar.tsv」に移管作業中。なので漢直鍵盤の漢字配列「LTsv/kanmap.tsv」が大幅に変更するかも。
 マウスボタンの取得は保留。ホイールの取得は放置。tkk方面は手を出さない予定(コンボボックスなどはGTKのみサポート)。
 GTKのコールバックから受けとる構造体を扱う方法が不明のため、GUIイベント経由のPCキーボード取得やファイルダイアログからのキャンセル取得などが不明。
 「docs/」フォルダ内のドキュメントを「docs/kanedit_etc.tsv」ベースで描き直し中。執筆途中状態の関数一覧タグ解説項目あり。
 「LTsv/LTsv_doc.py」でタグの順序が厳格という問題があるのでいっその事スクリプト言語ごと新規に作ろうと思います(TSFの開発)。

 LTsv版の「kanedit.py」の開発を凍結してTSF版の「kanedit」を作成する予定です。言語の開発には時間が必要なので、平行してVim版「LTsv/kanedit.vim」も開発です。
 「LTsv/kanedit.vim」と「kanedit.py」とで操作方法が乖離してますがTSF版もVim版の方向になるべく揃える予定です。LTsv版は互換性の維持程度に止まると思います。

   プログラミング言語「TSF_Tab-Separated-Forth」開発予定。
   https://github.com/ooblog/TSF1KEV


①-0．「kanmap」の使い方(初回起動・表示編)

 事前にグリフを「LTsv/kanpickle.bin」へ積み込む事で「kanedit」「kanfont」などの動作がスムーズになります。
 「kanmap.py」を起動すると上部に漢字配列「LTsv/kanmap.tsv」、下部に単漢字辞書「LTsv/kanchar.tsv」を表示します。
 「kanmap.py」を終了する時に「LTsv/kanpickle.bin」と「kanmap.png」を保存します(PNGの生成はGTKのみ)。


①-1．「kanmap」の使い方(漢字配列編集編)

  漢直鍵盤          漢直鍵盤の入力操作は「「LTsv10.txt」の⑨-2．漢直鍵盤の操作方法」を参考。
  小さい文字の上でタップ          カーソル点灯。クリップボードに１文字転送。
  「clipfind」をタップ            クリップボードの文字で検索してカーソル点灯。漢直鍵盤も同様に移動。複数同じ文字がある場合最初の文字を表示するので注意。
  「update☐」にチェック☑        ONの状態で[Ctrl]+[S]もしくは「kanmap.py」を終了すると「LTsv/kanmap.tsv」を上書保存。
  「kbdfind☐」にチェック☑       ONの状態なら漢直鍵盤の入力操作で検索してカーソル点灯。
  「rewrite☐」にチェック☑       ONの時かつ漢字配列カーソル点灯状態で、単漢字辞書文字タップすると漢字配列の文字を差替。
  「swap☐」にチェック☑          ONの時かつ漢字配列カーソル点灯状態で、別の漢字配列文字タップすると漢字配列の文字同士を交換。


②-0．「kanmap.py」の関数一覧

 「kanmap.py」の解説は準備中です。


③-0．「kanmap」のＦＡＱ

 Ｑ．「Tkinter」で「kanmap.png」が保存されないのですが？
 Ａ．「Tkinter」では「canvas」を画像として保存する方法が不明なので、[PrtSc]キーとかでキャプチャソフトを起動してください。

 Ｑ．「kanmap.png」に「LTsv/kanmap.tsv」のフォントが保存されるのですか？
 Ａ．グリフの座標データが保存されるのは「LTsv/kanpickle.bin」です。「kanmap.png」は進捗確認用の画像です。
     単漢字辞書「LTsv/kanchar.tsv」のSVGを「LTsv/kanpickle.bin」にPythonのパイクルとして積み込みます。

    12.1. pickle — Python オブジェクトの直列化 — Python 3.5.2 ドキュメント
    http://docs.python.jp/3/library/pickle.html

 Ｑ．「kanmap.png」の空白が多い気がします。
 Ａ．単漢字辞書「LTsv/kanchar.tsv」で扱ってる文字がまだまだ不十分なので同時にグリフデータも不足するためです。いわゆる開発中の画面状態です。
 一見表示されてない漢字も「LTsv/kanmap.tsv」で扱ってる漢字はクリップボードに取得できます。

 Ｑ．編集追加したはずのグリフが「kanedit」に反映されない。
 Ａ．「LTsv/kanpickle.bin」を一旦手動で削除して「kanmap.py」をもう一度起動。「LTsv/kanpickle.bin」が初期化されるはずです。


④-0．作者について、例えば連絡先。

 更新情報はGitHubやブログを確認してください。

   ooblog/LTsv10kanedit(GitHub)
   https://github.com/ooblog/LTsv10kanedit

   [kanedit] - 大風呂ダ敷
   http://d.hatena.ne.jp/ooblog/searchdiary?word=*[kanedit]


# Copyright (c) 2016 ooblog
# License: MIT
# https://github.com/ooblog/LTsv10kanedit/blob/master/LICENSE


