 [L:Tsv|
code	UTF-8
enter	LF
tab	4
program	LTsv_doc.py
1st		LTsv_doc
LTsvver	20170119R141608
modify	20170125W122635
|L:Tsv]

[LTsv_doc|
main	<＠kanedit_etc_main>
tagseparate	*
outdir	../docs/
outlist	<＠kanedit_etc_outlist>
defdir	../LTsv/
deftag	L:<！	R:>
defindent	firstL:<？firstL>	firstR:<？firstR>	restL:<？restL>	restC:<？restC>	restR:<？restR>	restRLast:<？restRLast>
|LTsv_doc]

[<＠kanedit_etc_main>|
<？kanedit_etc_ext>
|<＠kanedit_etc_main>]

[<？kanedit_etc_ext>|
.+\.html?	<＃kanedit_etc_html>
.+\.css	<＃kanedit_etc_css>
.*	<＃kanedit_etc_txt>
|<？kanedit_etc_ext>]

[<＃kanedit_etc_css>|
@charset "utf-8";
@font-face{
  font-family: "kan5x5comic";
  src: url("https://ooblog.github.io/kan5x5comic.woff") format('woff');
}
.kan5x5comic{
  font-family: "kan5x5comic";
}
@font-face{
  font-family: "kan5x5";
  src: url("https://ooblog.github.io/kan5x5.woff") format('woff');
}
.kan5x5{
  font-family: "kan5x5";
}
body{
  background-color: white;
}
mark{
  background-color: white;
  border: 1px pink solid;
}
mark.applogo{
  border: 0px;
}
 mark.applogo > img{
   margin: -1rem 0rem -1rem;
   vertical-align: middle;
   border: 1px pink solid;
 }
header{
  border: 1px gray dotted;
  padding: 1rem;
}
 .yonmoji_root{
   font-family: "kan5x5comic";  font-size: 1rem;
   line-height: 1rem;
   float: left;
   margin-top: -0.5rem;
   padding-right: 0.5rem;
 }
 .yonmoji_root > a:nth-child(odd){
   text-decoration: none;
 }
 .yonmoji_sitemap{
   float: right;
 }
 yonmoji_both{
   clear: both;
 }
section,aside,article{
  margin-top: 1rem;
  border: 2px black solid;
  padding: 1rem;
}
input.yonmoji_entry{
  border: solid 1px orange;
  width: 12rem;
}
input.yonmoji_entry:focus{
  border: solid 2px IndianRed;
}
 .yonmoji{
   width: 100%;  margin: 0 auto;
   text-align: center;
   padding-top: 1rem;
   padding-bottom: 0rem;
 }
 .yonmoji_logo{
   font-family: "kan5x5comic";  font-size: 5rem;
   line-height: 5rem;
   width: 10rem;
   height: 10rem;
   margin: 0 auto;
 }
 .yonmoji_word{
   font-family: "kan5x5comic";  font-size: 2rem;
   line-height: 2rem;
   float: left;
   margin: 0rem;
 }
 .sidepages{
  width: 20%; min-width: 200px;
  padding: 0rem;
  text-align: center;
  float: right;
 }
 .sidepages ul{
  margin-left: -2rem
 }
 .sidepages li{
  margin-left: 0rem;
  list-style-type: none;
  display: inline-block;
 }
 article > div{
  margin-top: 0.5rem;
  border: 1px gray solid;
  padding: 1rem;
 }
span.kan5x5comic{
 font-family: "kan5x5comic";
}
p.capcenter{
  text-align: center;
}
footer{
  margin-top:1rem;
  float: both;
  border: 0px;
  text-align: center;
}
 .gotop{
  margin-top:1rem;
  padding: 0rem;
  width: 7rem;
  height: 2rem;
  float: right;
  border: 0px;
  text-align: right;
  background-image: linear-gradient(to top right, transparent 48%, gray 50%, transparent 51%);
 }
p.ooblog{
  margin-top:-1rem;
  text-align: left;
  padding: 1rem 1rem 0em;
}
dt{
  font-weight: bold;
  word-wrap: break-word; word-break: break-all;
}
 dl.faqlink > dt{
  margin-left: 3rem;
 }
 dl.inputstroke > dt{
  width: 15rem;
  float: left;
 }
dd{
  word-wrap: break-word; word-break: break-all;
}
 dl.faq > dd{
  margin-left: 0px;
 }
 dl.faqlink > dd{
  margin-left: 3rem;
 }
 dl.inputstroke > dd{
  margin-left: 15rem;
 }
h1{ font-size: 2.0rem; margin: 1rem 0.5rem 0.5rem; }
h2{ font-size: 1.8rem; margin: 1rem 0.5rem 0.5rem; }
h3{ font-size: 1.6rem; margin: 1rem 0.5rem 0.5rem; }
h4{ font-size: 1.4rem; margin: 1rem 0.5rem 0.5rem; }
h5{ font-size: 1.2rem; margin: 1rem 0.5rem 0.5rem; }
h6{ font-size: 1.0rem; margin: 1rem 0.5rem 0.5rem; }

/*
<？ooblog>
*/
|<＃kanedit_etc_css>]

[<＃kanedit_etc_txt>|
<？title>
version(branch):<＠L:TsvLTsvver><？@T>modify:<？modify>

<＃kanedit_maporindex>

<＃kanedit_menus><＃kanedit_pages><？ooblog>
|<＃kanedit_etc_txt>]

[<＃kanedit_etc_html>|
<html lang="ja"><head>
 <meta charset="UTF-8" />
 <meta name="description" content="">
 <title><？title></title>
 <link rel="stylesheet" type="text/css" href="LTsv_doc.css" />
 <link rel="icon" type="image/png" href="<？favicon>" />
</head><body>

 <header><nav>
  <div class="yonmoji_root"><a href="https://ooblog.github.io/" rel="publisher" title="<？yakuyon>">約四<br /></a><a href="https://ooblog.github.io/" rel="publisher" title="<？yakuyon>">文字</a></div>
  <？breadcrumbs>
  <br class="yonmoji_both" />
 </div></header>

 <aside class="sidepages"><nav>
  <ul>
   <li><a href="index.html"><？titleimg/software-0></a></li>
   <li><a href="kanfont.html"><？titleimg/software-2></a></li>
   <li><a href="kanmap.html"><？titleimg/software-3></a></li>
   <li><a href="kanedit.html"><？titleimg/software-1></a></li>
   <li><a href="kanzip.html"><？titleimg/software-4></a></li>
   <li><a href="LTsv_doc.html"><？titleimg/software-5></a></li>
   <li><a href="KEV.html"><？titleimg/software-6></a></li>
  </ul>
  <？P>
   <a href="404.html" title="404">「L:Tsv」のsitemap(404)</a>
  <？/P>
 </nav></aside>

 <section class="mainpages">
  <h1><？title></h1>
  <？P>
   version(branch):<＠L:TsvLTsvver><？@T>modify:<？modify><？BR>
  <？/P>
  <h2><＃kanedit_maporindex></h2>
  <ul>
   <＃kanedit_menus>
  </ul>
 </section>

<＃kanedit_pages>

 <div class="gotop"><a href="#top">&uarr;Top</a></div>
 <footer>
  <p>site generator "<？https/ooblog:LTsv_doc.py>" repository：<？https/ooblog:LTsv10repository></p>
  <p class="ooblog"><？ooblog></p>
 </footer>
</body></html>
|<＃kanedit_etc_html>]

[<＃kanedit_maporindex>|
404	サイトマップ
.*	目次
|<＃kanedit_maporindex>]

[<＃kanedit_menus>|
404	<？list/software-0>*<？list/software-1>*<？list/software-2>*<？list/software-3>*<？list/software-4>*<？list/software-5>
index|LTsv10	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/aboutLTsv-0>*<？list/aboutLTsv-1><？list/LTsv_printf-0>*<？list/LTsv_printf-1><？list/LTsv_file-0><？list/LTsv_time-0>*<？list/LTsv_time-1><？list/LTsv_calc-0>*<？list/LTsv_calc-1><？list/LTsv_joy-0>*<？list/LTsv_joy-1>*<？list/LTsv_joy-2><？list/LTsv_kbd-0>*<？list/LTsv_kbd-1><？list/LTsv_gui-0>*<？list/LTsv_gui-1><？list/LTsv_glyph-0>*<？list/LTsv_glyph-1>*<？list/LTsv_glyph-2>*<？list/LTsv_glyph-3>*<？list/LTsv_glyph-4>*<？list/LTsv_glyph-5><？list/LTsv10_faq-0><？list/address-0>
kanedit	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/kanedit_usage-0><？list/kanedit-0>*<？list/kanedit-1><？list/kanedit_faq-0><？list/address-0>
kanfont	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/kanfont_usage-0><？list/kanfont-0>*<？list/kanfont-1>*<？list/kanfont-2><？list/kanfont_faq-0><？list/address-0>
kanmap	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/kanmap_usage-0>*<？list/kanmap_usage-1><？list/kanmap-0><？list/kanmap_faq-0><？list/address-0>
kanzip	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/kanzip_usage-0><？list/kanzip-0><？list/kanzip_faq-0><？list/address-0>
LTsv_doc	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/LTsv_doc_usage-0><？list/LTsv_doc-0>*<？list/LTsv_doc-1>*<？list/LTsv_doc-2><？list/LTsv_doc_faq-0><？list/address-0>
KEV	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/KEV_usage-0>*<？list/KEV_usage-1>*<？list/KEV_usage-2>*<？list/KEV_usage-3><？list/KEV-0><？list/KEV_faq-0><？list/KEV_interpret-0>*<？list/KEV_interpret-1>*<？list/KEV_interpret-2>*<？list/KEV_interpret-3>*<？list/KEV_interpret-4><？list/address-0>
.*	<？list/License-0>*<？list/License-1>*<？list/License-2><？list/address-0>
|<＃kanedit_menus>]

[<＃kanedit_pages>|
404	
index|LTsv10	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/aboutLTsv-0>*<？section/aboutLTsv-1><？section/LTsv_printf-0>*<？section/LTsv_printf-1><？section/LTsv_file-0><？section/LTsv_time-0>*<？section/LTsv_time-1><？section/LTsv_calc-0>*<？section/LTsv_calc-1><？section/LTsv_joy-0>*<？section/LTsv_joy-1>*<？section/LTsv_joy-2><？section/LTsv_kbd-0>*<？section/LTsv_kbd-1><？section/LTsv_gui-0>*<？section/LTsv_gui-1><？section/LTsv_glyph-0>*<？section/LTsv_glyph-1>*<？section/LTsv_glyph-2>*<？section/LTsv_glyph-3>*<？section/LTsv_glyph-4>*<？section/LTsv_glyph-5><？section/LTsv10_faq-0><？section/address-0>
kanedit	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/kanedit_usage-0><？section/kanedit-0>*<？section/kanedit-1><？section/kanedit_faq-0><？section/address-0>
kanfont	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/kanfont_usage-0><？section/kanfont-0>*<？section/kanfont-1>*<？section/kanfont-2><？section/kanfont_faq-0><？section/address-0>
kanmap	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/kanmap_usage-0>*<？section/kanmap_usage-1><？section/kanmap-0><？section/kanmap_faq-0><？section/address-0>
kanzip	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/kanzip_usage-0><？section/kanzip-0><？section/kanzip_faq-0><？section/address-0>
LTsv_doc	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/LTsv_doc_usage-0><？section/LTsv_doc-0>*<？section/LTsv_doc-1>*<？section/LTsv_doc-2><？section/LTsv_doc_faq-0><？section/address-0>
KEV	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/KEV_usage-0>*<？section/KEV_usage-1>*<？section/KEV_usage-2>*<？section/KEV_usage-3><？section/KEV-0><？section/KEV_faq-0><？section/KEV_interpret-0>*<？section/KEV_interpret-1>*<？section/KEV_interpret-2>*<？section/KEV_interpret-3>*<？section/KEV_interpret-4><？section/address-0>
.*	<？section/License-0>*<？section/License-1>*<？section/License-2><？section/address-0>
|<＃kanedit_pages>]

[<？breadcrumbs>|
404\.html?	<span> &#62; <a href="https://ooblog.github.io/LTsv.html" title="LTsv - <？yakuyon>">LTsv</a> &#62; <mark>404</mark> <span class="yonmoji_sitemap"><a href="https://ooblog.github.io/404.html" title="404 - <？yakuyon>">「約四文字」のsitemap(404)</a></span>
.*	<span> &#62; <a href="https://ooblog.github.io/LTsv.html" title="LTsv - <？yakuyon>">LTsv</a> &#62; <mark class="applogo"><？applogo></mark></span> <span class="yonmoji_sitemap"><a href="https://ooblog.github.io/404.html" title="404 - <？yakuyon>">「約四文字」のsitemap(404)</a></span>
|<？breadcrumbs>]
[<？applogo>|
index\.html?	<img src="<？favicon>" width="48" height="48" alt="<？LTsv>" title="<？LTsv>">
kanedit\.html?	<img src="<？favicon>" width="48" height="48" alt="kanedit" title="kanedit">
kanfont\.html?	<img src="<？favicon>" width="48" height="48" alt="kanfont" title="kanfont">
kanmap\.html?	<img src="<？favicon>" width="48" height="48" alt="kanmap" title="kanmap">
kanzip\.html?	<img src="<？favicon>" width="48" height="48" alt="kanzip" title="kanzip">
LTsv_doc\.html?	<img src="<？favicon>" width="48" height="48" alt="LTsv_doc" title="LTsv_doc">
KEV\.html?	<img src="<？favicon>" width="48" height="48" alt="KEV" title="KEV">
|<？applogo>]

[<？favicon>|
(index|404)\.html?	LTsv10_logo.png
kanedit\.html?	kanedit_logo.png
kanfont\.html?	kanfont_logo.png
kanmap\.html?	kanmap_logo.png
kanzip\.html?	kanzip_logo.png
LTsv_doc\.html?	LTsv_doc_logo.png
KEV\.html?	KEV_logo.png
|<？favicon>]

[<？section/License-0>*<？section/License-1>*<？section/License-2>|
.+\.html?	<section>@E <h3 id="License-@c"><？title/License-@c></h3>@E<＃contents/License-@c>@E</section>@E
.*	@E<？title/License-@c>@E@E<＃contents/License-@c>@E
|<？section/License-0>*<？section/License-1>*<？section/License-2>]

[<＃contents/License-0>|
<？P> ※「MIT License」準拠。<？BR>
<？/P>
<？https/License:mit>

<？https/License:osdn>

<？https/License:postd>

<？P> ※口語的説明。<？BR>
   ・「<？https/License:LICENSE>」も含めソースコードの閲覧やコピーに制限を設けない事。<？BR>
   ・いかなる場合においても作者または著作権者は一切責任を負わない事。<？BR><？/P><＃contents/License-0:kandic>
|<＃contents/License-0>]

[<＃contents/License-0:kandic>|
kanedit	 @E<？P>※「<＠kanedit_etc_outlist>」固有の問題への言及。<？BR>@E   ・<？DICchar><？DICword>などで翻訳ミスもしくは言い回しが古くなるなど日本語(英語中国語なども含む)の不具合に対しても作者または著作権者にはメンテナンス義務等はありません。<？BR><？/P>
|<＃contents/License-0:kandic>]

[<＃contents/License-1>|
<？P> ※Pythonは別途インストールされているものとします(Pythonの導入分からない人は「<？index/LTsv10_faq-0>」も参考)。<？BR>
 ダウンロードは「<？https/ooblog:LTsv10repository>」にある「Clone or download」ボタンを押すと出る「Download ZIP」メニューをクリック。<？BR>
<？/PP>
 インストールは任意(なるだけユーザーディレクトリ内)のフォルダに「LTsv10kanedit-master.zip」を解凍するだけです(「LTsv10kanedit-master」フォルダが作成されるはずです)。<？BR>
 「*.py」のパーミッションがOFFになってたら実行可能に変更、Wineで使う場合は「<？https/License:wine_sh>」フォルダ内の「*.sh」のWineパスを適宜修正。<？BR>
 最初に「<？https/kanmap.py>」を起動(前バージョンの「LTsv/kanpickle.bin」ある場合は一旦削除してから)。「LTsv/kanpickle.bin」を新規作成してください。<？BR>
 「LTsv/kanpickle.bin」を初期化しない場合グリフ座標データが蓄積するまで起動や動作が重くなるか、バージョン(ブランチ)によってはエラーになる場合があります。<？BR>
 詳細は「<？index/kanmap_usage-0>」を参考。<？BR>
<？/PP>
 フォント「kan5x5comic.ttf」も用意する場合は「<？index/kanfont_faq-0>」を参考。<？BR>
<？/P>
<？https/License:LTsv10kanedit>

<？P> アンインストールはインストール時に作成した「LTsv10kanedit-master」フォルダを削除するだけです。<？BR><？/P>
|<＃contents/License-1>]

[<＃contents/License-2>|
<？P> Python 2.7.6(Tahrpup6.0.5)およびPython3.4.4(Wine1.7.18)で開発しています。Windows,cygwin,darwinなどでの動作は確認しておりません。<？BR>
 フォント(グリフ)「kan5x5comic」は半角と全角の幅の比率が約5:3(1024:624)なのでアスキーアートで問題になる場合があります。グリフ不足で表示できない文字などあります。<？BR>
 「kan5x5comic.ttf」と「kan5x5.ttf」を同時に入れると麻雀牌が表示されない(「kan5x5.ttf」の絵文字代替4x5文字が優先される)場合があります。<？BR>
 私用領域と呼ばれる環境に左右される文字コードを<？VRkeyboard>の制御に用いてます。「kan5x5comic.ttf」を用意しないとソースが見辛い可能性があります。<？BR>
 人名に使える漢字の異体字を<？DICmap>から<？DICchar>に移管作業中。なので<？VRkeyboard>の<？DICmap>が大幅に変更するかも。<？BR>
 マウスボタンの取得は保留。ホイールの取得は放置。tkk方面は手を出さない予定(コンボボックスなどはGTKのみサポート)。<？BR>
 GTKのコールバックから受けとる構造体を扱う方法が不明のため、GUIイベント経由の<？PCkeyboard>取得やファイルダイアログからのキャンセル取得などが不明。<？BR>
 「docs/」フォルダ内のドキュメントを「<？https/kanedit_etc.tsv>」ベースで描き直し中。執筆途中状態の関数一覧タグ解説項目あり。<？BR>
 「<？https/LTsv_doc.py>」でタグの順序が厳格という問題があるのでいっその事スクリプト言語ごと新規に作ろうと思います(TSFの開発)。<？BR>
<？/PP>
 LTsv版の「<？https/kanedit.py>」の開発を凍結してTSF版の「kanedit」を作成する予定です。言語の開発には時間が必要なので、平行してVim版「<？https/kanedit.vim>」も開発です。<？BR>
 「<？https/kanedit.vim>」と「<？https/kanedit.py>」とで操作方法が乖離してますがTSF版もVim版の方向になるべく揃える予定です。LTsv版は互換性の維持程度に止まると思います。<？BR>
<？/P>
<？https/kanedit_faq:TSF1KEV>
<？P> TSF版作る前に<？DICmap>のグリフ圧縮アルゴリズムを「5x10x」から「5x10x20x」に変更したいので、移行ツール作成→一時的に無圧縮→新アルゴリズムのグリフと交換などの間多少の混乱が発生するかと思います。<？BR><？/P>
|<＃contents/License-2>]

[<？https/License:mit>*<？https/License:osdn>*<？https/License:postd>*<？https/License:LTsv10kanedit>|
:<＄web/License-0>	MIT License - Choose a License
:<＄url/License-0>	http://choosealicense.com/licenses/mit/
:<＄web/License-1>	licenses/MIT_license - Open Source Group Japan Wiki - Open Source Group Japan - OSDN
:<＄url/License-1>	https://ja.osdn.net/projects/opensource/wiki/licenses%2FMIT_license
:<＄web/License-2>	MITライセンスを1行1行読んでいく | プログラミング | POSTD
:<＄url/License-2>	http://postd.cc/mit-license-line-by-line/
:<＄web/License-3>	ooblog/LTsv10kanedit: 「L:Tsv」の読み書きを中心としたモジュール群と漢字入力「kanedit」のPythonによる実装です(準備中)。
:<＄url/License-3>	<？url/ooblog:LTsv10repository>
.+\.html?	<dl><dt><＄web/License-@c></dt><dd><a href="<＄url/License-@c>" title="<＄web/License-@c>"><＄url/License-@c></a></dd></dl>
.*	   <＄web/License-@c><？BR>@E   <＄url/License-@c><？BR>
|<？https/License:mit>*<？https/License:osdn>*<？https/License:postd>*<？https/License:LTsv10kanedit>]

[<？section/aboutLTsv-0>*<？section/aboutLTsv-1>|
.+\.html?	<section>@E <h3 id="aboutLTsv-@c"><？title/aboutLTsv-@c></h3>@E<＃contents/aboutLTsv-@c>@E</section>@E
.*	@E<？title/aboutLTsv-@c>@E@E<＃contents/aboutLTsv-@c>@E
|<？section/aboutLTsv-0>*<？section/aboutLTsv-1>]

[<＃contents/aboutLTsv-0>|
<？P> データ間の区切りをタブ(\t)、「label:data」の様にコロン(:)でデータにラベルを付けたのが「LTSV」です。<？BR>
 素のLTSVファイル自体は単なるログのフォーマットです。<？BR>
<？/P>
<？https01-0:ltsvorg>
<？https01-0:ltsvfaq>
<？P> 「L:Tsv」は「*.tsv」「*.ltsv」ファイルの事を差す場合もありますがLTSVパーサ類を含めた「tsvtool」も含めて「L:Tsv」と呼ぶ場合があります。<？BR>
 複数のLTSVを１つのファイルで保存できるようタグで区切ったり、日時処理や分数電卓やGTK＆Tkinterなどを加えたり、Python2,3のprint関数バージョン違いを吸収させたりと、<？BR>
 LTSVパーサに雑多な拡張を重ねていった結果、漢直エディタ環境と化したモジュール群が今の「L:Tsv」です。<？BR><？/P>
|<＃contents/aboutLTsv-0>]

[<？https01-0:ltsvorg>*<？https01-0:ltsvfaq>|
:<＄web/ltsv-0>	Labeled Tab-separated Values (LTSV)
:<＄url/ltsv-0>	http://ltsv.org/
:<＄web/ltsv-1>	LTSV FAQ - LTSV って何? どういうところが良いの?
:<＄url/ltsv-1>	http://d.hatena.ne.jp/naoya/20130209/1360381374
.+\.html?	<dl><dt><＄web/ltsv-@c></dt><dd><a href="<＄url/ltsv-@c>" title="<＄web/ltsv-@c>"><＄url/ltsv-@c></a></dd></dl>
.*	   <＄web/ltsv-@c><？BR>@E   <＄url/ltsv-@c><？BR>
|<？https01-0:ltsvorg>*<？https01-0:ltsvfaq>]

[<＃contents/aboutLTsv-1>|
<？P>  データ間の区切りはタブ(\t)です。一般的なCSVやLTSV等と事なり、複数のタブがあっても1つのタブとみなします(文字列長0のデータを扱う場合はラベル推奨)。<？BR>
 先頭データの事をfirst、先頭以降のデータの事をrestと呼びます。例えばLispでも、car関数の代わりにfirst関数、cdr関数の代わりにrest関数が使えたはず。<？BR>
 firstは縦軸ラベルとして使う場合があります。restでは「label:data」の様なラベルとデータをコロン(:)で区切る形の軸ラベルが付けられます。簡単に言うとrestでLTSVが使えます。<？BR>
 LTSVを「[tag<？&#x7C;>」と「<？&#x7C;>tag]」の様に<？contents01-1:tagsplit><？BR>
 拡張子は「.ltsv」か「.tsv」。メモリ上など拡張子で区別できない場合でもメタタグで判定。メタタグが存在しない場合ファイル全体を１つのページとみなす。<？BR>
 first縦軸ラベル自体にコロン(:)が含まれる(「label:data」のようになってる)場合、ページ全体を１つのLTSVとみなす場合がある(「LTsv_label2dictint()」「LTsv_label2dictstr()」など)。
<？/PP>
 メタタグ「L:Tsv」のfirst縦軸ラベルの解説。<？BR>
<？/P>
<？DLDT>  [L:Tsv<？&#x7C;><？/DTDD>                    「L:Tsv」ファイルの宣言です。マジックナンバー代わりなのでなるだけファイルの先頭に。<？/DD/DL>
<？DLDT>   code<？/DTDD>                       文字コードの宣言で「UTF-8」。Windowsだろうが半角は3バイトで保存するので注意。<？/DD/DL>
<？DLDT>   enter<？/DTDD>                      改行の宣言で「LF」。Windowsだろうが改行は1バイトで保存するので注意。<？/DD/DL>
<？DLDT>   tab<？/DTDD>                        タブインデントの宣言で半角スペース「4」。フォント「kan5x5comic」の半角と全角の幅の比率は約5:3(1024:624)なので注意。<？/DD/DL>
<？DLDT>   program<？/DTDD>                    「L:Tsv」ファイルをどの様に扱うかを表す規格名(プログラム名)を記述。例えば「LTsv_doc」では「LTsv_doc.py」。<？/DD/DL>
<？DLDT>   1st<？/DTDD>                        「L:Tsv」自体を何かのスクリプトとして実行する場合に最初に実行するページ指定を想定。例えば「LTsv_doc」では「LTsv_doc_tsv」など。<？/DD/DL>
<？DLDT>   LTsvver<？/DTDD>                    構文解析パーサのバージョン。「LTsv_file.py」の「LTsv_file_ver()」。<？/DD/DL>
<？DLDT>   modify <？/DTDD>                    「L:Tsv」ファイルの更新日時。「LTsv_time.py」の「LTsv_getdaytimestr(overhour=24,diffminute=0)」を想定。「LTsv_file.py」で「LTsv_savefile()」上書き時に更新。<？/DD/DL>
<？DLDT>  <？&#x7C;>L:Tsv]<？/DTDD>                    メタタグ「L:Tsv」を閉じます。<？contents01-1:tagsplit><？/DD/DL>
<？P>
「L:Tsv」のメタタグは「LTsv_newfile()」関数でも作成可能。「<？index/LTsv_file-0>」も参考。<？BR><？/P>
|<＃contents/aboutLTsv-1>]
[<？contents01-1:tagsplit>|
.*	タグで区切る事で１つのファイルに複数のCSVやLTSVやTXTといったページを格納できます。
|<？contents01-1:tagsplit>]

[<？section/LTsv_printf-0>*<？section/LTsv_printf-1>|
.+\.html?	<section>@E <h3 id="LTsv_printf-@c"><？title/LTsv_printf-@c></h3>@E<＃contents/LTsv_printf-@c>@E</section>@E
.*	@E<？title/LTsv_printf-@c>@E@E<＃contents/LTsv_printf-@c>@E
|<？section/LTsv_printf-0>*<？section/LTsv_printf-1>]

[<＃contents/LTsv_printf-0>|
<？P> 「<？https/LTsv_printf.py>」はPythonのprint関数の代わりにlibcのprintfを呼び出すモジュールです。<？BR>
 ・Wine上DOSのエラー要因だった<？CP932>などに変換させる事で範囲内の漢字が扱えるようになります。<？BR>
 ・変換できない文字は数値文字参照に変換されます。<？BR>
 ・その他数値文字参照(文字参照含む)の変換、全角半角大文字小文字ひらがなカタカナの変換などが扱えます。<？BR>
 ・単体風テストでは仮名変換「LTsv_kanare()」など関数群の挙動確認などができます。<？BR><？/P>

<！LTsv_printf.py>
|<＃contents/LTsv_printf-0>]

[LTsv_printf.py|
LTsv_getpreferredencoding()	「sys.stdout.encoding」(ターミナルのエンコード)を返す。	「sys.stdout.encoding」が取得できない(Noneを返す)場合は「locale.getpreferredencoding()」からターミナルのエンコード取得を試みる。
LTsv_libc_printf(LTsv_text,LTsv_log=None)	LTsv_textの文字列をターミナル(stdout)に表示する。LTsv_logと返り値を指定する事で変数にも出力追記できる。	LTsv_textに渡す文字列は「"{0}".format(data)」みたいに事前に「str.format()」などで加工する。	扱えない文字は数値文字参照(「咖喱」が「&#21654;&#21937;」)に変換される。	「ctypes.cdll.msvcrt(MS-DOS)」は1024バイト(文字数ではなくバイト)を超える文字列を扱えない様子。
LTsv_libc_printcat(LTsv_text)	上記LTsv_libc_printfからログ保存やL:Tsvタグエスケープ処理などを取り除いたもの。
LTsv_libc_printf_type(LTsv_text,LTsv_log=None)	Python2では「<？&lt;>type 'str'<？&gt;>」Python3だと「<？&lt;>class 'bytes'<？&gt;>」のようにprintfに渡すバイナリ文字列の変数の型を表示。	LTsv_logと返り値を指定する事で変数にも出力追記できる。
LTsv_utf2xml(LTsv_text)	LTsv_textの文字列を数値文字参照に変換。
LTsv_xml2utf(LTsv_text)	LTsv_textの文字参照(数値文字参照含む)を文字列に変換。
LTsv_kanare(LTsv_before,LTsv_recase)	全角半角大文字小文字ひらがなカタカナの変換を行います。LTsv_beforeに変換する文字列、LTsv_recaseで変換辞書指定。	変換辞書LTsv_recaseのパラメータは「<？index/LTsv_printf-1>」を参考。
LTsv_utf2ink(LTsv_text)	UTF-8をkantrayの「UTF-8点字」に変換(バイナリの点字表記)。	点字フォントが表示できる環境にないと動作確認は困難なので注意。
LTsv_ink2utf(LTsv_text)	上記「UTF-8点字」をUTF-8に戻す。	 データ破損を補完する機能はないので注意。
LTsv_subprocess(LTsv_subprocess_input="",LTsv_subprocess_shell=False)	ターミナルにコマンドを送る。実行結果も取得できる。	「LTsv_subprocess_shell=True」でgrepなどパイプライン処理のような事もできるようになるが、インジェクション脆弱性の恐れが発生するので注意。
LTsv_otherprocess(LTsv_otherprocess_input="")	別プロセスでコマンドを実行する。
|LTsv_printf.py]

[<＃contents/LTsv_printf-1>|
<？DLDT>   "Hira2Kata"<？/DTDD>         ひらがなをカタカナに。<？/DD/DL>
<？DLDT>   "Kata2Hira"<？/DTDD>         カタカナをひらがなに。<？/DD/DL>
<？DLDT>   "HiraKana2SeiH"<？/DTDD>     濁音を清音に。「ぱぴぷぺぽ」と「ぱぴぷぺぽ」は「はひふへほ」に。<？/DD/DL>
<？DLDT>   "HiraKana2SeiM"<？/DTDD>     濁音を清音に。「ばびぶべぼ」は「はひふへほ」に、「ぱぴぷぺぽ」を「まみむめも」に。<？/DD/DL>
<？DLDT>   "HiraKana2DakB"<？/DTDD>     清音を濁音に。「はひふへほ」は「ばびぶべぼ」に。<？/DD/DL>
<？DLDT>   "HiraKana2DakP"<？/DTDD>     清音を濁音に。「はひふへほ」は「ばびぶべぼ」に、「まみむめも」を「ぱぴぷぺぽ」に。<？/DD/DL>
<？DLDT>   "HiraKana2Han"<？/DTDD>      ひらがなもカタカナも半角に。<？/DD/DL>
<？DLDT>   "HiraKana2HanKaKe"<？/DTDD>  ひらがなもカタカナも「ヵヶ」も半角に。<？/DD/DL>
<？DLDT>   "Han2HiraEz"<？/DTDD>        半角をひらがなに(濁音は分離したまま)。<？/DD/DL>
<？DLDT>   "Han2KataEz"<？/DTDD>        半角をカタカナに(濁音は分離したまま)。<？/DD/DL>
<？DLDT>   "Han2Hira"<？/DTDD>          半角をひらがなに(濁音があっても１つの文字に統合)。<？/DD/DL>
<？DLDT>   "Han2Kata"<？/DTDD>          半角をカタカナに(濁音があっても１つの文字に統合)。<？/DD/DL>
<？DLDT>   "Alpha2BIG"<？/DTDD>         半角全角にかかわらずアルファベットを大文字に(キリル文字ギリシャ文字含む)。<？/DD/DL>
<？DLDT>   "Alpha2SML"<？/DTDD>         半角全角にかかわらずアルファベットを小文字に(キリル文字ギリシャ文字含む)。<？/DD/DL>
<？DLDT>   "Alpha2HAN"<？/DTDD>         大文字小文字にかかわらずアルファベットを半角に(キリル文字ギリシャ文字含まない)。<？/DD/DL>
<？DLDT>   "Alpha2ZENBS"<？/DTDD>       大文字小文字にかかわらずアルファベットを全角に(キリル文字ギリシャ文字含まない)。バックスラッシュは「＼」へ。<？/DD/DL>
<？DLDT>   "Alpha2ZENYen"<？/DTDD>      大文字小文字にかかわらずアルファベットを全角に(キリル文字ギリシャ文字含まない)。バックスラッシュは「￥」へ。<？/DD/DL>
|<＃contents/LTsv_printf-1>]

[<？section/LTsv_file-0>|
.+\.html?	<section>@E <h3 id="LTsv_file-@c"><？title/LTsv_file-@c></h3>@E<＃contents/LTsv_file-@c>@E</section>@E
.*	@E<？title/LTsv_file-@c>@E@E<＃contents/LTsv_file-@c>@E
|<？section/LTsv_file-0>]

[<＃contents/LTsv_file-0>|
<？P> 「<？https/LTsv_file.py>」は「L;Tsv」ファイルの基本的な読み書きモジュールです。
 ・「<？LTsv>」の本編です。主に「L:Tsv」の読み書きです。<？BR>
 ・Python2とPython3のテキストファイル読み込み方法の違いを吸収する手段にも使えます。<？BR>
 ・modify項目で「LTsv_getdaytimestr()」を使うので「LTsv_time.py」モジュールも必要。<？BR><？/P>

<！LTsv_file.py>
|<＃contents/LTsv_file-0>]

[LTsv_file.py|
LTsv_newfile(LTsv_program,LTsv_default=None)	「L:Tsv」ファイルを変数上に作成する。	 LTsv_programには「L:Tsv」ファイルを扱うプログラムまたは規格を記述。	LTsv_defaultには「L:Tsv」ファイル自体をスクリプトとして実行する場合の1stページの指定。	メタタグについては「<？index/aboutLTsv-1>」も参考。
LTsv_download(LTsv_url,LTsv_path,LTsv_reporthook=None)	ネット上のLTsv_urlにあるファイルをローカルのLTsv_pathに保存する。	ダウンロード中にLTsv_reporthook(count,blocksize,totalsize)をコールバックして状況報告させる事は可能(スレッド関係の扱いに注意)。
LTsv_zipload(LTsv_zip,LTsv_name,LTsv_path)	ローカル上のLTsv_zipにあるファイルをローカルのLTsv_pathに解凍する。元のzipファイルはそのまま。
LTsv_64load(LTsv_path,LTsv_codewidth=128)	ローカル上の画像ファイルなどをテキスト(base64)に変換した形で読み込む。元の画像ファイルはそのまま。
LTsv_loadfile(LTsv_path,LTsv_encoding="utf-8",LTsv_default=None)	ローカル上のLTsv_pathから「L:Tsv」ファイルを読み込む。	LTsv_encodingにテキストのコード指定。例えば<？CP932>を読み込むときは「LTsv_encoding="cp932"」が必要。	LTsv_defaultは読み込みできなかった場合の初期値を指定。
LTsv_readlinepages(LTsv_text)	LTsv_textテキスト内のタグ「[tag<？&#x7C;>」一覧を1行のLTSVとして取得する。
LTsv_getpage(LTsv_text,LTsv_tag,LTsv_default=None)	タグ「[LTsv_tag|」「|LTsv_tag]」で囲まれた範囲のLTSVページを取得。	LTsv_default(LTsv_page)はページを取得できなかった場合の初期値を指定。
LTsv_readlinedeno(LTsv_text)	LTSVページの行数を数える。LTsv_textに改行が無くても1行とみなす。	LTsv_textの文字列長が0の場合0を返す。
LTsv_readlinenum(LTsv_text,LTsv_linenum,LTsv_default=None)	0から数えた行数でLTSVページから1行読み込む。	LTsv_default(LTsv_line)は読み込めなかった場合の初期値を指定。
LTsv_readlinefirsts(LTsv_text)	LTSVページのfirst(縦軸ラベル)一覧を1行のLTSVとして取得。
LTsv_readlinerest(LTsv_text,LTsv_first,LTsv_default=None)	LTSVページからfirst(縦軸ラベル)指定で先頭以下データrestを1行読み込む。first(縦軸ラベル)の取得にはタブ文字が必要。	LTsv_default(LTsv_rest)はrestが読み込めなかった場合の初期値を指定。
LTsv_pickdatadeno(LTsv_line)	1行のLTSVに含まれるデータ個数を取得(firstも0個目のデータとみなす)。	「label:data」をラベルとデータに分ける場合は「LTsv_split_label_data()」などを併用する。
LTsv_pickdatanum(LTsv_line,LTsv_datanum,LTsv_default=None)	1行のLTSVから0から数えた項目数指定で1個読み込む(firstも0個目のデータとみなす)。	「label:data」をラベルとデータに分ける場合は「LTsv_split_label_data()」などを併用する。
LTsv_split_label_data(LTsv_labeldata,LTsv_seldata=True)	「label:data」からlabelかdataのどちらかを取得。LTsv_seldataがTrueならdata部分を、Falseならlabel部分を返す。
LTsv_pickdatas(LTsv_line,LTsv_dataL=0,LTsv_dataR=0)	1行のLTSVから0から数えた項目数指定で範囲内の複数データを読み込む(firstも0個目のデータとみなす)。いわゆるスライス操作。	LTsv_dataLとLTsv_dataRが逆(Tsv_dataRの方が小さい)の場合でも関数内で自動的に並び替える。	LTsv_dataLとLTsv_dataRが同じ場合差分が無いので読み込まない。
LTsv_pickdatafind(LTsv_line,LTsv_find)	LTsv_findが1行のLTSVの何項目にデータがあるか0から数える(firstも0個目のデータとみなす)。
LTsv_joindatanum(LTsv_line,LTsv_datanum,LTsv_default=None)	1行のLTSVのLTsv_datanum項目目にLTsv_default(LTsv_data)を追加する。	LTsv_datanumが0以下の場合先頭firstに追加。項目数以上の場合末尾に追加。	省略もしくは文字列長0の場合は何もしない。
LTsv_setdatanum(LTsv_line,LTsv_datanum,LTsv_default=None)	1行のLTSVのLTsv_datanum項目目にデータLTsv_default(LTsv_data)を上書する。	負数の場合や項目数以上の場合は何もしない。	 LTsv_default(LTsv_data)を省略もしくは文字列長0のデータの場合は項目を削除。
LTsv_pickdatalabel(LTsv_line,LTsv_label,LTsv_default=None)	1行のLTSVから「label:data」形式の横軸ラベル(LTsv_label)指定で1個読み込む。	LTsv_default(LTsv_data)は読み込みできなかった場合の初期値を指定。
LTsv_pickdic(LTsv_text,LTsv_first,LTsv_label)	「LTsv_readlinerest()」と「LTsv_pickdatalabel()」をひとまとめに。<？DICchar>読込用途。	first(縦軸ラベル)で指定行、restの横軸ラベル(LTsv_label)で指定列、データ1個を読み込む。
LTsv_setdatalabel(LTsv_line,LTsv_label,LTsv_default=None)	1行のLTSVの「label:data」形式横軸ベル(LTsv_label)項指定でデータLTsv_default(LTsv_data)を上書する。	元LTSVに存在しない横軸ラベル(LTsv_label)の場合末尾に追加。	LTsv_default(LTsv_data)を省略した場合に項目はラベルごと削除。	文字列長0のデータLTsv_default(LTsv_data)であっても省略しなかった場合は横軸ラベル項目を追加もしくは上書き。	上記LTsv_joindatanumやLTsv_setdatanumと事なりLTsv_setdatalabelでは「label:」が単独で存在(文字列0の「data」が存在できる)違いがあるので注意。
LTsv_sievelabels(LTsv_rest,LTsv_labels="")	データそのままにラベルを取り替える。	文字列0の「data」(データ数よりラベル数が多い場合を想定)は項目が消えるので注意。
LTsv_sievetuplelabels(LTsv_rest,*LTsv_labels)	「LTsv_sievelabels()」とほぼ同じだが、LTsv_labelがLTSVではなくタプル。
LTsv_pushlinenum(LTsv_text,LTsv_linenum,LTsv_default=None)	LTSVページに0から数えた行数指定で1行LTsv_default(LTsv_line)を追加する。	1行追加想定だけど複数行のテキスト挿入も可能。	LTsv_default(LTsv_line)を省略もしくは文字列長0のデータの場合は何もしない。
LTsv_overlinenum(LTsv_text,LTsv_linenum,LTsv_default=None)	LTSVページに0から数えた行数指定で1行LTsv_default(LTsv_line)を上書する。	1行上書想定だけど複数行のテキスト挿入も可能。	LTsv_default(LTsv_line)を省略もしくは文字列長0のデータの場合は1行削除。
LTsv_pushlinerest(LTsv_page,LTsv_first,LTsv_default=None)	LTSVページにfirst(縦軸ラベル)指定でFirstにrest(LTsv_default)を追加する。	LTsv_page内にLTsv_firstが存在しない場合LTsv_page末尾に追加。	LTsv_rest(LTsv_default)を省略した場合に項目を削除。文字列長0であっても省略しなかった場合は追加もしくは上書き。	文字列長0のrestデータでも縦軸ラベルfirst(縦軸ラベル)の末尾にはタブ文字が付加(「first\t\n」)。
LTsv_putpage(LTsv_text,LTsv_tag,LTsv_default=None)	タグ「[LTsv_tag|」「|LTsv_tag]」で囲まれたLTSVページとしてLTsv_default(LTsv_page)を上書き。	LTsv_text内にLTsv_tagタグが存在しない場合末尾に追加。タグ名が文字列長0の場合は何もしない。	LTsv_page(LTsv_default)を省略の場合はページ削除。文字列長0であっても省略しなかった場合は追加もしくは上書き。
LTsv_putmodify(LTsv_text)	メタタグ「L:Tsv」の「modify」の更新のみを行う。「LTsv_getdaytimestr()」を使うので[LTsv_time.py]モジュールが必要。	「LTsv_newfile()」や「LTsv_savefile()」実行時と「LTsv_putmodify()」の時間はズレる場合がある事に注意。
LTsv_savedir(LTsv_path)	「LTsv_savefile()」「LTsv_saveplain()」で保存予定のファイル名が1個フォルダを必要とする場合、1個フォルダを作成する。	「os.mkdir()」を使うので、一気に深い階層のフォルダを作ろうとするとエラーになる。	「LTsv_savefile()」「LTsv_saveplain()」の内部で使用。
LTsv_savedirs(LTsv_path)	「LTsv_savefile()」「LTsv_saveplain()」で保存予定のファイル名が複数のフォルダを必要とする場合、複数のフォルダを作成する。	「os.makedirs()」を使って一気に深い階層のフォルダを作れてしまうので取扱い注意。
LTsv_savefile(LTsv_path,LTsv_default=None)	ローカルのLTsv_pathに「L:Tsv」ファイル、LTsv_default(LTsv_text)を書き込む。ファイル保存時にメタタグ「L:Tsv」の「modify」の更新。	「LTsv_savedir()」を内部で呼び出すのでフォルダ1個分の階層なら自動でフォルダ作成。	LTsv_default(LTsv_text)を省略の場合はファイル削除(フォルダはそのまま)。
LTsv_saveplain(LTsv_path,LTsv_plain)	ローカルのLTsv_pathにテキストファイルLTsv_plainを(LTsv_text)書き込む。	「LTsv_savedir()」を内部で呼び出すのでフォルダ1個分の階層なら自動でフォルダ作成される。
LTsv_labelzip(LTsv_labels,LTsv_datas)	LTsv_labelsを横軸ラベル、LTsv_datasをデータとして、	「label/tlabel/t…」と「data/tdata/t…」を1行のLTSV「label:data/tlabel:data/t…」に束ねる。
LTsv_unziplabel(LTsv_line)	1行のLTSV「label:data/tlabel:data/t…」からラベルだけを取り出して「label/tlabel/t…」に。
LTsv_unzipdata(LTsv_line)	1行のLTSV「label:data/tlabel:data/t…」からデータだけを取り出して「data/tdata/t…」に。
LTsv_unziplabelsdata(LTsv_line,LTsv_labels)	1行のラベル有りLTSV「label:data/tlabel:data/t…」からラベル該当データだけ取り出して「label:data/tlabel:data/t…」に。	LTsv_labelsはtsv形式。
LTsv_unziptuplelabelsdata(LTsv_line,*LTsv_labels)	1行のラベル有りLTSV「label:data/tlabel:data/t…」からラベル該当データだけ取り出して「label:data/tlabel:data/t…」に。	LTsv_labelsはPythonのタプル形式。
LTsv_tuple2tsv(LTsv_tuple)	Pythonのタプルやリストをtsvに。	forループよりjoin使った方が速い的なPythonあるある。
LTsv_tsv2list(LTsv_line,LTsv_len=None)	tsvをPythonのリストに。	左辺でunpackする場合受けとる変数の個数をLTsv_lenで指定。	LTsv_lenがデータ数より多い場合は0文字列が補完される。
LTsv_tsv2tuple(LTsv_line,LTsv_len=None)	「LTsv_tsv2list()」のタプルバージョン。
LTsv_label2dictint(LTsv_line)	LTSV「label:data/tlabel:data/t…」をPythonの辞書に。dataは数値化。	複数行あっても1つのLTSVとみなす。
LTsv_label2dictstr(LTsv_line)	LTSV「label:data/tlabel:data/t…」をPythonの辞書に。dataは文字列化。	複数行あっても1つのLTSVとみなす。
LTsv_dict2label(LTsv_dict)	Pythonの辞書「{"label":data,"label":data,…}」をLTSV「label:data/tlabel:data/t…」に。dataは文字列化。
LTsv_file_ver()	「LTsv_file.py」のバージョン表示(<＠L:TsvLTsvver>)。
LTsv_issue()	「/etc/issue」を開いてLinuxのディストリビューションの種類を探る。バージョンの確認方法はディストリ毎に異なる予感。
|LTsv_file.py]

[<？section/LTsv_time-0>*<？section/LTsv_time-1>|
.+\.html?	<section>@E <h3 id="LTsv_time-@c"><？title/LTsv_time-@c></h3>@E<＃contents/LTsv_time-@c>@E</section>@E
.*	@E<？title/LTsv_time-@c>@E@E<＃contents/LTsv_time-@c>@E
|<？section/LTsv_time-0>*<？section/LTsv_time-1>]

[<＃contents/LTsv_time-0>|
<？P> 「<？https/LTsv_time.py>」は日時フォーマットモジュールです。FPSも扱います。徹夜日時という概念があります。<？BR>
 ・とりあえず日時を取得する場合は「LTsv_getdaytimestr(overhour=24,diffminute=0)」で。<？BR>
 ・徹夜日時とは正子(夜中の午前0時)を24時として日付を切り替えずに25時(夜中の1時)、26時(夜中の2時)…と時だけが過ぎる状態です。<？BR>
 ・ISOカレンダーの週はISO8601の1月4日を含む週(最初の木曜日を含む週)を第1週と数える方法。曜日は月曜から始まるので土日は週末。ISOカレンダーの曜は月曜が1で土曜が6、日曜が7。<？BR>
 ・単体風テストでは複数の日時フォーマットを用いて関数群の挙動確認ができます。<？BR><？/P>

<！LTsv_time.py>
|<＃contents/LTsv_time-0>]

[LTsv_time.py|
LTsv_yearleap(LTsv_toyear)	閏年ならTrue。
LTsv_yearweeks(LTsv_toyear)	一年の間に週(ISOカレンダーの週)が何回あるか、年間の週数52〜53を返す。
LTsv_monthleap(LTsv_toyear,LTsv_tomonth)	一月の間に日が何回あるか、28〜31を返す。閏年なら2月は29日。
LTsv_beat864(LTsv_tohour,LTsv_tominute,LTsv_tosecond)	(LTsv_Beat,LTsv_BeatInteger,LTsv_BeatPoint)のタプルを返す。	LTsv_Beatは1日の秒数0?86399(86400)。@Beatはその秒数を86.4で割った一日を1000分割する数。	LTsv_BeatIntegerは@Beatの整数部分。LTsv_BeatPointは@Beatの小数部分。
LTsv_intstr0x(LTsv_code)	"0xff","$80"のように16進数っぽいものは16進数で数値に、そうでないものは10進数と思ってint変換。	try節で囲む手間を省きたい場合に便利。
LTsv_settimerCounter(counter=None)	LTsv_timerCounter「@c」の値を設定する(取得のみも可能)。
LTsv_checkFPS()	LTsv_checkFPS()自身を1秒間に何回実行できるか計測。0〜999の範囲。
LTsv_setdaytimeshift()	日時フォーマット用の日時変数(LTsv_meridian_nowなど)を再計算する。	通常は「LTsv_putdaytimespecify(),LTsv_putdaytimenow(),LTsv_putdaytimeearlier(),LTsv_putdaytimemodify(),LTsv_putdaytimever()」から呼び出される内部関数。
LTsv_setdaytimeoption(overhour=None,diffminute=None)	LTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定。	LTsv_putdaytimespecify(),LTsv_putdaytimenow(),LTsv_putdaytimeearlier(),LTsv_putdaytimemodify(),LTsv_putdaytimever()にも同等機能のオプションがある。
LTsv_putdaytimenow(overhour=None,diffminute=None)	現在時刻を「LTsv_meridian_now」に格納。各種日時変数も計算。	追加オプションでLTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定をまとめて上書きできる。
LTsv_putdaytimeearlier(overhour=None,diffminute=None)	最後に実行された「LTsv_putdaytimenow()」の時刻「LTsv_earlier_now」を再度「LTsv_meridian_now」に格納。各種日時変数も計算。	追加オプションでLTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定をまとめて上書きできる。
LTsv_putdaytimespecify(year=None,month=None,day=None,hour=None,minute=None,seconds=None,microsecond=None,overhour=None,diffminute=None)	日時を指定して「LTsv_meridian_now」に格納。省略(Noneを代入)した項目は現在時刻などが代入。	追加オプションでLTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定をまとめて上書きできる。
LTsv_putdaytimemodify(LTsv_path,overhour=None,diffminute=None)	ファイルLTsv_pathの更新時刻タイムスタンプをLTsv_meridian_nowに格納。各種日時変数も計算。	追加オプションでLTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定をまとめて上書きできる。	OSやファイルシステム毎に秒や分の精度に違いがあると思う。
LTsv_putdaytimever(LTsv_verstr,overhour=None,diffminute=None)	「LTsv_time_ver()」などの<？modify_style>をLTsv_meridian_nowに格納。各種日時変数も計算。	追加オプションでLTsv_overhour(徹夜日時)とLTsv_diffminute(時差)の設定をまとめて上書きできる。
LTsv_getdaytimestr(timeformat=None,overhour=None,diffminute=None)	日付フォーマットtimeformatを各種日時変数で置換する。	timeformatのデフォルト値は「@000y@0m@0dm@wdec@0h@0n@0s」。	日付フォーマットの概要は「<？index/LTsv_time-1>」を参照。
LTsv_settimershift()	日時フォーマット用のタイマー変数(LTsv_lap_nowなど)を再計算する。	通常は「LTsv_puttimerstartgoal()」から呼び出される内部関数。
LTsv_settimershiftoption()	LTsv_start_nowとLTsv_goal_nowの差分を再計算する。	通常は「LTsv_puttimerstartgoal()」から呼び出される内部関数。
LTsv_puttimerstartgoal(microsecond=None,millisecond=None,seconds=None,minute=None,hour=None,day=None)	タイマーのLTsv_goal_nowを数秒後(seconds)・数分後(minute)・数時間後(hour)・数日後(day)などいずれかに設定する。	例えば三分後を指定する場合「LTsv_puttimerstartgoal(minute=3)」と入力。	複数のパラメータを同時指定した場合、例えば分と秒なら秒優先というように細かい方の単位が採用される(内部ではmicrosecondで計算)。
LTsv_puttimerspecify(year=None,month=None,day=None,hour=None,minute=None,seconds=None,microsecond=None)	タイマーのLTsv_goal_nowを日時指定。省略(Noneを代入)した項目は現在時刻などが代入。
LTsv_puttimerlap()	タイマーの経過時間をLTsv_passed_TotalSecondsに、残り時間をLTsv_timeleft_TotalSecondsに設定する。各種タイマー変数も計算。
LTsv_gettimerstr(timeformat=None)	日付フォーマットtimeformatを各種タイマー変数で置換する。	timeformatのデフォルト値は「@0h@0n@0s.0Rs」。時間フォーマットの概要は「<？index/LTsv_time-1>」を参照。
|LTsv_time.py]

[<＃contents/LTsv_time-1>|
<？P> 0.「@」で始まるキーワードが年月日等に置換される仕組み。「@」を表示する場合は「@@」と表記。<？BR>
 1.日付フォーマット(daytime系)では、小文字が現在時刻(meridian)、大文字が徹夜日時(allnight)です。分以下・Beat・timer系に徹夜日時はありません。<？BR>
 2.時間フォーマット(timer系)では、小文字が現在時刻(lap)、大文字が曲や動画などの長さ(limit)、「-」が先頭でタイマーの残り時間(timeleft)です。<？BR>
 3.分(miNute)は「n」で代用して月(Month)との変数名衝突防止してます。ミリ秒は「L」(miLlisecond)。マイクロ秒は「R」(micRoSecond)。<？BR>
 4.「_」(アンダースコア)を先頭に入れると0が空白に。0も空白も省くと数値は可変長。<？BR>
 5.月で「JFCAMNLUSOND」表記が使えます。曜で「UMTWRFS」表記が使えます。末尾に「ec」で英語1文字。末尾「j」で日本語表記。<？BR>
 5.日時の月,週,時,分,秒で2桁以下の数値項目の場合、末尾に「z」で１,２,３,４,５,６,７,８,９,10,11,12といった1桁の時全角数値の表現が可能。<？BR>
<？/P>
<？DLDT> 年=@yzj,@yzc,@0yz,@_yz,@yz,@0yd,@_yd,@yd,@0yw,@_yw,@yw,@000yi,@___yi,@4yi,@0yi,@_yi,@2yi,@yi,@000y,@___y,@4y,@0y,@_y,@2y,@y,@Yzj,@Yzc,@0Yz,@_Yz,@Yz,@0Yd,@_Yd,@Yd,@0Yw,@_Yw,@Yw,@000Yi,@___Yi,@4Yi,@0Yi,@_Yi,@2Yi,@Yi,@000Y,@___Y,@4Y,@0Y,@_Y,@2Y,@Y<？/DTDD>
  000y,___y,4y系は4桁の年(Year)。000y,___y,4y系は2桁の年(Yearlower)。<？BR>
  yz系は干支(YearZodiac)。@yzjで鼠,牛,虎,兎,龍,蛇,馬,羊,猿,鶏,犬,猪。@yzcで子,丑,寅,卯,辰,巳,午,未,申,酉,戌,亥<？BR>
  yi系はISOカレンダーの年(YearIso)。第1週に突入した時点で年が明けるので、年末年始の間は西暦カレンダーの年とズレる場合があります。<？BR>
  ywi系は年間の週数(YearWeeksIso)。年間約52〜53回。1月4日が含まれる週が第1週(第1木曜日が含まれる週)。<？BR>
  yd系は年間の日数(YearDays)。年間約365〜366日。閏年の時に1日増える。<？BR><？/DD/DL>

<？DLDT> 月=@0md,@_md,@md,@mec,@mes,@mel,@_mel,@meh,@_meh,@mjiz,@_mjiz,@mj,@_mj,@0m,@_m,@mz,@m,@0Md,@_Md,@Md,@Mec,@Mes,@Mel,@_Mel,@Meh,@_Meh,@Mjiz,@_Mjiz,@Mj,@_Mj,@0M,@_M,@Mz,@M<？/DTDD>
  m系は月の数値(Month)。1?12。<？BR>
  me系は月の英語表記。末尾「c」で一文字(JFCAMNLUSOND)、末尾「s」で三文字、末尾「l」で単語、末尾「h」で一文字の箇所大文字。<？BR>
   (January,February,marCh,April,May,juNe,juLy,aUgust,September,October,November,December)<？BR>
  mj系は神無月、mjiz系は神有月(睦月,如月,弥生,卯月,皐月,水無月,文月,葉月,長月,神有月,霜月,師走)表記の旧暦の月名。<？BR>
  md系は月間の日数(MonthDays)。31,28,31,30,31,30,31,31,30,31,30,31。閏年は31,29,31,30,31,30,31,31,30,31,30,31と2月が29日になる。<？BR><？/DD/DL>

<？DLDT> 週=@0wnyi,@_wnyi,@wnyiz,@wnyi,@0Wnyi,@_Wnyi,@Wnyiz,@Wnyi,@0wnm,@_wnm,@wnmz,@wnm,@0Wnm,@_Wnm,@Wnmz,@Wnm<？/DTDD>
  wnyi系はISOカレンダーの週番号(WeekNumberYearIso)。年間約52〜53回。1月4日が含まれる週が第1週(第1木曜日が含まれる週)。<？BR>
  wnm系は月毎の曜番号(WeekNumberMonth)。月間約4?5回。単純に月内の日数を7で割った数。<？BR><？/DD/DL>

<？DLDT> 曜=@wdj,@wdec,@wdes,@wdel,@_wdel,@wdeh,@_wdeh,@wdi,@wd,@Wdj,@Wdec,@Wdes,@Wdel,@_Wdel,@Wdeh,@_Wdeh,@Wdi,@Wd<？/DTDD>
  wd系は曜の数値(WeekDay)。月曜が0で土曜が5、日曜が6。<？BR>
  we系は曜の英語表記。末尾「c」で一文字(MTWRFSU)、末尾「s」で三文字、末尾「l」で単語、末尾「h」で一文字の箇所大文字。<？BR>
   (Monday,Tuesday,Wednesday,thuRsday,Friday,Saturday,sUnday)<？BR>
  wj系は月火水木金土日。<？BR>
  wdi系はISOカレンダー曜日の数値(WeekDayIso)。月曜が1で土曜が6、日曜が7。<？BR><？/DD/DL>

<？DLDT> 日(日付)=@0dm,@_dm,@dmz,@dm,@0dy,@_dy,@dy,@0Dm,@_Dm,@Dmz,@Dm,@0Dy,@_Dy,@Dy<？/DTDD>
 日(時間)=@000d,@___d,@00d,@__d,@0d,@_d,@d,@-000d,@-___d,@-00d,@-__d,@-0d,@-_d,@-d,@000D,@___D,@00D,@__D,@0D,@_D,@D<？BR>
  dm系は月換算の日数(DayMonth)。31,28,31,30,31,30,31,31,30,31,30,31。閏年は31,29,31,30,31,30,31,31,30,31,30,31と2月が29日になる。<？BR>
  dy系は年換算の日数(DayYear)。年間約365〜366日。閏年の時に1日増える。<？BR>
  時間フォーマット(timer系)では日は4桁まで使えます。<？BR><？/DD/DL>

<？DLDT> 時(日付)=@apj,@apel,@apeu,@ap,@Apj,@Apel,@Apeu,@Ap,@0hap,@_hap,@hapz,@hap,@0h,@_h,@hz,@h,@0H,@_H,@Hz,@H<？/DTDD>
 時(時間)=@0dh,@_dh,@dh,@-0dh,@-_dh,@-dh,@0Dh,@_Dh,@Dh,@0h,@_h,@h,@-0h,@-_h,@-h,@0H,@_H,@H<？BR>
  h系は時の数値(Hour)。1?24。大文字の「H」を使うと徹夜日時を表示(overhour)。1〜48。<？BR>
  hap系は午前午後表記の数値(HourAP)。1〜12。<？BR>
  apj系は午前午後徹夜表記。大文字の「A」を使うと徹夜日時を表示(overhour)。36時を過ぎようが徹夜日時の時は「徹夜」と表示される。<？BR>
  ape系はam,pm,al表記。大文字の「A」を使うと徹夜日時を表示(overhour)。末尾「l」で小文字、末尾「u」で大文字。<？BR>
  ap系は午前午後を0,1で。大文字の「A」を使うと午前午後徹夜を0,1,2で。何を言ってるか分からないだろうがoverhourの設定次第では昼の12時だろうが徹夜と表示。<？BR>
  午前午後徹夜は時間フォーマット(timer系)には存在しません。<？BR><？/DD/DL>

<？DLDT> 分(日付)=@0n,@_n,@nz,@n,@0N,@_N,@Nz,@N<？/DTDD>
 分(時間)=@0n,@_n,@n,@-0n,@-_n,@-n,@0N,@_N,@N<？BR>
  n系は分(miNute)。0〜59。<？BR><？/DD/DL>

<？DLDT> 秒(日付)=@0s,@_s,@sz,@s,@0S,@_S,@Sz,@S,@0ls,@_ls,@ls,@0rs,@_rs,@rs,@0Ls,@_Ls,@Ls,@0Rs,@_Rs,@Rs<？BR>
 秒(時間)=@0s,@_s,@s,@-0s,@-_s,@-s,@0S,@_S,@S,@0ls,@_ls,@ls,@-0ls,@-_ls,@-ls,@0Ls,@_Ls,@Ls,@0rs,@_rs,@rs,@-0rs,@-_rs,@-rs,@0Rs,@_Rs,@Rs<？/DTDD>
  s系は秒(Second)。0〜59。<？BR>
  ls系はミリ秒(miLlisecond)。ミリ秒は3桁、0〜999。<？BR>
  rs系はマイクロ秒(micRoSecond)。マイクロ秒は6桁、0〜999999。<？BR><？/DD/DL>

<？DLDT> @Beat(日付)=@0bti,@_bti,@bti,@0btp,@_btp,@btp,@bt<？/DTDD>
 @Beat(時間)=@0bti,@_bti,@bti,@0btp,@_btp,@btp,@0bt,@_bt,@bt,@-0bti,@-_bti,@-bti,@-0btp,@-_btp,@-btp,@-0bt,@-_bt,@-bt,@0Bti,@_Bti,@Bti,@0Btp,@_Btp,@Btp,@0Bt,@_Bt,@Bt<？/DTDD>
  bt系はビート(Beat)の途中計算。1日の秒数0〜86399(86400)をそのまま表示。本当のビートは86.4秒。<？BR>
  bti系はビートの整数部分(BeatInteger)。0?999。ビートとして使う場合、日本だと時差の指定「diffminute=8」が必要。<？BR>
  btp系はビートの小数部分(BeatPoint)。0?999。ビートとして使う場合、日本だと時差の指定「diffminute=8」が必要。<？BR>
  時間フォーマット(timer系)としてビートを用いる場合時差は関係無し。<？BR><？/DD/DL>

<？DLDT> 正負符号(時間)=@+-,@_-,@--<？/DTDD>
  LTsv_lap_nowがLTsv_goal_nowを通りすぎた、いわゆるタイムオーバーの時はLTsv_lap_nowが負の数に。<？BR>
  @+-はプラスマイナス両方表示。<？BR>
  @_-はプラスの時は空白を表示。<？BR>
  @--はマイナスのみ表示。プラスの時は一文字詰める。<？BR><？/DD/DL>

<？DLDT> @c(カウンター)=@000c,@00c,@0c,@c<？/DTDD>
  「LTsv_getdaytimestr()」もしくは「LTsv_gettimerstr()」が実行される度にカウンター(LTsv_timerCounter)が加算される。<？BR>
  カウンターの値を変更は「LTsv_settimerCounter()」。<？BR><？/DD/DL>

<？DLDT> その他エスケープ文字<？/DTDD>
  @T=\t。タブ文字用。<？BR>
  @E=\n。改行文字用。<？BR>
  @Z=\0。文字列長0用。<？BR><？/DD/DL>
|<＃contents/LTsv_time-1>]

[<？section/LTsv_calc-0>*<？section/LTsv_calc-1>|
.+\.html?	<section>@E <h3 id="LTsv_calc-@c"><？title/LTsv_calc-@c></h3>@E<＃contents/LTsv_calc-@c>@E</section>@E
.*	@E<？title/LTsv_calc-@c>@E@E<＃contents/LTsv_calc-@c>@E
|<？section/LTsv_calc-0>*<？section/LTsv_calc-1>]

[<＃contents/LTsv_calc-0>|
<？P> 「<？https/LTsv_calc.py>」は電卓フォーマットモジュールです。分数計算を扱います。電卓フォーマットの概要は「<？index/LTsv_calc-1>」を参照。<？BR>
 ・「LTsv_calc()」に電卓フォーマットの計算式を渡すと分数が帰ってきます。通分できない分数の場合小数が帰ってきます。<？BR>
 ・単体風テストでは複数の電卓フォーマットを用いて関数群の挙動確認ができます。<？BR><？/P>

<！LTsv_calc.py>
|<＃contents/LTsv_calc-0>]

[LTsv_calc.py|
LTsv_calc_GCM(LTsv_calcL,LTsv_calcR)	最大公約数。
LTsv_calc_LCM(LTsv_calcL,LTsv_calcR)	最小公倍数。
LTsv_calc_bracketsbalance(LTsv_calcQbase)	左右の括弧の数を合わせる。ついでに演算子の整理整頓など。
LTsv_calc_decimalize(LTsv_calcQbase)	分数を小数に。
LTsv_calc_fractalize(LTsv_calcQbase)	小数を分数に。
LTsv_calc(LTsv_calcQbase)	電卓フォーマットを入力すると分数計算。「1/3⇔1|3」と分数に計算。	LTsv_calc自体は主に括弧の正規表現による検索。括弧の内側を「LTsv_calc_function()」に渡す。	電卓フォーマットの概要は「<？index/LTsv_calc-1>」を参照。
LTsv_calc_function(LTsv_calcQbase)	主に数列和・数列積などの計算。「Σ(数列和)」などの左側を「LTsv_calc_addition()」に渡す。
LTsv_calc_addition(LTsv_calcQbase,LTsv_Count)	主に分数の加算減算。分数の積割処理で「LTsv_calc_addition()」を呼び出す。
LTsv_calc_multiplication(LTsv_calcQbase)	主に分数の積(分数の割り算含む)。小数排除処理で「LTsv_calc_fractalize()」呼び出す。
|LTsv_calc.py]

[<＃contents/LTsv_calc-1>|
<？P> 分数「|」と割り算「/」を別物として扱います。分数の入れ子は「2|3|5|7⇔2|105」のように分母にまとめられます。<？BR>
 通常は分数で計算するので「1/3⇔1|3」「1|3*3⇔1」になり一般的な電卓のように「0.999999999999」などにはならない。<？BR>
 分数内で小数が使用可能です。「0.5|3.5⇔1|7」の様に小数が混在してても分数に変換します。<？BR>
 加算「+」減算「-」と区別して表現できます。「1-(-2)」と括弧を使わなくても「1-m2⇔3|1」のようにマイナスで引くといった表現が可能。<？BR>
 数列計算のカウント変数「c」は整数です。初期値は+1で増減は±1です。カウント変数に代入する過程で整数変換が発生するので注意。括弧の内外で別カウントになるので要注意。<？BR>
 「(c+2)(c+1)」のように括弧間の演算子が省略された場合には(c+2)*(c+1)⇔6|1」のように掛け算を適用します。<？BR>
 Pythonには整数有効計算範囲の概念は存在しないはずですが、小数計算ではPythonの実装・環境に応じた丸め誤差などが発生します。<？BR>
 0で割るなどの計算できない場合は無限エラー扱いにして「n|0」と表示します。実際の無限には正負の概念が存在しますが電卓フォーマットの「n|0」は単に計算放棄です。<？BR><？/P>

<？index/LTsv_calc:number>
<？DLDT>  012456789 １２３４５６７８９０<？/DTDD>    アラビア数字は全角でも使用できます。<？/DD/DL>
<？DLDT>  〇一二三四五六七八九<？/DTDD>              漢数字も使用できます。大字も「壱弐参肆伍陸漆捌玖零陌阡萬」が使用可能です。<？/DD/DL>
<？DLDT>  垓京兆億万千百十 銭<？/DTDD>               漢数字の万単位の繰り上がりも垓までとりあえず対応しています。銭は百分の一になります。<？/DD/DL>

<？index/LTsv_calc:‎operator>
<？DLDT>   . ．      小円<？/DTDD>                    小数点は「3.1416⇔3927|1250」の様にドットを使います。「円」は「3円14銭」のような表現用途。<？/DD/DL>
<？DLDT>  | ｜      分<？/DTDD>                      分数を表します。分数中の小数は「0.5|3⇔1|6」のように通分されます。<？/DD/DL>
<？DLDT>  p PｐＰ   正<？/DTDD>                      正の数を表現。符号が付加されてなければ0以上の数です。<？/DD/DL>
<？DLDT>  m MｍＭ   負<？/DTDD>                      負の数を表現できます。「2-m1⇔3|1」のように負の数で引き算すると加算されます。<？/DD/DL>
<？DLDT>  + ＋      加足和<？/DTDD>                  足し算をします。計算結果は「1|6+1|3⇔1|2」のように通分されます。<？/DD/DL>
<？DLDT><？/DTDD><？/DD/DL>
<？DLDT>  - －      減引差<？/DTDD>                  引き算をします。計算結果は「3|4-1|4⇔1|2」のように通分されます。<？/DD/DL>
<？DLDT>  * ×      乗掛積<？/DTDD>                  掛け算をします。計算結果は「2|3*3|4⇔1|2」のように通分されます。<？/DD/DL>
<？DLDT>  / ／÷    除割商<？/DTDD>                  割り算をします。計算結果は「2|5/4|5⇔1|2」のように通分されます。<？/DD/DL>
<？DLDT>  \ ＼<？/DTDD>                              整数未満を切り捨てる割り算をします。計算結果は「7\3⇔2」のように小数以下は切り捨てられます。<？/DD/DL>
<？DLDT>  # ＃      余<？/DTDD>                      割り算の余りを求めます。「3|2#1|3⇔1|6」のように分数も使えます。<？/DD/DL>
<？DLDT>  L lＬｌ   倍 <？/DTDD>                     最小公倍数の計算。負数も絶対値で計算。同じ分母であれば分母を1と見なして無理やり計算。分母が異なる場合「n|0」エラー扱い。<？/DD/DL>
<？DLDT>  G gＧｇ   約<？/DTDD>                      最大公約数の計算。負数も絶対値で計算。同じ分母であれば分母を1と見なして無理やり計算。分母が異なる場合「n|0」エラー扱い。<？/DD/DL>
<？DLDT>  % ％      率<？/DTDD>                      消費税などの計算用。「10000+8%⇔10800|1」のように「10000×1.08⇔10800|1」と小数計算の手間簡略化。<？/DD/DL>
<？DLDT>  y π      周<？/DTDD>                       円周率。math.pi(約3.14159265359)が代入される。桁数はおそらくPython環境依存。<？/DD/DL>
<？DLDT>  e ｅ      底<？/DTDD>                      ネイピア数。math.e(約2.71828182846)が代入される。桁数はおそらくPython環境依存。<？/DD/DL>

<？index/LTsv_calc:bracket>
<？DLDT>  ()（）<？/DTDD>                            括弧の中を先に計算する「3(c+1)→3×(c+1)→3×(1+1)→3×2」。もしくは数列の表現にも使用。<？/DD/DL>
<？DLDT>  c CＣｃ   数<？/DTDD>                      数列内で有効なカウント変数。括弧の内外で異なる数列を数えるので注意。初期値は「1」。<？/DD/DL>
<？DLDT>  S SｓＳΣ 列但※<？/DTDD>                   数列和。「(cΣ1～5)→1＋2＋3＋4＋5」といった等差数列の和を想定。<？/DD/DL>
<？DLDT>  ! ！      方<？/DTDD>                      数列積。「(2!1～4)→2×2×2×2」のような乗数や「(c!1～5)→1×2×3×4×5」のような階乗を想定。<？/DD/DL>
<？DLDT>  ~ ～      ?<？/DTDD>                       数列和(もしくは数列積)の範囲指定。「(cΣ1~4)→1＋2＋3＋4」「(c!4～1)→4×3×2×1」と増減±1の計算は自動。<？/DD/DL>

<？index/LTsv_calc:nonuse>
<？DLDT>  n NｎＮ∞ 無<？/DTDD>                      0で割った時など計算"できない"事を表す「n|0」と同じ。本当の無限には正負などがあるが、単純に未定というか計算放棄。<？/DD/DL>
<？DLDT>  ,  <？/DTDD>                               「10,800⇔10800|1」とコンマ無しの計算結果を帰します。使用でき無い他の演算子もだいたいコンマ扱いです。<？/DD/DL>
<？DLDT>  √<？/DTDD>                                平方根に使う予定の演算子。分数電卓なので無理数などの扱いに困ってる。<？/DD/DL>
|<＃contents/LTsv_calc-1>]

[<？index/LTsv_calc:number>*<？index/LTsv_calc:‎operator>*<？index/LTsv_calc:bracket>*<？index/LTsv_calc:nonuse>|
:<＄title/LTsv_calc-0>	使用できる数字
:<＄title/LTsv_calc-1>	使用できる演算子
:<＄title/LTsv_calc-2>	括弧および関数用途の演算子
:<＄title/LTsv_calc-3>	未実装等で使用できない演算子
.+\.html?	<h4><＄title/LTsv_calc-@c></h4>
.*	 <＄title/LTsv_calc-@c>
|<？index/LTsv_calc:number>*<？index/LTsv_calc:‎operator>*<？index/LTsv_calc:bracket>*<？index/LTsv_calc:nonuse>]

[<？section/LTsv_joy-0>*<？section/LTsv_joy-1>*<？section/LTsv_joy-2>|
.+\.html?	<section>@E <h3 id="LTsv_joy-@c"><？title/LTsv_joy-@c></h3>@E<＃contents/LTsv_joy-@c>@E</section>@E
.*	@E<？title/LTsv_joy-@c>@E@E<＃contents/LTsv_joy-@c>@E
|<？section/LTsv_joy-0>*<？section/LTsv_joy-1>*<？section/LTsv_joy-2>]

[<＃contents/LTsv_joy-0>|
<？P> 「<？https/LTsv_joy.py>」は<？gamepad>の入力をLTSVに変換するモジュールです。<？BR>
 ・WindowsでもPOVをPxPyの2軸として扱います。極座標変換は「LTsv_atanscalar()」と「LTsv_atanclock()」。<？BR>
 ・単体風テストで<？gamepad>の挙動確認ができます。「<？https/LTsv_gui.py>」でも挙動確認はできます。<？BR><？/P>
 
<！LTsv_joy.py>
|<＃contents/LTsv_joy-0>]

[LTsv_joy.py|
LTsv_joyreset(LTsv_tsvpath)	「LTsv_joy.tsv」からモジュールの初期設定を読み込む。詳細は「<？index/LTsv_joy-1>」。
LTsv_joyexit()	<？gamepad>の変数初期化です。Linuxではデバイスをクローズします。
LTsv_joyinit(LTsv_tsvpath="LTsv/LTsv_joy.tsv")	<？gamepad>の準備です。Linuxではデバイスをオープンします。	「LTsv_joyinit()」のタイミングで<？gamepad>ので個数を受けとる。	0を受け取った場合<？gamepad>を見つけれてない状態。
LTsv_setjoydata(LTsv_joyid,LTsv_default=None)	スティック(axisW/axisL)とボタン(button)の状態を読み込む。	axisリストとbuttonリストのタプルで返り値も受け取れる。
LTsv_getjoystr(LTsv_joyid,joyformat=None)	スティックとボタンの状態を<？joyformat_label>のrestへLTSVで返す。	LTsv_joyidには<？gamepad>の番号を指定。	項目一覧の詳細は「<？index/LTsv_joy-2>」。
LTsv_atanscalar(LTsv_atanX,LTsv_atanY)	スティック(axisW/axisL)の直交座標を極座標に変換、スティックの傾きを取得します。
LTsv_atanclock(LTsv_atanX,LTsv_atanY,LTsv_labels)	ラジアン角度円周2πをLTsv_labelsのラベルに置き換え。	<？gamepad>の方角、上下左右東西南北などの表現を想定。
LTsv_joyaxis_label()	Windowsなら「axisW」を返す。Windowsなら「axisL」を返す。	「LTsv_getjoystr()」でどのaxisを取得するべきかの調査用途。
|LTsv_joy.py]

[<＃contents/LTsv_joy-1>|
<？P> 「<？https/LTsv_joy.tsv>」は「<？https/LTsv_joy.py>」の設定ファイルです。<？BR><？/P>
<！LTsv_joy.tsv>
|<＃contents/LTsv_joy-1>]

[LTsv_joy.tsv|
[LTsv_deviceL|	Linuxのデバイス指定ページ。
joy	Linuxの場合デバイス名(から数字を省いた物)を指定。初期設定は「/dev/input/js」(「/dev/input/js0」を想定)。
[keydefault|	「LTsv_getjoystr()」のLTsv_joykbdformatの初期値設定。
axisL	初期値は「Lx\tLy\t_\tRx\tRy\tPx\tPy」。
axisW	初期値は「Lx\tLy\tRy\tRx\tPx\tPy」。
button	初期値は「X\tY\tA\tB\tC\tZ\tL\tR\tF\tJ\tS\tP」。	C,ZがむしろL1,R1。L,Rが機種によってZL,ZR(L2,R2)。F,JがいわゆるL3,R3。
[keyanother|	「keydefault」の初期値ボツ案などだがボタン配置解説用に温存。
axisUV	Windowsを「dwXpos,dwYpos,dwZpos,dwRpos,dwUpos,dwVpos,dwPOV」固定でも構わなかったけどPOVもLinux同様に２軸にしてすり合わせたかったので直接は使わず。
axisLW	本来こうしたかった例「Lx\tLy\tRy\tRx\tPx\tPy」。でもこれだとZ軸(dwUpos,dwVpos)の扱いが謎に。
axisL7	Linuxドライバのaxis解釈が謎7軸なのは多分こうなるはずだったから予想「Lx\tLy\tLz\tRx\tRy\tRz\tPx\tPy」。そのせいでなのかWindowsとLinuxでaxisにズレが発生する。
axisW8	axisWが実際に6軸取得できる場合LTsv_getjoystr()に渡す配置「Lx\tLy\tRy\tRx\tPx\tPy\tLz\tRz」。Z軸を後付け設計にしたので注意。
buttonN	いわゆる任天堂(3DS)配列風。「X\tY\tA\tB\tL\tR\tZL\tZR\tLC\tRC\tS\tP\tH」。
buttonP	いわゆるソニー(PS4)配列風。「△\t□\t×\t○\tL1\tR1\tL2\tR2\tL3\tR3\tS\tO\tP」。。
|LTsv_joy.tsv]

[<＃contents/LTsv_joy-2>|
<？DLDT>  status<？/DTDD>           axis最大値とボタン最大値。2項目。axis最大値はWindowsとLinuxでズレる場合があります。ループ内省略推奨。<？/DD/DL>
<？DLDT>  button<？/DTDD>           ボタンが押されてれば1。押されてなければ0。データ項目はボタンの個数分。WindowsとLinuxで共通。<？/DD/DL>
<？DLDT>  axisL<？/DTDD>            Linux版はPOVが2軸扱い。合計6項目の場合でも7項目を返すゲームPADが存在したりするので注意(PxPy軸がズレてる場合がある)。<？/DD/DL>
<？DLDT>  axisW<？/DTDD>            Windows版はPOVが1軸扱いですがスクリプト側で2軸に変換。通常6項目。<？/DD/DL>
|<＃contents/LTsv_joy-2>]

[<？section/LTsv_kbd-0>*<？section/LTsv_kbd-1>|
.+\.html?	<section>@E <h3 id="LTsv_kbd-@c"><？title/LTsv_kbd-@c></h3>@E<＃contents/LTsv_kbd-@c>@E</section>@E
.*	@E<？title/LTsv_kbd-@c>@E@E<＃contents/LTsv_kbd-@c>@E
|<？section/LTsv_kbd-0>*<？section/LTsv_kbd-1>]

[<＃contents/LTsv_kbd-0>|
<？P> 「<？https/LTsv_kbd.py>」は<？PCkeyboard>の入力(マウスのボタン含む)をLTSVに変換するモジュールです。<？BR>
 ・ウィンドウがアクティブでない時にもキー入力を取得するので取扱い注意。<？BR>
 ・WindowsとLinuxではキーフックの手段が異なるので一部関数「LTsv_kbdEVIOCGRAB()」がOS依存になるので注意。<？BR>
 ・仮想キーの番号はWindowsとLinuxで異なるので注意。「<？https/LTsv_kbd.tsv>」で調整。<？BR>
 ・「LTsv_kbd.py」単独の単体風テストでは<？PCkeyboard>の挙動確認は難しい(Windows環境ではターミナルの「GetAsyncKeyState」がWineの外なので拾えない)ので挙動確認は「<？https/LTsv_gui.py>」を使います。<？BR><？/P>

<！LTsv_kbd.py>
|<＃contents/LTsv_kbd-0>]

[LTsv_kbd.py|
LTsv_kbdcatproc(LTsv_devname)	「cat /proc/bus/input/devices」からLTsv_devnameで検索して「event?」を返す。「?」の部分は数値。
LTsv_kbdreset(LTsv_tsvpath)	 [LTsv_kbd.tsv]からモジュールの初期設定や、<？keycode00FF>に名付けたキー名称を読み込む。
LTsv_kbdgettypename(LTsv_code)	<？keycode00FF>をキー名称に変換。ひらがなキー名称は用いない。
LTsv_kbdgettypekana(LTsv_code)	<？keycode00FF>をキー名称に変換。かな入力に用いるキーはひらがなキー名称を取得。
LTsv_kbdgettypecode(LTsv_name)	キー名称を<？keycode00FF>に変換。
LTsv_kbdgettypegana(LTsv_gana)	ひらがなキー名称を<？keycode00FF>に変換。ひらがな以外のキー名称も使用可能。
LTsv_kbdexit()	<？PCkeyboard>(マウス含む)の変数初期化です。Linuxではデバイスをクローズします。
LTsv_kbdinit(LTsv_tsvpath="LTsv/LTsv_kbd.tsv",LTsv_initmouse=False)	<？PCkeyboard>の準備です。Linuxではデバイスをオープンします。	Linuxで複数のマウスボタンを使う場合LTsv_initmouseで監視許可も出すことが可能です。	マウスボタンの配置は「<？index/LTsv_kbd-1>」を参考。	Windowsの場合逆にLTsv_initmouseと関係なくら最初から「MouseL:1\tMouseR:2\tMouseC:4」固定です。
LTsv_kbdEVIOCGRAB(LTsv_grabflag)	※Linux専用命令です。<？PCkeyboard>の入力をターミナルやテキストエリアなどに出力しないようにします。	Windowsのキーフックとすり合わせる過程で別の名前になる可能性があります。	漢直とかで<？PCkeyboard>のアルファベット入力を漢字出力に置き換える用途です。
LTsv_kbdwrite(LTsv_code,LTsv_press)	※Linux専用命令です。<？PCkeyboard>を入力した事にします。	「LTsv_kbdEVIOCGRAB()」実行中は動作しません。
LTsv_kbdwriteCtrl(LTsv_ganastsv)	※Linux専用命令です。「Ctrl」など複数のキーを押しながら入力みたいな動作を再現します。	「LTsv_kbdEVIOCGRAB()」実行中は動作しません。
LTsv_setkbddata(LTsv_kbdstacks,LTsv_mousestacks)	<？PCkeyboard>の状態を読み込みます。	LTsv_kbdstacksとLTsv_mousestacksはLinuxでそれぞれのデバイスから一度に読み込む量の指定です。
LTsv_getkbdlabels(kbdformat=LTsv_defkbdformat)	キー名一覧のtsvをLTsv_defkbdformatに渡すとキーの状態を表すLTSVが帰ってくる。	例えば「LTsv_getkbdlabels("MouseL\tMouseR\tMouseC")」とすると「MouseL:0\nMouseR:0\nMouseC:0」とかが帰ってくる。
LTsv_getkbdnames()	押された<？PCkeyboard>のキー名称を返す。<？keycode00FF>にキー名称が付けられる必要がある。
LTsv_getkbdcodes()	 押された<？PCkeyboard>の<？keycode00FF>を返す。
LTsv_getkbdkanas()	押された<？PCkeyboard>のかな文字を返す。かな以外だと押された<？PCkeyboard>の<？keycode00FF>を返す。
|LTsv_kbd.py]

[<＃contents/LTsv_kbd-1>|
<？P> 「<？https/LTsv_kbd.tsv>」は「<？https/LTsv_kbd.py>」の設定ファイルです。<？BR><？/P>
<！LTsv_kbd.tsv>
|<＃contents/LTsv_kbd-1>]

[LTsv_kbd.tsv|
[LTsv_deviceL|	Linuxのデバイス指定。
kbd	初期設定は「/dev/input/event?」。	万が一「LTsv_kbdreset()」内の「LTsv_kbdcatproc()」でデバイスを検出できない場合は直接指定。
mouse	初期想定は「/dev/input/event?」。	万が一「LTsv_kbdreset()」内の「LTsv_kbdcatproc()」でデバイスを検出できない場合は直接指定。
[LTsv_mouse_EV_KEY|	※Linux専用。マウスボタンなどの入力をWindowsのGetAsyncKeyStateの1,2,4みたいに<？keycode00FF>風に処理するための仮想キーコードの設定。
[LTsv_EV_REL|	マウスホイールなどの入力を処理する予定だった設定枠(未実装)。
[LTsv_EV_ABS|	その他アナログな入力を処理する予定だった設定枠(未定)。
[LTsv_typenameW|	Windowsの「キー名称:<？keycode00FF>」の組み合わせを記述。	だがWineとWindows実機でGetAsyncKeyStateの返り値が違う様子。	※この項目はページ全体がLTSVです。
[WineVK|	Wineで得られる「キー名称:<？keycode00FF>」の組み合わせ解説用。<？PCkeyboard>の種類によって変化する怖れ。	※この項目はページ全体がLTSVです。
[WindowsVK|	Windowsの仮想キーで「キー名称:<？keycode00FF>」の組み合わせ確認用。	※この項目はページ全体がLTSVです。
[LTsv_typenameL|	Linuxの「キー名称:<？keycode00FF>」の組み合わせを記述。<？PCkeyboard>の種類によって変化する怖れ。	※この項目はページ全体がLTSVです。
[LTsv_typegana|	Windows仮想キーの「キー名称:<？keycode00FF>」の組み合わせ保存用。<？PCkeyboard>の種類によって変化する怖れ。	※この項目はページ全体がLTSVです。
[LTsv_keydefault|	「LTsv_getkbdlabels()」のkbdformat初期値。	※この項目はページ全体がLTSVです。
|LTsv_kbd.tsv]

[<？section/LTsv_gui-0>*<？section/LTsv_gui-1>|
.+\.html?	<section>@E <h3 id="LTsv_gui-@c"><？title/LTsv_gui-@c></h3>@E<＃contents/LTsv_gui-@c>@E</section>@E
.*	@E<？title/LTsv_gui-@c>@E@E<＃contents/LTsv_gui-@c>@E
|<？section/LTsv_gui-0>*<？section/LTsv_gui-1>]

[<＃contents/LTsv_gui-0>|
<？P> 「<？https/LTsv_gui.py>」はウィンドウなど<？GUIwidget>を設置するモジュールです。<？BR>
 ・環境次第では「GTK2」と「Tkinter」が選べるはずですがPuppyLinuxでは「GTK2」Windows環境では「Tkinter」です。<？BR>
 ・「canvas」の描画高速化のため「LTsv_draw_*_shell(LTsv_GUI)」で関数オブジェクトを用意する手続き推奨。<？BR>
 ・「LTsv_window_main()」実行前に「print()」「LTsv_libc_printf()」などターミナル(stdout)系命令が実行されるとGUIが表示されない場合があります。<？BR>
 ・「LTsv_window_main()」実行後は<？GUIwidget>のイベント(「LTsv_window_after()」の様なタイマー系含む)が発生するまでPythonスクリプトが停止するので注意。<？BR>
 ・「LTsv_」を付加してないローカル変数が多々あるので変数名の衝突が心配。<？BR>
 ・「LTsv_widgetPAGE」はほぼ「LTsv_widget_newUUID()」で生成するユニークIDっぽいIDの事。<？BR>
 ・<？tasktrayNotify>関連は「Tkinter」で使えないので注意。他にも「Tkinter」で動かない命令はいくつか存在。<？BR>
 ・単体風テストでは<？GUIwidget>はもちろん、<？PCkeyboard>や<？gamepad>、日時フォーマットや電卓フォーマットなどの挙動確認もできます。<？BR><？/P>
 
<！LTsv_gui.py>
|<＃contents/LTsv_gui-0>]

[LTsv_gui.py|
LTsv_guiCDLLver(LTsv_libname,LTsv_libvermin,LTsv_libvermax)	「LTsv_guiinit()」で使う「libgtk-x11-2.0.so.?」などの「?」のバージョン番号部分を探索。
LTsv_guiinit(LTsv_guistyle=LTsv_GUI_GTK2,LTsv_libvermin=0,LTsv_libvermax=0)	どのGUIを使うか(「Tkinter」と「GTK2」の選択)を決定。 LTsv_guistyleでUI指定できるがPuppyLinuxだと強制的に「GTK2」。	Windowsだと今の所「Tkinter」。「WinAPI」はほぼ未実装。	「LTsv_libvermin」「LTsv_libvermax」でDLLバージョン違いの探索範囲指定。
LTsv_global_GUI()	「LTsv_GUI」の値(「Tkinter」「GTK2」どちらか)を取得。
LTsv_global_Notify()	「LTsv_Notify」の値(「WinAPI」「GTK2」どちらか)を取得。	「Tkinter」に<？tasktrayNotify>が存在しないので暫定的に「WinAPI」で対応。
LTsv_global_GTK2()	「LTsv_GUI_GTK2」の値"GTK2"を取得。「LTsv_guiinit()」の返り値判定用。
LTsv_global_Tkinter()	「LTsv_GUI_Tkinter」の値"Tkinter"を取得。「LTsv_guiinit()」の返り値判定用。
LTsv_global_WinAPI()	「LTsv_GUI_WinAPI」の値"WinAPI"を取得。「LTsv_guiinit()」の返り値判定用。
LTsv_global_libgtk()	「LTsv_libgtk」の値取得。「ctypes.CDLL("libgtk-x11-2.0.so.0")」あたりが帰ってくると思う。
LTsv_global_libgdk()	「LTsv_libgdk」の値取得。「ctypes.CDLL("libgdk-x11-2.0.so.0")」あたりが帰ってくると思う。
LTsv_global_libobj()	「LTsv_libobj」の値取得。「ctypes.CDLL("libgobject-2.0.so.0")」あたりが帰ってくると思う。
LTsv_global_canvasmotionZ()	マウスはどの「canvas」上に存在しているのかを取得。
LTsv_global_canvasmotionX(motionZ=None)	「canvas」上のマウスのX座標(横)を取得。canvas外なら-1。	motionZを指定しないと隣接してる「canvas」間を移動する際に正しくない値を拾う場合がある。
LTsv_global_canvasmotionY(motionZ=None)	「canvas」上のマウスのY座標(縦)を取得。canvas外なら-1。	motionZを指定しないと隣接してる「canvas」間を移動する際に正しくない値を拾う場合がある。
LTsv_global_canvascolor()	「canvas」に設定した描画色を取得。
LTsv_global_canvasbgcolor()	「canvas」に設定した背景色を取得。
LTsv_global_canvasTAG(TkinterTAG=None)	「canvas」に設定した描画タグを取得。もしくは変更。
LTsv_global_widgetltsv(new_LTSV=None)	<？GUIwidget>を管理している「L:Tsv」を取得。もしくは直接書き換え。
LTsv_global_widgetgetpage(LTsv_widgetPAGENAME)	widgetを管理している「L:Tsv」からwidgetのページを取得。
LTsv_global_widgetOBJ(LTsv_objid)	<？GUIwidget>などテキスト化できないオブジェクトは番号で管理していて、LTsv_objid暗号でオブジェクトを取得。
LTsv_global_pictureOBJ(LTsv_objid)	LTsv_objid暗号で画像オブジェクトを取得。
LTsv_global_pictureW(LTsv_objid)	画像オブジェクトの横幅を取得。
LTsv_global_pictureH(LTsv_objid)	画像オブジェクトの縦幅を取得。
LTsv_global_iconOBJ(LTsv_objid)	WindowsのアイコンIDを取得。
LTsv_global_popupmenuOBJ(LTsv_objid)	ポップアップメニューのオブジェクトを取得。
LTsv_widget_newUUID(LTsv_widgetID=None)	<？GUIwidget>管理用にユニークIDを発行する。	「uuid.uuid4()」と「str(time.time())」の組み合わせ。1秒未満以内に122bitの乱数が重複する事はほぼないと思うが重複する確率は理論上ゼロではないので注意。	LTsv_widgetIDにFalseを指定することで前回と同じIDを再発行できる。コールバック関数に自身のIDを渡す必要がある場合に必要。
LTsv_widget_newobj(LTsv_widgetPAGE,LTsv_widgetoption,widget_obj)	 「LTsv_widgetPAGEXYWH()」のオブジェクト管理で番号が被らないようにするカウンター。
LTsv_widget_getobj(LTsv_widgetPAGE,LTsv_widgetoption)	「LTsv_widget_newobj()」で登録したオブジェクトを直接IDで吸い出す関数。
LTsv_widgetPAGEXYWH(LTsv_widgetPAGE,widget_o=None,widget_k=None,widget_t=None,widget_u=None,widget_s=None,widget_e=None,widget_a=None,widget_v=None,widget_b=None, widget_p=None,widget_m=None,widget_g=None,widget_f=None,widget_x=None,widget_y=None,widget_w=None,widget_h=None,widget_c=None, event_z=None,event_k=None,event_y=None,event_b=None,event_p=None,event_r=None,event_e=None,event_m=None,event_l=None,event_a=None,event_u=None, menu_o=None,menu_b=None,menu_c=None,dialog_t=None,dialog_c=None)	詳細は「<？index/LTsv_gui-1>」参考。
LTsv_fonttuple(LTsv_line)	「Tkinter」のフォント指定はタプルなので、例えばCSV「"kan5x5comic,10"」なら「(kan5x5comic,10)」のようにタプルに変換。
LTsv_GTKwidget_fixed(window_c,widget_o,widget_x,widget_y,widget_w,widget_h,widget_f=None,widget_d=False)	「GTK2」のコンテナを「gtk_fixed_put」にしてフォントも「gtk_widget_modify_font」で指定する。	widget_dは「gtk_bin_get_child」が要求される場合の分岐。
LTsv_hideondelete_shell(LTsv_windowPAGENAME=None)	ウィンドウの閉じるボタンを押してもプログラム続行するようにする関数の取得。
LTsv_window_new(widget_n=None,event_b=None,widget_t="LTsv_window",widget_w=200,widget_h=120,event_z=None,event_k=None,event_y=None)	「window」オブジェクトを作成。widget_tにウィンドウのタイトル。	widget_w,widget_hにウィンドウサイズ(最小値)。event_zにコールバック関数登録で同時にリサイズの許可。	event_bはウィンドウを閉じた時にコールバック関数を呼ぶ場合指定。コールバック先で必ず「LTsv_window_exit()」を使う。	event_k,event_yはキーボード入力時(event_kが押した時event_yが離した時)のコールバック関数。
LTsv_widget_settext(LTsv_widgetPAGENAME,widget_t="")	<？GUIwidget>の文字列を設定。
LTsv_widget_gettext(LTsv_widgetPAGENAME)	<？GUIwidget>の文字列を取得。	ウィンドウのタイトル取得には「LTsv_window_title(LTsv_window_id)」という別解もある。
LTsv_widget_setnumber(LTsv_widgetPAGENAME,widget_s=0)	<？GUIwidget>の数値を設定。
LTsv_widget_getnumber(LTsv_widgetPAGENAME)	<？GUIwidget>の数値を取得。
LTsv_widget_seturi(LTsv_widgetPAGENAME,widget_u="")	<？GUIwidget>のURIを設定。
LTsv_widget_geturi(LTsv_widgetPAGENAME)	<？GUIwidget>のURIを取得。
LTsv_widget_showhide(LTsv_widgetPAGENAME,widget_i)	<？GUIwidget>の表示非表示の設定。	「Tkinter」の<？GUIwidget>非表示オプション未確認。
LTsv_widget_disableenable(LTsv_widgetPAGENAME,widget_i)	<？GUIwidget>の無効有効の設定。
LTsv_widget_focus(LTsv_widgetPAGENAME)	<？GUIwidget>にフォーカスする(「edit」「entry」「spin」などにカーソルを合わせる)。
LTsv_window_main(LTsv_windowPAGENAME)	<？GUIwidget>のイベント発生(コールバック)待機。スクリプトはここで一旦停止。	「LTsv_window_main()」の直後にもやる事ある場合「LTsv_window_after()」を使う。	「LTsv_guiinit()」から「LTsv_window_main()」の途中に「print()」「LTsv_libc_printf()」などコンソール系命令が挟まってるとGUIが起動しないので注意。
LTsv_window_after(LTsv_windowPAGENAME,event_b=None,event_i="mousemotion",event_w=1000)	タイマーの設定。「LTsv_window_main()」から一時的に抜け出す手段の一つ。	event_bにコールバックする関数の指定。Noneの場合何もしない。	event_iでタグの指定。タイマーは複数設置できるのでタグで管理。	event_tでタイマーイベント発生のミリ秒の指定。
LTsv_window_foreground()	アクティブウィンドウのIDを取得する。	ターミナルから起動した場合でもターミナルは別ウィンドウ。
LTsv_window_title(LTsv_window_id)	「LTsv_window_foreground()」で取得したウィンドウIDからタイトルを取得する。	通常使用の「LTsv_widget_gettext()」とは事なり別アプリのウィンドウからもタイトル取得できる。
LTsv_window_exit(window_objvoid=None,window_objptr=None)	スクリプトを終了する。	ウィンドウを閉じる時のコールバック関数を指定(LTsv_window_newにevent_b)してる場合そのコールバック先の関数の最後に設定。
LTsv_window_none(window_objvoid=None,window_objptr=None)	 何もしない。Pythonのpassみたいな使い方想定。
LTsv_screen_w(LTsv_windowPAGENAME="")	ディスプレイの縦サイズ。	「Tkinter」ではルートウィンドウが設置されてからでないと「winfo_vrootwidth()」が使えないので注意(代わりに-1を返します)。
LTsv_screen_h(LTsv_windowPAGENAME="")	ディスプレイの横サイズ。	「Tkinter」ではルートウィンドウが設置されてからでないと「winfo_vrootheight()」が使えないので注意(代わりに-1を返します)。
LTsv_window_wh(LTsv_windowPAGENAME)	ウィンドウの縦サイズ横サイズをタプルで取得。
LTsv_window_w(LTsv_windowPAGENAME)	ウィンドウの横サイズを数値で取得。
LTsv_window_h(LTsv_windowPAGENAME)	ウィンドウの縦サイズを数値で取得。
LTsv_window_resize(LTsv_windowPAGENAME,widget_w=16,widget_h=16)	「window」のリサイズ。
LTsv_label_new(LTsv_windowPAGENAME,widget_n=None,widget_t="LTsv_label",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「label」オブジェクトを作成。テキストを表示。widget_tにラベルで表示するテキスト。	widget_fはCSVで「widget_f="kan5x5comic,10"」のようにフォント指定。「LTsv_fonttuple()」も参考。
LTsv_image_new(LTsv_windowPAGENAME,widget_n=None,widget_u="LTsv_logo.png",widget_x=0,widget_y=0)	「image」オブジェクトを作成。画像を表示。widget_uに画像のファイルパス。	「LTsv_image_new()」は「LTsv_label_new()」と違ってwidget_w,widget_hによるオブジェクトの大きさ指定は無く、widget_x,widget_yによる表示位置座標のみ。
LTsv_button_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_t="LTsv_button",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「button」オブジェクトを作成。ボタンを押すとevent_bをコールバック。widget_tにボタンに表示するテキスト。
LTsv_check_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_t="LTsv_check",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「check」オブジェクトを作成。チェックマークをONOFFするとevent_bをコールバック。widget_tにラベルに表示するテキスト。
LTsv_radio_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_t="LTsv_radio",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「radio」オブジェクトを作成。ラジオボタンを選択するとevent_bをコールバック。widget_tにラベルに表示するテキスト。「LTsv_radio_new()」を連続して呼び出すと自動でラジオボタングループ(選択肢)として動作。	「LTsv_widget_getnumber()」で選択肢の取得。「LTsv_widget_setnumber()」で選択肢の変更。	GTKの場合チェックマークのONOFFと同じ理屈なのか2回分のコールバックが発生。	「Tkinter」の場合「LTsv_widget_setnumber()」でラジオボタンの個数を越える値も通るので注意。
LTsv_clipboard_new(LTsv_windowPAGENAME,widget_n=None)	「clipboard」を作成。クリップボードを用いたテキスト入力(コピペ補助)。	「LTsv_widget_settext()」「LTsv_widget_gettext()」でテキスト交換。
LTsv_clipmenu_new(widget_o)	「Tkinter」専用の内部関数。「edit」「entry」「spin」の右クリックメニュー(コピペ補助)を作成。
LTsv_edit_new(LTsv_windowPAGENAME,widget_n=None,widget_t="LTsv_edit",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「edit」オブジェクトを作成。テキスト複数行入力欄。widget_tに初期値テキスト。
LTsv_entry_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_t="LTsv_entry",widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「edit」オブジェクトを作成。テキスト１行入力欄入力欄。widget_tに初期値テキスト。	テキスト変更後エンターキーでevent_bをコールバック。
LTsv_spin_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_s=0,widget_e=255,widget_a=1,widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「spin」オブジェクトを作成。数値入力。数値変更でevent_bをコールバック。
LTsv_scale_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_s=0,widget_e=255,widget_a=1,widget_x=0,widget_y=0,widget_w=16,widget_h=16)	「scale」オブジェクトを作成。数値調節。数値変更でevent_bをコールバック。	「GTK2」と「Tkinter」で数値表示の位置というかデザインが異なるので注意。
LTsv_scale_adjustment(LTsv_widgetPAGENAME,widget_s=0,widget_e=255,widget_a=1)	「spin」「scale」の範囲を変更。	widget_s,widget_eで数値の範囲、widget_aで増減量の指定。
LTsv_combobox_list(LTsv_widgetPAGENAME,widget_t="")	「combobox」の項目を変更。widget_tに項目一覧をテキスト複数行で設定。
LTsv_combobox_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_x=0,widget_y=0,widget_w=16,widget_h=16,widget_f=None)	「combobox」オブジェクトを作成。「GTK2」のみ。	項目変更でevent_bをコールバック。	「Tkinter」版tkkなので未実装。
LTsv_canvas_new(LTsv_windowPAGENAME,widget_n=None,widget_x=0,widget_y=0,widget_w=16,widget_h=16,event_p=None,event_r=None,event_e=None,event_m=None,event_l=None,event_w=100)	「canvas」オブジェクトを作成。画像やテキストの描画。マウスジェスチャーでコールバック発生。任意のGUIを作れるはず。	event_pはマウス押下時のコールバック。event_rはマウス押上時のコールバック。	event_eはマウスポインタが「canvas」枠内に入ったのコールバック。event_lはマウスポインタが「canvas」枠外に出た時のコールバック。	event_mはマウスポインタが「canvas」枠内滞在中event_wミリ秒毎に発生する。マウスを動かしてなくてもevent_mにコールバックするので注意。	「GTK2」だとラスタ(ドット絵)形式「Tkinter」だとベクター(クリップアートやFlash)形式の違いがあります。
LTsv_drawGTK_selcanvas(LTsv_canvasPAGENAME,draw_g="LTsv_draw_tkTAG")	描画先「canvas」の指定。	「GTK2」の場合描画図形に添付するタグ「LTsv_draw_tkTAG」は不要。「LTsv_draw_selcanvas_shell()」の互換性で存在。
LTsv_drawTkinter_selcanvas(LTsv_canvasPAGENAME,draw_g="LTsv_draw_tkTAG")	描画先「canvas」の指定。	「Tkinter」の場合描画図形に添付するタグ「LTsv_draw_tkTAG」も指定できる。
LTsv_draw_selcanvas_shell(LTsv_GUI)	「LTsv_drawGTK_selcanvas()」か「LTsv_drawTkinter_selcanvas()」の関数取得。	「LTsv_draw_selcanvas=LTsv_draw_selcanvas_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_delete(draw_c="white")	「canvas」に描画した図形の消去。	「GTK2」だと長方形を上描き描画して図形を消去する(塗りつぶす)。
LTsv_drawTkinter_delete(draw_c="white")	「canvas」に描画した図形の消去。	「Tkinter」ではタグ(初期値は「LTsv_draw_tkTAG」)が付けられた図形を消去する(消去のみで塗りつぶすわけではない)。
LTsv_draw_delete_shell(LTsv_GUI)	「LTsv_drawGTK_delete()」か「LTsv_drawTkinter_delete()」の関数取得。	「LTsv_draw_delete=LTsv_draw_delete_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawTkinter_deleteTAG(TkinterTAG=None)	「canvas」に描画した図形の消去。「Tkinter」で特定のタグ付けられた図形を消去する。
LTsv_draw_deleteTAG_shell(LTsv_GUI)	「LTsv_drawTkinter_delete()」の関数取得。	「LTsv_drawGTK_delete()」は存在しないが文法上「LTsv_draw_deleteTAG_shell()」が存在。
LTsv_drawGTK_color(draw_c="")	「LTsv_drawGTK_delete()」か「LTsv_drawTkinter_delete()」の関数取得。	「LTsv_draw_delete=LTsv_draw_delete_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawTkinter_color(draw_c="")	「canvas」描画色指定。
LTsv_draw_color_shell(LTsv_GUI)	「canvas」描画色指定。
LTsv_drawGTK_bgcolor(draw_c="")	「canvas」背景色指定。グリフ穴空けなどの図形消去に使う色指定。
LTsv_drawTkinter_bgcolor(draw_c="")	「canvas」背景色指定。グリフ穴空けなどの図形消去に使う色指定。
LTsv_draw_bgcolor_shell(LTsv_GUI)	「LTsv_drawGTK_bgcolor()」か「LTsv_drawTkinter_bgcolor()」の関数取得。	「LTsv_draw_bgcolor=LTsv_draw_bgcolor_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_polygon(*draw_xy)	「canvas」にポリゴン(ワイヤフレーム)の描画。座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_polygon(*draw_xy)	「canvas」にポリゴン(ワイヤフレーム)の描画。座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_polygon_shell(LTsv_GUI)	「LTsv_drawGTK_polygon()」か「LTsv_drawTkinter_polygon()」の関数取得。	「LTsv_draw_polygon=LTsv_draw_polygon_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_polygonfill(*draw_xy)	「canvas」にポリゴン(塗り潰し)の描画。頂点座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_polygonfill(*draw_xy)	「canvas」にポリゴン(塗り潰し)の描画。頂点座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_polygonfill_shell(LTsv_GUI)	「LTsv_drawGTK_polygonfill()」か「LTsv_drawTkinter_polygonfill()」の関数取得。	「LTsv_draw_polygonfill=LTsv_draw_polygonfill_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_squares(draw_wh=16,*draw_xy)	「canvas」に正方形(ワイヤフレーム)を描画。draw_whは円で例えると半径のサイズ。	中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_squares(draw_wh=16,*draw_xy)	「canvas」に正方形(ワイヤフレーム)を描画。draw_whは円で例えると半径のサイズ。		中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_squares_shell(LTsv_GUI)	「LTsv_drawGTK_squares()」か「LTsv_drawTkinter_squares()」の関数取得。	「LTsv_draw_squares=LTsv_draw_squares_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_squaresfill(draw_wh=16,*draw_xy)	「canvas」に正方形(塗り潰し)を描画。draw_whは円で例えると半径のサイズ。	中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_squaresfill(draw_wh=16,*draw_xy)	「canvas」に正方形(塗り潰し)を描画。draw_whは円で例えると半径のサイズ。	中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_squaresfill_shell(LTsv_GUI)	「LTsv_drawGTK_squaresfill()」か「LTsv_drawTkinter_squaresfill()」の関数取得。	「LTsv_draw_squaresfill=LTsv_draw_squaresfill_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_circles(draw_wh=16,*draw_xy)	「canvas」に円(ワイヤフレーム)を描画。draw_whに円の半径サイズ。中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_circles(draw_wh=16,*draw_xy)	「canvas」に円(ワイヤフレーム)を描画。draw_whに円の半径サイズ。中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_circles_shell(LTsv_GUI)	「LTsv_drawGTK_circles()」か「LTsv_draw_circles_shell()」の関数取得。	「LTsv_draw_circles=LTsv_draw_circles_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_circlesfill(draw_wh=16,*draw_xy)	「canvas」に円(塗り潰し)を描画。draw_whに円の半径サイズ。中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_circlesfill(draw_wh=16,*draw_xy)	「canvas」に円(塗り潰し)を描画。draw_whに円の半径サイズ。中心座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_circlesfill_shell(LTsv_GUI)	「LTsv_drawGTKfill_circles()」か「LTsv_draw_circlesfillfill_shell()」の関数取得。	「LTsv_draw_circlesfill=LTsv_draw_circlesfill_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_points(*draw_xy)	「canvas」に点を描画。座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_drawTkinter_points(*draw_xy)	「canvas」に点(短線)を描画。座標はX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_draw_points_shell(LTsv_GUI)	「LTsv_drawGTK_points()」か「LTsv_drawTkinter_points()」の関数取得。	「LTsv_draw_points=LTsv_draw_points_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_arc(draw_x,draw_y,draw_w,draw_h,draw_s=-math.pi,draw_e=math.pi)	「canvas」に弧(円周のみ)を描画。「arc」の挙動が「GTK2」と「Tkinter」で事なる。	楕円に外接する長方形の左上座標がdraw_x,draw_y。長方形のサイズがdraw_w,draw_h。	draw_sが弧の開始角度。draw_eは開始位置からの相対角度。角度の単位はラジアン(2π)。
LTsv_drawTkinter_arc(draw_x,draw_y,draw_w,draw_h,draw_s=-math.pi,draw_e=math.pi)	「canvas」に扇(半径含む)を描画。「arc」の挙動が「GTK2」と「Tkinter」で事なる。	円に外接する長方形の左上座標がdraw_x,draw_y。長方形のサイズがdraw_w,draw_h。	draw_sが弧の開始角度。draw_eは開始位置からの相対角度。角度の単位はラジアン(2π)。
LTsv_draw_arc_shell(LTsv_GUI)	「LTsv_drawGTK_arc()」か「LTsv_drawTkinter_arc()」の関数取得。	「LTsv_draw_arc=LTsv_draw_arc_shell(LTsv_GUI)」の様に文法上プラットフォーム間差異吸収しても挙動が異なるので注意。
LTsv_drawGTK_arcfill(draw_x,draw_y,draw_w,draw_h,draw_s=-math.pi,draw_e=math.pi)	「canvas」に弧(塗り潰し)を描画。結果的に「GTK2」と「Tkinter」がほぼ同じ挙動。	楕円に外接する長方形の左上座標がdraw_x,draw_y。長方形のサイズがdraw_w,draw_h。	draw_sが弧の開始角度。draw_eは開始位置からの相対角度。角度の単位はラジアン(2π)。
LTsv_drawTkinter_arcfill(draw_x,draw_y,draw_w,draw_h,draw_s=-math.pi,draw_e=math.pi)	「canvas」に扇(塗り潰し)を描画。結果的に「GTK2」と「Tkinter」がほぼ同じ挙動。	楕円に外接する長方形の左上座標がdraw_x,draw_y。長方形のサイズがdraw_w,draw_h。	draw_sが弧の開始角度。draw_eは開始位置からの相対角度。角度の単位はラジアン(2π)。
LTsv_draw_arcfill_shell(LTsv_GUI)	「LTsv_drawGTK_arcfill()」か「LTsv_drawTkinter_arcfill()」の関数取得。	「LTsv_draw_arcfill=LTsv_draw_arcfill_shell(LTsv_GUI)」の様に文法上プラットフォーム間差異吸収しても挙動が異なるので注意。
LTsv_drawGTK_font(draw_f="")	「canvas」のフォント指定。widget_fにCSVで「widget_f="kan5x5comic,10"」のようにフォント指定。	「LTsv_fonttuple()」も参考。
LTsv_drawTkinter_font(draw_f=None)	「canvas」のフォント指定。widget_fにCSVで「widget_f="kan5x5comic,10"」のようにフォント指定。	「LTsv_fonttuple()」も参考。
LTsv_draw_font_shell(LTsv_GUI)	「LTsv_drawGTK_font()」か「LTsv_drawTkinter_font()」の関数取得。	「LTsv_draw_font=LTsv_draw_font_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_drawGTK_text(draw_t="",draw_x=0,draw_y=0)	「canvas」にフォントでテキストを描画。draw_tに文字列。左上座標はdraw_x,draw_y。	グリフでのテキスト描画は「<？index/LTsv_glyph-0>」を参考。
LTsv_drawTkinter_text(draw_t="",draw_x=0,draw_y=0)	「canvas」にフォントでテキストを描画。draw_tに文字列。左上座標はdraw_x,draw_y。	「Tkinter」には「<？CP932>」の制限があるのでグリフでのテキスト描画「<？index/LTsv_glyph-0>」も参考。
LTsv_draw_text_shell(LTsv_GUI)	「LTsv_drawGTK_text()」か「LTsv_drawTkinter_text()」の関数取得。	「LTsv_draw_text=LTsv_draw_text_shell(LTsv_GUI)」の様にプラットフォーム間差異吸収に使う。
LTsv_draw_picture_load(LTsv_picturepath)	「canvas」用の画像を読み込む。LTsv_picturepathはローカルの画像ファイルのパス。	GUIオブジェクト(widget)の「image」とは別腹。	「Tkinter」では先に「LTsv_canvas_new()」で「canvas」を作って置く必要がある。
LTsv_draw_picture_celldiv(LTsv_picturepath,picture_divw,picture_divh)	「LTsv_draw_picture_load()」で読み込んだ(読み込んでなければ読み込む)画像を分割して「filepath[num]」の様に番号を付けることができる。	「GTK2」でのみ実装。
LTsv_draw_picture_save(LTsv_pictureoldpath,LTsv_picturenewpath)	「LTsv_draw_picture_celdiv()」で分割した、あるいは分割前の「LTsv_draw_picture_load()」読み込んだ画像を保存。png推奨。	「GTK2」でのみ実装。
LTsv_draw_canvas_save(LTsv_canvasPAGENAME,LTsv_picturenewpath)	「canvas」を画像保存。png推奨。	「GTK2」でのみ実装。
LTsv_drawGTK_picture(LTsv_picturepath,draw_x=0,draw_y=0)	「canvas」に「LTsv_draw_picture_load()」で読み込んだ(「LTsv_draw_picture_celdiv()」で分割した)画像を描画。	LTsv_picturepathは「LTsv_draw_picture_load(LTsv_picturepath)」と同じパス(LTsv_draw_picture_celldiv()の場合「filepath[num]」の添字num数値は分割数範囲内)。左上座標はdraw_x,draw_y。
LTsv_drawTkinter_picture(LTsv_picturepath,draw_x=0,draw_y=0)	「canvas」に「LTsv_draw_picture_load()」で読み込んだ画像を描画。	LTsv_picturepathは「LTsv_draw_picture_load(LTsv_picturepath)」と同じパス。左上座標はdraw_x,draw_y。
LTsv_draw_picture_shell(LTsv_GUI)	「LTsv_drawGTK_picture()」か「LTsv_drawTkinter_picture()」の関数取得。	「LTsv_draw_picture=LTsv_draw_picture_shell(LTsv_GUI)」の様に文法上プラットフォーム間差異吸収しても挙動が異なるので注意。
LTsv_drawGTK_queue()	「canvas」の描画更新をする。描画更新を通知しないと描画が「window」に反映されません。「GTK2」でのみ必要。
LTsv_drawTkinter_queue()	「Tkinter」の「canvas」は描画更新を自動で行うのでこの関数は何もしません。文法上の都合で存在。
LTsv_draw_queue_shell(LTsv_GUI)	「LTsv_drawGTK_queue()」か「LTsv_drawTkinter_queue()」の関数取得。	「LTsv_draw_queue=LTsv_draw_queue_shell(LTsv_GUI)」の様に文法上プラットフォーム間差異吸収しても挙動が異なるので注意。
LTsv_clockwise(*draw_xy)	ポリゴンが時計回りなら正数、反時計回りなら負数、判定できない場合0のカウントを返す。	時計回りの判定は簡易的(外積による角度のみの計算で面積無視)なので８の字にねじった形状や十字手裏剣のような凹みのある形状を扱う場合注意。	座標は「LTsv_draw_polygon」系と同じくX座標とY座標が交互に来るタプル(x,y,x,y…)。
LTsv_icon_load(LTsv_picturepath)	通知タスクトレイ(Notify)に使うアイコン「*.ico」またはアイコンDLL「*.icl」を読込。	1つのファイルに複数のアイコンを認識できた場合「filepath[num]」の様に番号が添付される。	「WinAPI」でのみ実装(「Tkinter」でもWindowsなら「WinAPI」で対応)。「canvas」用途の画像とは別に管理。
LTsv_notifyicon_new(LTsv_windowPAGENAME,notify_n=None,widget_t="",widget_u="",menu_b=None,menu_c=None)	<？tasktrayNotify>の作成。	「GTK2」ではポップアップメニュー表示を実装できたが、「Tkinter」で「WinAPI」のイベントを拾う方法が不明なのでポップアップメニューが開けない。	widget_tはツールチップテキスト。	widget_uはアイコンのURI(ファイルパス)。「GTK2」では「LTsv_draw_picture_load()」、「WinAPI」では「LTsv_icon_load()」を呼び出す。	menu_bに「yield ("window exit",LTsv_window_exit_cbk)」のようなイテレータ生成関数を送るとポップアップメニューを作成。	menu_cにポップアップメニューとは別途1クリック実行するコールバック関数を指定。
LTsv_filedialog_new(LTsv_windowPAGENAME,widget_n=None,event_b=None,widget_t="LTsv_filedialog",dialog_t=0)	ファイルダイアログ「filedialog」の作成。widget_tにダイアログウィンドウ用のテキスト。	dialog_tでダイアログの種類。偶数ならOpen、奇数ならSave、2未満ならファイル、2以上ならフォルダ。	ダイアログウィンドウを表示するときは「LTsv_widget_showhide(kanedit_filedialog,True)」。	ボタンを押すとevent_bをコールバック。コールバック先で「LTsv_widget_showhide(kanedit_filedialog,False)」してダイアログウィンドウを閉じる必要。	キャンセルが実装されてないので注意。
debug_canvas(window_objvoid=None,window_objptr=None)	単体風テスト専用。「LTsv_window_after()」を使って「debug_canvas()」自身をループ。	日時表示の更新や「canvas」の描き替えをしてる。
debug_timebutton(callback_void=None,callback_ptr=None)	単体風テスト専用。reset「button」が押されたら日時フォーマットの初期化。
debug_calc(callback_void=None,callback_ptr=None)	単体風テスト専用。電卓の「entry」が書き換えた(Enterキー押下した)ら電卓フォーマットで演算。
debug_polygonpoints(callback_void=None,callback_ptr=None)	単体風テスト専用。描画テスト用ポリゴンの頂点がX座標とY座標が交互に来るタプル(x,y,x,y…)になってるか確認して奇数なら偶数に減らして揃える。
debug_polygonbutton(callback_void=None,callback_ptr=None)	単体風テスト専用。描画テスト用ポリゴンの頂点削除。
debug_activewindow(callback_void=None,callback_ptr=None)	単体風テスト専用。アクティブウィンドウのID取得テスト。
debug_canvas_press(callback_void=None,callback_ptr=None)	単体風テスト専用。「canvas」マウス押下のコールバック。
debug_color_scale(window_objvoid=None,window_objptr=None)	単体風テスト専用。「scale」で描画テスト用ポリゴンの色変更。
debug_color_combo(window_objvoid=None,window_objptr=None)	単体風テスト専用。「combobox」で描画テスト用ポリゴンの色変更…みたいなのを想定。未実装。「Tkinter」では機能しない。
debug_edit_clip(window_objvoid=None,window_objptr=None)	単体風テスト専用。クリップボード「clipboard」の動作確認。
debug_checkbutton_shell(checkNumber)	単体風テスト専用。「check」のコールバック用関数の例。「radio」と比較用途。	同じような動作をする<？GUIwidget>を複数連続で作る場合、関数をネストして関数自体を返り値にする関数を使います(クロージャ・関数閉包・高階関数…呼び名は色々)。
debug_radiobutton_shell(radioNumber)	単体風テスト専用。「radio」のコールバック用関数の例。「check」と比較用途。	同じような動作をする<？GUIwidget>を複数連続で作る場合、関数をネストして関数自体を返り値にする関数を使います(クロージャ・関数閉包・高階関数…呼び名は色々)。
debug_keypress(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？PCkeyboard>入力(押下)の動作検証。	「GTK2」の場合コールバック構造体から値を取り出す方法が不明なので、キー取得に別途「<？https/LTsv_kbd.py>」によるキー入力取得が必要です。詳細は「<？index/LTsv_kbd-0>」を参考。
debug_keyrelease(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？PCkeyboard>入力(押上)の動作検証。	「GTK2」の場合コールバック構造体から値を取り出す方法が不明なので、キー取得に別途「<？https/LTsv_kbd.py>」によるキー入力取得が必要です。詳細は「<？index/LTsv_kbd-0>」を参考。
debug_filedialog(window_objvoid=None,window_objptr=None)	単体風テスト専用。「filedialog」の表示テスト。
debug_filedialog_response(window_objvoid=None,window_objptr=None)	単体風テスト専用。「filedialog」のレスポンステスト。	「GTK2」で「GTK_RESPONSE_ACCEPT」を取り出す方法が不明なので、ファイルダイアログのキャンセル方法が不明。
|LTsv_gui.py]

[<＃contents/LTsv_gui-1>|
<？P> 「<？https/LTsv_gui.py>」では「<？GUIwidget>」を「L:Tsv」で管理してます。<？BR>
 ページ名として「LTsv_widget_newUUID()」で発行されるユニークIDが付与されます。<？BR>
 テキスト化できる項目とテキスト化できないので「LTsv_widget_newobj()」のIDだけを保管する項目とに仕分けるのが「LTsv_widgetPAGEXYWH()」の役割です。<？BR>
 オブジェクトを「L:Tsv」で管理する理由はガベージコレクションで消えるのを予防とグローバル変数が散らかるのを予防するためです。<？BR><？/P>
<？DLDT>   widget_o(widgetobj)<？/DTDD>                  <？GUIwidget>本体のポインターもしくはオブジェクトID。<？/DD/DL>
<？DLDT>   widget_k(widgetkind)<？/DTDD>                 <？GUIwidget>の種類。「LTsv_window_new()」なら「window」。<？BR>
                                       「LTsv_label_new()」なら"label"。<？BR>
                                       「LTsv_image_new()」なら"image"。<？BR>
                                       「LTsv_button_new()」なら"button"。<？BR>
                                       「LTsv_check_new()」なら"check"。<？BR>
                                       「LTsv_radio_new()」なら"radio"。<？BR>
                                       「LTsv_clipboard_new()」なら"clipboard"。<？BR>
                                       「LTsv_entry_new()」なら"entry"。<？BR>
                                       「LTsv_spin_new()」なら"spin"。<？BR>
                                       「LTsv_scale_new()」なら"scale"。<？BR>
                                       「LTsv_scale_new()」なら"combobox"。<？BR>
                                       「LTsv_combobox_new()」なら"combobox"。<？BR>
                                       「LTsv_canvas_new()」なら"canvas"。<？BR>
                                       「LTsv_notifyicon_new()」なら"notify"。<？BR>
                                       「LTsv_filedialog_new()」なら"filedialog"。<？BR><？/DD/DL>
<？DLDT>   widget_t(widgettext)<？/DTDD>                <？GUIwidget>が保有するテキスト。「window」のタイトルなど。<？/DD/DL>
<？DLDT>   widget_u(widgettext)<？/DTDD>                <？GUIwidget>が保有するURI(URLもしくはファイルパス)。「image」のファイルパスなど。<？/DD/DL>
<？DLDT>   widget_s(widgetstart)<？/DTDD>               「spin」「scale」など数値入力系<？GUIwidget>のmin(start)。<？/DD/DL>
<？DLDT>   widget_e(widgetend)<？/DTDD>                 「spin」「scale」など数値入力系<？GUIwidget>のmax(end)。<？/DD/DL>
<？DLDT>   widget_a(widgetadd)<？/DTDD>                 「spin」scale」など数値入力系<？GUIwidget>の増減量。「Tkinter」だと整数だが「GTK2」だと小数指定が可能。<？/DD/DL>
<？DLDT>   widget_v(widgetstringvar)<？/DTDD>           「entry」などテキスト入力系<？GUIwidget>のテキスト。<？/DD/DL>
<？DLDT>   widget_b(widgetbooleanvar)<？/DTDD>          「check」など論理値入力系<？GUIwidget>の0または1。<？/DD/DL>
<？DLDT>   widget_p(widgetphotoimage)<？/DTDD>          「image」などで管理される<？GUIwidget>の画像。<？/DD/DL>
<？DLDT>   widget_m(widgetpixmap)<？/DTDD>              「canvas」の「LTsv_libgdk.gdk_pixmap_new()」を「LTsv_widgetOBJ[str(LTsv_widgetOBJcount)]」で管理。<？/DD/DL>
<？DLDT>   widget_g(widgetgc)<？/DTDD>                  「canvas」の「LTsv_GDKCOLOR()」を「LTsv_widgetOBJ[str(LTsv_widgetOBJcount)]」で管理。<？/DD/DL>
<？DLDT>   widget_f(widgetfont)<？/DTDD>                <？GUIwidget>のフォント。<？/DD/DL>
<？DLDT>   widget_x(widgetsizeX)<？/DTDD>               <？GUIwidget>のウィンドウ内X座標。<？/DD/DL>
<？DLDT>   widget_y(widgetsizeY)<？/DTDD>               <？GUIwidget>のウィンドウ内Y座標。<？/DD/DL>
<？DLDT>   widget_w(widgetsizeW)<？/DTDD>               <？GUIwidget>の横幅。<？/DD/DL>
<？DLDT>   widget_h(widgetsizeH)<？/DTDD>               <？GUIwidget>の縦幅。<？/DD/DL>
<？DLDT>   widgetcontainer(widget_c)<？/DTDD>           「window」がオブジェクト配置するルールを格納するコンテナ。<？/DD/DL>
<？DLDT>   widgetresize(event_z)<？/DTDD>               「window」のサイズ変更時のコールバック関数。<？/DD/DL>
<？DLDT>   keyboard_press(event_k)<？/DTDD>             「window」のキー押した時のコールバック関数。<？/DD/DL>
<？DLDT>   keyboard_release(event_y)<？/DTDD>           「window」のキー離した時のコールバック関数。<？/DD/DL>
<？DLDT>   event_b(widgetcallback)<？/DTDD>             例えば「button」を押した時に呼び出されような何かしらのコールバック関数。<？/DD/DL>
<？DLDT>   event_p(mouse_press)<？/DTDD>                「canvas」でマウスボタンを押した時のコールバック関数。<？/DD/DL>
<？DLDT>   event_r(mouse_release)<？/DTDD>              「canvas」でマウスボタンを離した時のコールバック関数。<？/DD/DL>
<？DLDT>   event_e(mouse_enter)<？/DTDD>                「canvas」にマウスポインタが入った時のコールバック関数。<？/DD/DL>
<？DLDT>   event_m(mouse_motion)<？/DTDD>               「canvas」内でマウスポインタが動いた時のコールバック関数。<？/DD/DL>
<？DLDT>   event_l(mouse_leave)<？/DTDD>                「canvas」からマウスポインタが出た時のコールバック関数。<？/DD/DL>
<？DLDT>   event_a(notify_activate)<？/DTDD>            <？tasktrayNotify>を左クリックした時のコールバック関数。<？/DD/DL>
<？DLDT>   event_u(notify_popupmenu)<？/DTDD>           <？tasktrayNotify>を右クリックした時のコールバック関数。<？/DD/DL>
<？DLDT>   menu_o(popupmenuobj)<？/DTDD>                WindowsのNOTIFYICONなどポップアップメニューの呼び出し元となるオブジェクト。<？/DD/DL>
<？DLDT>   menu_b(popupmenubind)<？/DTDD>               ポップアップメニュー表示用コールバック関数。<？/DD/DL>
<？DLDT>   menu_c(popupmenuclick)<？/DTDD>              <？tasktrayNotify>クリック時のコールバック関数。<？/DD/DL>
<？DLDT>   dialog_t(dialog_type)<？/DTDD>                ファイルダイアログの種類。<？/DD/DL>
<？DLDT>   dialog_c(dialog_close)<？/DTDD>               ファイルダイアログを閉じる時のコールバック関数。<？/DD/DL>
|<＃contents/LTsv_gui-1>]

[<？section/LTsv_glyph-0>*<？section/LTsv_glyph-1>*<？section/LTsv_glyph-2>*<？section/LTsv_glyph-3>*<？section/LTsv_glyph-4>*<？section/LTsv_glyph-5>|
.+\.html?	<section>@E <h3 id="LTsv_glyph-@c"><？title/LTsv_glyph-@c></h3>@E<＃contents/LTsv_glyph-@c>@E</section>@E
.*	@E<？title/LTsv_glyph-@c>@E@E<＃contents/LTsv_glyph-@c>@E
|<？section/LTsv_glyph-0>*<？section/LTsv_glyph-1>*<？section/LTsv_glyph-2>*<？section/LTsv_glyph-3>*<？section/LTsv_glyph-4>*<？section/LTsv_glyph-5>]

[<＃contents/LTsv_glyph-0>|
<？P> 「<？https/LTsv_glyph.py>」は「canvas」上でフォントグリフを描画するモジュールです。<？VRkeyboard>関連も扱います。<？BR>
 ・「<？https08:LTsv_gui.py>」の「LTsv_draw_text」系列との違いはフォントを用いずにグリフを描画することです。<？BR>
 ・ 「Tkinter」では表示できない<？CP932>を越える3バイト以上のUTF-8文字を扱えます。<？BR>
 ・単体風テストとして<？VRkeyboard>で<？reversi>を操作するデモを作成。あくまでもデモなのでアルゴリズムは簡易。「entry」との比較用に<？VRcalc>のテストも。<？BR><？/P>

<！LTsv_glyph.py>
|<＃contents/LTsv_glyph-0>]

[LTsv_glyph.py|
LTsv_glyph_kbdinit(LTsv_tsvpath="LTsv/LTsv_glyph.tsv",LTsv_glyph_GUI="",LTsv_glyph_kbddefsize=None)	設定ファイル「<？https/LTsv_glyph.tsv>」の読込、<？DICchar>の読込、グリフ座標パイクル「LTsv/kanpickle.bin」の読込など初期化関連。	「LTsv_glyph_GUIにはLTsv_guiinit()」で取得する「Tkinter」か「GTK2」。	「<？https/LTsv_glyph.tsv>」の設定を無視してLTsv_glyph_kbddefsizeに<？VRkeyboard>の倍率が指定できるが後述の<？VRcalc>と連携が不十分。
LTsv_global_kandic(new_kandic=None)	<？DICchar>を取得できます。	「LTsv_glyph_kbdinit()」実行時に読み込んだメモリ上の辞書を読み込むのでファイルアクセスするわけではない点に留意。
LTsv_global_kanmap()	<？DICmap>を取得できます。	「LTsv_glyph_kbdinit()」実行時に読み込んだメモリ上の辞書を読み込むのでファイルアクセスするわけではない点に留意。
LTsv_global_kanmapN()	<？DICmap>のNFER鍵盤の配列を取得。
LTsv_global_kanmapX()	<？DICmap>のXFER鍵盤の配列を取得。
LTsv_global_kanpickle()	グリフの座標データを取得。
LTsv_global_irohatype()	<？DICmap>項目名としてのイロハ鍵盤名リスト。	通常は「ぬ,ふ,あ,う,え,お,や,ゆ,よ,わ,ほ,へ,た,て,い,す,か,ん,な,に,ら,せ,゛,゜,ち,と,し,は,き,く,ま,の,り,れ,け,む,つ,さ,そ,ひ,こ,み,も,ね,る,め,ろ,￥」
LTsv_global_irohatypeN()	NFER鍵盤で表示するイロハ鍵盤名のリスト。	通常は「ぬ,ふ,あ,う,え,お,や,ゆ,よ,わ,ほ,へ,た,て,い,す,か,ん,な,に,ら,せ,＠,ぷ,ち,と,し,は,き,く,ま,の,り,れ,け,む,つ,さ,そ,ひ,こ,み,も,ね,る,め,ろ,￥」
LTsv_global_irohatypeX()	XFER鍵盤で表示するイロハ鍵盤名のリスト。	通常は「ヌ,フ,ア,ウ,エ,オ,ヤ,ユ,ヨ,ワ,ホ,ヘ,タ,テ,イ,ス,カ,ン,ナ,ニ,ラ,セ,｀,プ,チ,ト,シ,ハ,キ,ク,マ,ノ,リ,レ,ケ,ム,ツ,サ,ソ,ヒ,コ,ミ,モ,ネ,ル,メ,ロ,｜」
LTsv_global_alphatype()	<？DICmap>項目名としてのα鍵盤名のリスト。	通常は「α,β,γ,δ,ε,ζ,η,θ,ι,κ,λ,μ,ν,ξ,ο,π,ρ,σ,τ,υ,φ,χ,ψ,ω,○,△,□」
LTsv_global_alphatypeN()	NFER鍵盤で表示するα鍵盤名のリスト。	通常は「α,β,γ,δ,ε,ζ,η,θ,ι,κ,λ,μ,ν,ξ,ο,π,ρ,σ,τ,υ,φ,χ,ψ,ω,○,△,□」
LTsv_global_alphatypeX()	XFER鍵盤で表示するα鍵盤名のリスト。	通常は「Α,Β,Γ,Δ,Ε,Ζ,Η,Θ,Ι,Κ,Λ,Μ,Ν,Ξ,Ο,Π,Ρ,Σ,Τ,Υ,Φ,Χ,Ψ,Ω,●,▲,■」
LTsv_global_dictype()	辞書名のリスト。通常は「英,名,音,訓,送,異,俗,熙,簡,繁,越,地,顔,鍵,代,逆,非,難,活,漫,筆,幅」
LTsv_global_glyphtype()	グリフ名のリスト。通常は「活,漫,筆」
LTsv_global_choice()	辞書変更鍵盤のリスト。通常は「名,音,訓,送,異,俗,簡,繁,越,地,逆,非,英,顔,ε,ρ,τ,υ,θ,ι,ο,π,＠,ぷ,α,σ,δ,φ,γ,η,ξ,κ,λ,代,鍵,ぬ,ζ,χ,ψ,ω,β,ν,μ,熙,○,△,□,￥,σ」
LTsv_global_choiceN()	NFER鍵盤で表示する辞書変更鍵盤。通常は「名,音,訓,送,異,俗,簡,繁,越,地,逆,非,英,顔,ε,ρ,τ,υ,θ,ι,ο,π,＠,ぷ,α,σ,δ,φ,γ,η,ξ,κ,λ,代,鍵,ぬ,ζ,χ,ψ,ω,β,ν,μ,熙,○,△,□,￥,σ」
LTsv_global_choiceX()	XFER鍵盤で表示する辞書変更鍵盤。通常は「名,音,訓,送,異,俗,簡,繁,越,地,逆,非,英,顔,Ε,Ρ,Τ,Υ,Θ,Ι,Ο,Π,｀,プ,Α,Σ,Δ,Φ,Γ,Η,Ξ,Κ,Λ,代,鍵,ぬ,Ζ,Χ,Ψ,Ω,Β,Ν,Μ,熙,●,▲,■,￥,Σ」
LTsv_global_evaltype()	電卓コマンドのリスト。通常は「平,片,大,小,半,全,＼,￥,清,Ｈ,Ｍ,濁,Ｂ,Ｐ,今,⑩,⑯,⑧,⓪,照,探,〒,汎,算」
LTsv_global_irohaalpha()	LTsv_global_irohatype()+LTsv_global_alphatype()。<？DICmap>項目名全部。
LTsv_global_irohaalphaN()	NFER鍵盤で表示する全鍵盤名のリスト。
LTsv_global_irohaalphaX()	XFER鍵盤で表示する全鍵盤名のリスト。
LTsv_global_kbdchars()	<？VRkeyboard>で表示する文字。	NFER,XFER,KANAの操作で鍵盤を交換して、表示されてる文字を入力する。
LTsv_global_glyphkbdH()	<？VRkeyboard>の縦サイズ。	LTsv_glyph_kbddefsizeが1の時24。
LTsv_global_glyphkbdW()	<？VRkeyboard>の縦サイズ。	LTsv_glyph_kbddefsizeが1の時96。
LTsv_global_glyphkbdF()	<？VRkeyboard>の文字スペースサイズ。	LTsv_glyph_kbddefsizeが1の時、グリフサイズが5になるので時余白1ドット込みで6。
LTsv_global_kbdcursorNone()	52。	文字入力48鍵+鍵盤制御4鍵(IME想定では4鍵だったが漢直専用エディタでは3鍵に減らせた)の合計。
LTsv_global_kanmappath()	<？DICmap>のファイルパス。
LTsv_global_kandicpath()	<？DICchar>のファイルパス。
LTsv_global_worddicpath()	<？DICword>のファイルパス。
LTsv_global_zipdicpath()	<？DICzip>のファイルパス。
LTsv_global_picklepath()	グリフ座標データ「kanpickle.bin」のファイルパス。
LTsv_glyphSVG5x10x20x(LTsv_kanpath5x10x20x)	
LTsv_glyph5x10x20x(LTsv_kanpathSVG)	
LTsv_glyphSVG(LTsv_glyph_path)	グリフの座標データをSVGからリストに変換。
LTsv_glyphpath(glyphcode)	グリフの「活」「漫」「筆」および「幅」データを<？DICchar>から抽出。同時にポリゴンの回転方向を事前に計算。
LTsv_glyphfont_5x5(glyphcode)	グリフ「活」の座標データと計算済みのポリゴン回転方向を用意。
LTsv_glyphfont_comic(glyphcode)	グリフ「漫」の座標データと計算済みのポリゴン回転方向を用意。
LTsv_glyphfont_brush(glyphcode)	グリフ「筆」の座標データと計算済みのポリゴン回転方向を用意。
LTsv_glyphfont_shell(draw_g="活")	グリフの「活」「漫」「筆」に応じて専用関数を呼び出す。
LTsv_draw_glyphs(draw_t,draw_x=0,draw_y=0,draw_f=10,draw_w=1,draw_h=1,draw_g="活",draw_LF=False,draw_HT=False)	「canvas」にグリフ描画(ワイヤフレーム)。draw_tにテキスト文字列、draw_x,draw_yに表示座標。	draw_fにフォントサイズ。draw_gでフォントの種類。draw_w,draw_hは文字間の隙間。
LTsv_draw_glyphsfill(draw_t,draw_x=0,draw_y=0,draw_f=10,draw_w=1,draw_h=1,draw_g="活",draw_LF=False,draw_HT=False)	「canvas」にグリフ描画(塗り潰し)。draw_tにテキスト文字列、draw_x,draw_yに表示座標。	draw_fにフォントサイズ。draw_gでフォントの種類。draw_w,draw_hは文字間の隙間。
LTsv_draw_glyphskbd(draw_t,draw_x=0,draw_y=0,draw_f=5,draw_g="活")	「canvas」にグリフ描画１文字分。改行処理などを省いた高速描画用。<？VRkeyboard>など等幅表示想定。
LTsv_draw_glyphclock(draw_t="",draw_x=0,draw_y=0,draw_f=LTsv_PSchar_ZW//2,draw_g="活",color_R="#6E81D9",color_L="#6ED997",color_X="#D96ED3")	ほぼ「kanfont」用。1文字のグリフの右回転をcolor_R、左回転をcolor_L、判別困難または不能な図形はcolor_Xで色分けする(ワイヤフレーム)。
LTsv_draw_glyphclockfill(draw_t="",draw_x=0,draw_y=0,draw_f=LTsv_PSchar_ZW//2,draw_g="活",color_R="#6E81D9",color_L="#6ED997",color_X="#D96ED3")	ほぼ「kanfont」用。1文字のグリフの右回転をcolor_R、左回転をcolor_L、判別困難または不能な図形はcolor_Xで色分けする(塗り潰し)。
LTsv_draw_glyphcursor(draw_t="",draw_x=0,draw_y=0,path_z=0,draw_s=0,grid_p=-1,grid_q=-1,draw_f=LTsv_PSchar_ZW//2,draw_g="活",color_R="#6E81D9",color_L="#6ED997",color_X="#D96ED3")	ほぼ「kanfont」用。グリフのポリゴン頂点や線分がマウスカーソルで選択状態にあるか表示する。
LTsv_draw_glypwide(draw_t="",draw_x=0,draw_y=0,draw_s=0,draw_f=LTsv_PSchar_ZW//2,draw_g="活",color_W="#9F6C00")	ほぼ「kanfont」用。フォントグリフの「幅」を表示。
LTsv_draw_glyphmouse(draw_t="",draw_x=0,draw_y=0,path_z=0,grid_x=LTsv_PSchar_ZW//2,grid_y=LTsv_PSchar_ZW//2,mouse_x=LTsv_PSchar_ZW//2,mouse_y=LTsv_PSchar_ZW//2,draw_f=LTsv_PSchar_ZW//2,draw_g="活")	ほぼ「kanfont」用。mouse_x,mouse_yにマウス座標を入れて「LTsv_draw_glyphcursor()」で使用する「grid_p」「grid_q」の値を取得。
LTsv_glyph_getnote(draw_t="",draw_g="活")	グリフの座標をリストで取得。draw_tにテキスト1文字分、draw_gでグリフの種類。
LTsv_glyph_pointsrotation(glyphnote=[])	グリフ座標のポリゴンの座標の順番を回転ソートしてリスト先頭座標を左上に配置。
LTsv_glyph_points2path(draw_t="",glyphnote=[],draw_g="活")	ほぼ「kanfont」用。<？DICchar>のグリフを座標データで更新する。	draw_tに1文字、draw_gでフォントの種類。glyphnoteはグリフ座標リストを直接。
LTsv_glyph_text2path(draw_t="",kanpath="",draw_g="俗")	<？DICchar>のグリフをkanpathのテキストデータで更新する。	グリフ以外のデータの更新にも使える。
LTsv_glyph_kbdcursor(kbd_canvas,kbd_x,kbd_y)	<？VRkeyboard>のどのキーの上にマウスカーソルがあるか調べる。kbd_canvasでキャンバス、kbd_x,kbd_yで<？VRkeyboard>の表示位置。	<？VRkeyboard>の上にマウスが無い場合「LTsv_global_kbdcursorNone()」を返す。
LTsv_glyph_kbdselect(choice)	<？VRkeyboard>を鍵盤名(LTsv_glyph_irohaalphaN,LTsv_glyph_irohaalphaX)で変更する。	鍵盤名は「LTsv_global_irohaalphaN()」「LTsv_global_irohaalphaX()」で取得。
LTsv_glyph_choiceNX(choice)	鍵盤名がLTsv_glyph_irohaalphaNもしくはLTsv_glyph_irohaalphaXの何番目か数値で取得。
LTsv_glyph_kbdfind(find_t)	find_tが<？DICmap>にあるか検索して<？VRkeyboard>の鍵盤を変更する。	find_tは複数の文字が使用できるので、先頭文字から順に見つからない場合は次の文字を探す。	<？DICchar>も動員して異体字なども調べる場合は「LTsv_evaltext()」を使う。
LTsv_glyph_tapcallback_shell(kbd_canvas,callback)	<？VRkeyboard>の文字入力を受け取るコールバック関数の指定。	文字入力判定はマウス押下ではなくマウス押上、タップ動作。
LTsv_glyph_mousepress(kbd_canvas,kbd_x,kbd_y)	「canvas」のマウス押下動作に対応する<？VRkeyboard>を描画。	「canvas」の「event_p=*_mousepress」系コールバック関数内に設置。	カーソルが<？VRkeyboard>の外にある場合「LTsv_global_kbdcursorNone()」が返り値。
LTsv_glyph_mousemotion(kbd_canvas,kbd_x,kbd_y)	「canvas」のマウス移動動作に対応する<？VRkeyboard>を描画。	「canvas」の「event_m=*_mousemotion」系コールバック関数内に設置。	カーソルが<？VRkeyboard>の外にある場合「LTsv_global_kbdcursorNone()」が返り値。
LTsv_glyph_mouserelease(kbd_canvas,kbd_x,kbd_y)	「canvas」のマウス押上動作に対応する<？VRkeyboard>を描画。	「canvas」の「event_r=*_mouserelease」系コールバック関数内に設置。	カーソルが<？VRkeyboard>の外にある場合LTsv_global_kbdcursorNone()」が返り値。
LTsv_glyph_kbddelete(kbd_canvas)	<？VRkeyboard>の消去。特に「Tkinter」では描画した図形は消す必要がある(消さないとオブジェクトが無限増殖の危険性)ので注意。
LTsv_glyph_kbddraw(kbd_canvas,kbd_x,kbd_y,kbd_c=LTsv_glyph_None)	<？VRkeyboard>の描画。	「LTsv_glyph_mousepress()」「LTsv_glyph_mousemotion()」「LTsv_glyph_mouserelease()」でも消去アンド描画されるはず。
LTsv_glyph_picklesave()	グリフの座標データpickleをセーブします。初期設定的には「LTsv/kanpickle.bin」のはず。
LTsv_evaltext(calc_value="")	calc_valueに数式などを入れると「Q⇔A」形式で答えを返す関数です。「LTsv_glyph_kbdfind()」のように漢字探索もします。主に「<？VRcalc>」で使用します。	詳細は「<？index/LTsv_glyph-4>」を参考。
LTsv_glyph_calcsetup(calc_canvas,calculatorX=0,calculatorY=0,calculatorW=LTsv_global_glyphkbdW(),calculatorH=LTsv_global_glyphkbdH(),calculatorC=None,calculatorB=None,calculatorT="")	「<？VRcalc>(<？VRkeyboard>含む)」の初期設定。calculatorTは初期テキスト。	calculatorX,calculatorYは表示位置座標、calculatorW,calculatorHは入力欄のサイズ(<？VRkeyboard>より大きくする必要)、	calculatorCには「clipboard」オブジェクト、calculatorBには<？VRkeyboard>の文字入力を受けとるコールバック関数。
LTsv_glyph_calcresize(calc_canvas,calculatorX=None,calculatorY=None,calculatorW=None,calculatorH=None,calculatorT=None,calculatorTX=None,calculatorTC=None)	「<？VRcalc>(<？VRkeyboard>含む)」の設定変更もしくはテキストの取得(返り値)。	calculatorTXは文字表示位置を移動。calculatorTCはカーソル移動。
LTsv_glyph_calcdelete(calc_canvas)	<？VRcalc>の消去。特に「Tkinter」では描画した図形は消す必要がある(消さないとオブジェクトが無限増殖の危険性)ので注意。
LTsv_glyph_calcdraw(calc_canvas)	<？VRcalc>の描画。	「LTsv_glyph_calcpress()」「LTsv_glyph_calcmotion()」「LTsv_glyph_calcrelease()」でも消去アンド描画されるはず。
LTsv_glyph_calcdrawplane(calc_canvas,calc_canvasfgcolor=None,calc_canvasbgcolor=None)	<？VRcalc>の描画。	ただし<？VRkeyboard>を非表示、入力欄のカーソルも表示しない。マウスフォーカスが外れてる事を示す用途。	calc_canvasfgcolorで描画色、calc_canvasbgcolorで背景色の変更。
LTsv_glyph_widecache(draw_t,draw_x=0,draw_y=0,draw_f=10,draw_w=1,draw_g="漫")	<？VRcalc>のテキストの文字一個一個の座標を記録。
LTsv_glyph_calcglyphs(calc_canvas)	<？VRcalc>内でテキスト表示。選択テキスト(カーソル)のワイヤーフレーム表示や、入力欄からはみ出る文字を非表示にしたりする。	入力欄操作の詳細は「<？index/LTsv_glyph-3>」を参考。
LTsv_glyph_calcpress(calc_canvas)	「canvas」のマウス押下動作に対応する<？VRcalc>を描画。	「canvas」の「event_p=*_mousepress」系コールバック関数内に設置。	カーソルが<？VRcalc>の中にある場合True、外にある場合Falseが返り値。
LTsv_glyph_calcmotion(calc_canvas)	「canvas」のマウス移動動作に対応する<？VRcalc>を描画。	「canvas」の「event_m=*_mousemotion」系コールバック関数内に設置。	カーソルが<？VRcalc>の中にある場合True、外にある場合Falseが返り値。
LTsv_glyph_calcrelease(calc_canvas)	「canvas」のマウス押上動作に対応する<？VRcalc>を描画。	「canvas」の「event_r=*_mouserelease」系コールバック関数内に設置。	カーソルが<？VRcalc>の中にある場合True、外にある場合Falseが返り値。
LTsv_glyph_calcenter(calc_canvas)	「canvas」にマウスカーソルが入った時の<？VRcalc>を描画。	「canvas」の「event_e=*_mouserelease」系コールバック関数内に設置。	返り値は入力欄のテキスト。
LTsv_glyph_calcleave(calc_canvas)	「canvas」からマウスカーソルが出た時の<？VRcalc>を描画。	「canvas」の「event_l=*_mouserelease」系コールバック関数内に設置。	返り値は入力欄のテキスト。
LTsv_glyph_calcinput(calc_canvas,glyph_calcinput="")	glyph_calcinputが文字なら<？VRcalc>に文字入力、カーソル移動など編集指示ならテキスト処理。	glyph_calcinputを省略すると再描画のみ。
LTsv_glyph_typeNXK(glyphtype_getkbdnames,LTsv_glyph_NXKbf)	「LTsv_glyph_calctype()」「LTsv_glyph_calctypelimited()」から呼び出される関数。glyphtype_getkbdnamesにはキーボードの押下情報。	NFERキーが押されてる場合はLTsv_glyph_NFER(49)、XFERキーが押されてる場合はLTsv_glyph_XFER(50)、KANAキーが押されてる場合はLTsv_glyph_KANA(51)。	NFERキーとXFERキー両方を押してる場合にはLTsv_glyph_SandS(48)、もしくはLTsv_glyph_KANA(51)。SandSはSpaceキーを使ってた時期の名残り。	NFERキーとKANAキーの時は「σ」に鍵盤変更、XFERキーとKANAキーの時は「Σ」に鍵盤変更。
LTsv_glyph_calctype(calc_canvas)	「canvas」にマウスカーソルがある状態で<？PCkeyboard>押下に対応する<？VRkeyboard>を描画。	「window」の「event_k=*_keypress」系「event_y=*_keyrelease」系両方のコールバック関数内に設置。
LTsv_glyph_calctypelimited(calc_canvas,kbd_x,kbd_y)	「canvas」にマウスカーソルがある状態で<？PCkeyboard>押下に対応する<？VRkeyboard>を描画。	「window」の「event_k=*_keypress」系「event_y=*_keyrelease」系両方のコールバック関数内に設置。	「LTsv_glyph_calctypelimited()」は<？VRcalc>を用いず<？VRkeyboard>のみを直接操作する用途。
debug_calculatormousepress(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？VRcalc>用「canvas」マウス押下のコールバック。
debug_calculatormousemotion(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？VRcalc>用「canvas」マウス移動のコールバック。
debug_calculatormouserelease(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？VRcalc>用「canvas」マウス押上のコールバック。
debug_calculatormouseleave(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？VRcalc>用「canvas」にマウスカーソルが入った時のコールバック。
debug_calculatormouseenter(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？VRcalc>用「canvas」からマウスカーソルが出た時のコールバック。
debug_calculatormouseinput(calculatormouseinput)	単体風テスト専用。<？VRcalc>の文字入力を受け取るコールバック関数の指定。
debug_calculatorcommand(glyph_calcinput)	単体風テスト専用。Enter機ーを押した時に電卓機能を発動。	電卓機能の詳細は「<？index/LTsv_glyph-4>」を参考。
debug_reversi_mousepress(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi><？VRkeyboard>用「canvas」マウス押下のコールバック。
debug_reversi_mousemotion(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi><？VRkeyboard>用「canvas」マウス移動のコールバック。
debug_reversi_mouserelease(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi><？VRkeyboard>用「canvas」マウス押上のコールバック。
debug_reversi_keypress(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi><？VRkeyboard>用「canvas」にマウスカーソルが入った時のコールバック。
debug_reversi_keyrelease(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi><？VRkeyboard>用「canvas」からマウスカーソルが出た時のコールバック。
debug_milklid_check(xy,bw)	単体風テスト専用。<？reversi>でxy升にbw石が置けるか(裏返せる石があるか)チェック。
debug_milklid_turn(xy,bw)	単体風テスト専用。<？reversi>でxy升にbw石を置いて挟んだ石を裏返す。
debug_milkAI_BS(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi>で一手前に戻す(棋譜を1文字削る)。
debug_milkAI_reset()	単体風テスト専用。棋譜初期化。<？reversi>AIのアルゴリズム初期化(戦略変更)。
debug_milkAI_entry(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi>の棋譜更新。
debug_milkAI_Auto(window_objvoid=None,window_objptr=None)	単体風テスト専用。<？reversi>AIが自動で石を置く。「Auto」ボタンは手動で押す。
debug_milkAI_add(addentry)	単体風テスト専用。<？reversi>の升に何らかの方法で石を置く時の動作。試合が決着してる場合は盤面初期化。
debug_configload()	単体風テスト専用。「LTsv/kanglyph.tsv」から棋譜を読み込む。	「LTsv/kanglyph.tsv」の詳細は「<？index/LTsv_glyph-1>」を参考。
debug_configsave_exit(window_objvoid=None,window_objptr=None)	単体風テスト専用。「LTsv/kanglyph.tsv」に<？reversi>の棋譜を保存。グリフの座標データpickleも「LTsv_glyph_picklesave()」で保存。
|LTsv_glyph.py]

[<＃contents/LTsv_glyph-1>|
<？P> 「<？https/LTsv_glyph.tsv>」は「<？https/LTsv_glyph.py>」の設定ファイルです。<？BR><？/P>
<！LTsv_glyph.tsv>
|<＃contents/LTsv_glyph-1>]

[LTsv_glyph.tsv|
[kanglyph|	「<？https/LTsv_glyph.py>」の設定。
dicname	単漢字辞書を指定。初期値は「kanchar.tsv」。
mapname	<？VRkeyboard>の漢字配列を指定。初期値は「kanmap.tsv」。
picklename	グリフ座標データのパイクルを指定。初期値は「kanpickle.bin」。
irohatype	<？DICmap>項目名としてのイロハ鍵盤名リスト。	初期値は「ぬ\tふ\tあ\tう\tえ\tお\tや\tゆ\tよ\tわ\tほ\tへ\tた\tて\tい\tす\tか\tん\tな\tに\tら\tせ\t゛\t゜\tち\tと\tし\tは\tき\tく\tま\tの\tり\tれ\tけ\tむ\tつ\tさ\tそ\tひ\tこ\tみ\tも\tね\tる\tめ\tろ\t￥」
irohatypeN	NFER鍵盤におけるイロハ鍵盤名のリスト。	初期値は「ぬ\tふ\tあ\tう\tえ\tお\tや\tゆ\tよ\tわ\tほ\tへ\tた\tて\tい\tす\tか\tん\tな\tに\tら\tせ\t＠\tぷ\tち\tと\tし\tは\tき\tく\tま\tの\tり\tれ\tけ\tむ\tつ\tさ\tそ\tひ\tこ\tみ\tも\tね\tる\tめ\tろ\t￥」
irohatypeX	XFER鍵盤におけるイロハ鍵盤名のリスト。	初期値は「ヌ\tフ\tア\tウ\tエ\tオ\tヤ\tユ\tヨ\tワ\tホ\tヘ\tタ\tテ\tイ\tス\tカ\tン\tナ\tニ\tラ\tセ\t｀\tプ\tチ\tト\tシ\tハ\tキ\tク\tマ\tノ\tリ\tレ\tケ\tム\tツ\tサ\tソ\tヒ\tコ\tミ\tモ\tネ\tル\tメ\tロ\t｜」
alphatype	α鍵盤名のリスト。	初期値は「α\tβ\tγ\tδ\tε\tζ\tη\tθ\tι\tκ\tλ\tμ\tν\tξ\tο\tπ\tρ\tσ\tτ\tυ\tφ\tχ\tψ\tω\t○\t△\t□」
alphatypeN	NFER鍵盤におけるα鍵盤名のリスト。	初期値は「α\tβ\tγ\tδ\tε\tζ\tη\tθ\tι\tκ\tλ\tμ\tν\tξ\tο\tπ\tρ\tσ\tτ\tυ\tφ\tχ\tψ\tω\t○\t△\t□」
alphatypeX	XFER鍵盤におけるα鍵盤名のリスト。	初期値は「Α\tΒ\tΓ\tΔ\tΕ\tΖ\tΗ\tΘ\tΙ\tΚ\tΛ\tΜ\tΝ\tΞ\tΟ\tΠ\tΡ\tΣ\tΤ\tΥ\tΦ\tΧ\tΨ\tΩ\t●\t▲\t■」
dictype	辞書名のリスト。	初期値は「英\t名\t音\t訓\t送\t異\t俗\t熙\t簡\t繁\t越\t地\t顔\t鍵\t代\t逆\t非\t難\t活\t漫\t筆\t幅」
glyphtype	グリフ名のリスト。	初期値は「活\t漫\t筆」
choice	辞書変更鍵盤のリスト。	初期値は「名\t音\t訓\t送\t異\t俗\t簡\t繁\t越\t地\t逆\t非\t英\t顔\tε\tρ\tτ\tυ\tθ\tι\tο\tπ\t＠\tぷ\tα\tσ\tδ\tφ\tγ\tη\tξ\tκ\tλ\t代\t鍵\tぬ\tζ\tχ\tψ\tω\tβ\tν\tμ\t熙\t○\t△\t□\t￥\tσ」
choiceN	NFER鍵盤における辞書変更鍵盤。	初期値は「名\t音\t訓\t送\t異\t俗\t簡\t繁\t越\t地\t逆\t非\t英\t顔\tε\tρ\tτ\tυ\tθ\tι\tο\tπ\t＠\tぷ\tα\tσ\tδ\tφ\tγ\tη\tξ\tκ\tλ\t代\t鍵\tぬ\tζ\tχ\tψ\tω\tβ\tν\tμ\t熙\t○\t△\t□\t￥\tσ」
choiceX	XFER鍵盤における辞書変更鍵盤。	初期値は「名\t音\t訓\t送\t異\t俗\t簡\t繁\t越\t地\t逆\t非\t英\t顔\tΕ\tΡ\tΤ\tΥ\tΘ\tΙ\tΟ\tΠ\t｀\tプ\tΑ\tΣ\tΔ\tΦ\tΓ\tΗ\tΞ\tΚ\tΛ\t代\t鍵\tぬ\tΖ\tΧ\tΨ\tΩ\tΒ\tΝ\tΜ\t熙\t●\t▲\t■\t￥\tΣ」
evaltype	初期値は「平\t片\t大\t小\t半\t全\t＼\t￥\t清\tＨ\tＭ\t濁\tＢ\tＰ\t今\t⑩\t⑯\t⑧\t⓪\t照\t探\t〒\t汎\t算」
eval_slash	半角スラッシュ「/」を全角に変換(「全」だと曖昧な指示)する時、全角スラッシュ「／」と全角円記号「￥」のどっちに変換するか指定。	初期値は「￥」。
eval_dakuon	清音を濁音に(「濁」だと曖昧な指示)する時、ハ行は"ばびぶべぼ"のみを扱う「Ｂ」か"まみむめも"から"ぱぴぷぺぽ"に変換する「Ｐ」を指定。	初期値は「Ｐ」。
eval_seion	濁音を清音に(「清」だと曖昧な指示)する時、"ばびぶべぼ"も"ぱぴぷぺぽ"も"はひふへほ"に変換する「Ｈ」か"ぱぴぷぺぽ"は"まみむめも"に変換する「Ｍ」を指定。	初期値は「Ｈ」。
eval_now	入力欄で「今今」と入力した時に表示する現在時刻。	初期値は「年-月-日(週曜)時:分:秒」。
eval_branch	入力欄で「今枝」と入力した時に表示する現在時刻。	初期値は「@000y@0m@0dm@wdec@0h@0n@0s」。
eval_overhour	日時フォーマットの徹夜時刻の指定。24〜48のいずれか。
eval_worddicname	<？DICword>ファイルの指定(無くても動作)。	初期値は「../kanword.tsv」。
eval_zipdicname	郵便番号辞書ファイルの指定(無くても動作)。	初期値は「../kanzip.tsv」。<？DICzip>の作成には「<？https/kanzip.py>」を用いる。	詳細は「<？index/kanzip_usage-0>」を参考。
last_alpha	<？VRkeyboard>が最後に表示したα鍵盤を記録。
last_dic	<？VRkeyboard>が最後に表示した単漢字辞書の項目を記録。
kbdTAG	「Tkinter」で<？VRkeyboard>を再描画するため「LTsv_draw_tkTAG」とは別のタグが必要。	初期値は「kanglyphkbd」。
fontcolor	<？VRkeyboard>のグリフ描画色。	初期値は「black」。
bgcolor	<？VRkeyboard>の鍵盤背景色。	初期値は「#E1FFFA」。
leavecolor	<？VRcalc>がフォーカス外の時の入力欄背景色。	初期値は「white」。
kbddefsize	<？VRkeyboard>の拡大倍率。	初期値は「1」。変更非推奨。
kbdNX	[NFER]キー[XFER]キーが使えない場合「NFER:ShiftL\tXFER:ShiftR\tKANA:KANA」に置き換えると[Shift]キーで代用できる。	初期値は「NFER:NFER\tXFER:XFER\tKANA:KANA」。
[reversi|	「<？https/LTsv_glyph.py>」単体風テストの<？reversi>設定。
entry	<？reversi>の棋譜。
|LTsv_glyph.tsv]

[<＃contents/LTsv_glyph-2>|
<？P><？index/LTsv_glyph:kbdimage><？/P>
<？index/LTsv_glyph:mouse>
<？DLDT>   小さい文字をタップ(押上)<？/DTDD>    文字入力。「σ」鍵盤ではHJKLでカーソル移動などにもなります。<？BR><？/DD/DL>
<？DLDT>   左上(Ｎ)からフリック<？/DTDD>        NFER鍵盤(ひらがな)の選択。Ｎの下にフリックでα鍵盤の「σ」(HJKL)。<？BR><？/DD/DL>
<？DLDT>   右上(Ｘ)からフリック<？/DTDD>        XFER鍵盤(カタカナ)の選択。Ｘの下にフリックでα鍵盤の「Σ」(電卓)。<？BR><？/DD/DL>
<？DLDT>   左下(Ｎの下)からフリック<？/DTDD>    α鍵盤の選択。もしくは辞書の変更。<？BR><？/DD/DL>
<？DLDT>   右下(Ｘの下)からフリック<？/DTDD>    字引入力。単漢字辞書の項目が代入。<？BR><？/DD/DL>

<？index/LTsv_glyph:keyboard>
<？DLDT>  [ぬ〜ろ￥]or[ヌ〜ロ｜]<？/DTDD>               文字入力。「σ」鍵盤ではHJKLでカーソル移動などにもなります。<？BR><？/DD/DL>
<？DLDT>  [NFER]+[ぬ〜ろ￥]<？/DTDD>                   NFER鍵盤切替。ひらがなや小文字など。[NFER]キーを押すだけでも鍵盤は切り替わる。<？BR><？/DD/DL>
<？DLDT>  [XFER]+[ヌ〜ロ｜]<？/DTDD>                   XFER鍵盤切替。カタカナや大文字など。[XFER]キーを押すだけでも鍵盤は切り替わる。<？BR><？/DD/DL>
<？DLDT>  [NFER]+[XFER]or[XFER]+[NFER]<？/DTDD>       α鍵盤の「αβγδεζηθικλμνξοπρστυφχψω」＆単漢字辞書の「名音訓送異俗熙簡繁越地顔鍵代逆非」の変更。<？BR>
                                     α鍵盤＆辞書項目の表示中は[NFER]と[XFER]どちらか片方だけ押したままでも表示継続。その状態で再度[NFER][XFER]両押しで単漢字辞書による字引入力。<？BR>
                                     単漢字辞書の種類は「<？index/LTsv_glyph-5>」を参考。
                                     <？/DD/DL>
<？DLDT>  [KANA]+[ぬ〜ろ￥ヌ〜ロ｜]<？/DTDD>           単漢字辞書による字引入力。<？BR><？/DD/DL>
<？DLDT>  [KANA]+[NFER]or[NFER]+[KANA]<？/DTDD>       「σ」鍵盤表示。HJKLカーソル移動などに使います。<？BR><？/DD/DL>
<？DLDT>  [KANA]+[XFER]or[XFER]+[KANA]<？/DTDD>       「Σ」鍵盤表示。電卓用途。<？BR><？/DD/DL>
|<＃contents/LTsv_glyph-2>]

[<＃contents/LTsv_glyph-3>|
<？index/LTsv_glyph:calcimage>
<？index/LTsv_glyph:mouse>
<？DLDT>  テキスト選択<？/DTDD>                      文字選択とカーソルの区別は厳密ではないので、1文字選択がカーソル移動。<？BR><？/DD/DL>
<？DLDT>  選択テキストドラッグ<？/DTDD>              選択した文字は移動できる。選択テキストはドラッグで持ち上げるタイミングでクリップボードにもコピー。<？BR><？/DD/DL>
<？DLDT>  選択文字を欄外にドラッグ<？/DTDD>          選択した文字を削除もできる。<？BR><？/DD/DL>
<？DLDT>  １秒入力欄を押し続ける<？/DTDD>            ドラッグじゃない状態でホールドするとクリップボードから貼り付けた文字がドラッグ状態になる。<？BR><？/DD/DL>
<？DLDT>  入力欄の上端をスライド<？/DTDD>            文字の表示位置を移動。<？BR><？/DD/DL>
<？DLDT>  表示位置スライド状態で押し続け<？/DTDD>    文字の表示位置をリセット。<？BR><？/DD/DL>

<？index/LTsv_glyph:keyboard>
<？DLDT>  HJKL<？/DTDD>         カーソル移動。σ鍵盤じゃない状態の時も[Ctrl]+[H]で左、[Ctrl]+[L]で右移動。<？BR>
               H←,J↓,K↑,L→(上下移動は「kanedit」用途)。<？BR><？/DD/DL>
<？DLDT>  YUBN<？/DTDD>         範囲選択調整。σ鍵盤じゃない状態の時も[Ctrl]+[Y][Ctrl]+[U]で左側、[Ctrl]+[B][Ctrl]+[N]で右側。<？BR><？/DD/DL>
<？DLDT>  ,<(<？contents/homeicon>)<？/DTDD> Home。σ鍵盤じゃない状態の時も[Ctrl]+[,]でカーソル先頭移動。<？BR><？/DD/DL>
<？DLDT>  .>(<？contents/endicon>)<？/DTDD> End。σ鍵盤じゃない状態の時も[Ctrl]+[.]でカーソル末尾移動。<？BR><？/DD/DL>
<？DLDT>  /?(<？contents/pageupicon>)<？/DTDD> PgUp。σ鍵盤じゃない状態の時も[Ctrl]+[/]で多分ページ移動 (上下移動は「kanedit」用途)。<？BR><？/DD/DL>
<？DLDT>  \_(<？contents/pagedownicon>)<？/DTDD> PgDn。σ鍵盤じゃない状態の時も[Ctrl]+[\]で多分ページ移動(上下移動は「kanedit」用途)。<？BR><？/DD/DL>
<？DLDT>  ;+(<？contents/bsicon>)<？/DTDD> バックスペース。σ鍵盤じゃない状態の時も[BS]キーで左側1文字削除。選択文字が2文字以上の時はデリート。<？BR><？/DD/DL>
<？DLDT>  :*(<？contents/delicon>)<？/DTDD> デリート。σ鍵盤じゃない状態の時も[DEL]キーで選択文字カーソル文字を削除。<？BR><？/DD/DL>
<？DLDT>  ](<？contents/entericon>)<？/DTDD>  エンターキー。σ鍵盤じゃない状態の時も[Enter]キーで入力決定。<？BR><？/DD/DL>
<？DLDT>  A<？/DTDD>            テキスト全選択。σ鍵盤じゃない状態の時も[Ctrl]+[A]で全選択。<？BR><？/DD/DL>
<？DLDT>  C<？/DTDD>            テキストをクリップボードにコピー。σ鍵盤じゃない状態の時も[Ctrl]+[C]で選択範囲コピー。<？BR><？/DD/DL>
<？DLDT>  X<？/DTDD>            テキスト切り取り(クリップボードにコピー)。σ鍵盤じゃない状態の時も[Ctrl]+[X]で選択範囲切り取り。<？BR><？/DD/DL>
<？DLDT>  V<？/DTDD>            クリップボードからテキスト貼り付け。σ鍵盤じゃない状態の時も[Ctrl]+[V]でペースト。<？BR><？/DD/DL>
|<＃contents/LTsv_glyph-3>]

[<？index/LTsv_glyph:keyboard>*<？index/LTsv_glyph:mouse>|
:<＄title/LTsv_glyph-0>	<？PCkeyboard>操作
:<＄title/LTsv_glyph-1>	マウス操作
.+\.html?	<h4><＄title/LTsv_glyph-@c></h4>
.*	 <＄title/LTsv_glyph-@c>
|<？index/LTsv_glyph:keyboard>*<？index/LTsv_glyph:mouse>]

[<？index/LTsv_glyph:kbdimage>|
.+\.html?	<img src="data:image/png;base64,<？base64/LTsv_glyph:kbdimage>" width="96" height="24" alt="漢直鍵盤"><br />
.*	<？textAA/LTsv_glyph:kbdimage>
|<？index/LTsv_glyph:kbdimage>]
[<？index/LTsv_glyph:calcimage>|
.+\.html?	<p><img src="data:image/png;base64,<？base64/LTsv_glyph:calcmage>" width="200" height="24" alt="漢直鍵盤"><br /></p>
.*	<？textAA/LTsv_glyph:calcmage>
|<？index/LTsv_glyph:calcimage>]
[<？base64/LTsv_glyph:kbdimage>|
iVBORw0KGgoAAAANSUhEUgAAAGAAAAAYCAMAAAAyNwimAAAABlBMVEXh//oAAABbwECnAAABf0lEQVR42r2W25LDMAhD0f//9LYTg45Iui97cWdax8GAQZJbxaHX5/Ut
XQ8znxW1zfVVYfg2ugzTqfx7HL3nZ0MYHhfvt2ebjmW/VZ0U4Tuc1rV5MuXmmhRV7ezycBmrvd8DqAPYec96A1b6BGN/QrZbV2Lqqz6WUKjOVJOTM6ypEFujKCfC1Kf2
/GDIPexYXcJsl8t6B47Pir7YrWo1QqtaXSK3lOHPGmq8MROdnmL7HGxXd9foKncoT8CoIg+cUQYouijiZ4x1YykYE5hVYWmycpTiIZVwJHATpv86bjhRPhkIix9Jkic1
Iue0EaLhW1mL3B5qUe8MZvkBjOvaW07Q1hAJqItPsAJAORXFafmrkGUolYxeKsoM+0+uTNFCEHt961IZuNA30xaY/UUtIsNIDcBo0rU4Lva6XmjyNwGW/ogqDEKb93mh
LhnkTfZ0XZjOlGAojhMinJ4CSET+ViTotCgXwu22aLn6Kt/cBXVSzk2ihBcQjb8cfwKc5/EFqnMDX8CYUlsAAAAASUVORK5CYII=
|<？base64/LTsv_glyph:kbdimage>]
[<？textAA/LTsv_glyph:kbdimage>|
 ※<？VRkeyboard>の四隅ＮＸ等は実際には縦横２倍の大きさです。
  Ｎ　ぬふあうえおやゆよわほへ　Ｘ
  　　たていすかんなにらせ沼濡　　
  　　ちとしはきくまのりれけむ　　
  ぬ　つさそひこみもねるめろﾇ 　英
|<？textAA/LTsv_glyph:kbdimage>]
[<？base64/LTsv_glyph:calcmage>|
iVBORw0KGgoAAAANSUhEUgAAAMgAAAAYCAMAAACIuEKDAAAADFBMVEXg/vnh/vnh//oAAACCfcr1AAACHUlEQVR42sWXi5aDMAhElfn/f94qryEPa6t1c/a4RqNyAwN0
WXUsNtYfzVfhAWA7tH/7rcEaPfcrfo7yyp8D+FU3dLdtN7gckdf1InZTR8cAFX7nkyAYghgCAkG9MgUR99w/giBAQB6BZGghbQzHeFBJesz/xSufBoEUabS73etIhJTT
LUnZPKwRcFzfM+Bb8KzYUbOQZNiUoxzdlaHjns5atn/VPMq6FEIkfIYqGqE8vKhvXh+2k9fQuZmwTfQWxobrQ9v5tkQf99V9+gXrtnhBhoro1pSsxaFlX/Xvk0Fq8DaB
DwMwYAXSh2gDaDUXxMi+uCiKUkfiOADBO5Cw0u5/BCKXQaiyc/plD6TRFUQNdRAyM+mHITltUX4w3oGgAykb/i0I0jnoFUFSib6F2rCip5MgoVo9tVBKkikIDkG42HlG
kjblSpPTSulEiN3WtEFdxU6qsQUBFuvPaqQ6hH3Bu4wJDqpHkPI4A0JpLD0QCTVDbQjSt/H+mXsqutAbU+xDkIgr9CRZP6YeaUFwJwg3KJx+WwUvozS8WczrJwUxksCo
jb+30+LQOgQpldzmhWMGEmm7r+zSSFt6aZdGhXuXPltdAKktyHcgpRURmQsc1me2P7vo1w11v9FrdbG+rlT2Ys5xM++1jkHQeKRvF7mCSNtAlp7xa5CFjPwE5LLUuU5K
aVTwGUh0vzjR/aLpfuXWlMW9NJ79qfvj8Qdebx+1xSfmjQAAAABJRU5ErkJggg==
|<？base64/LTsv_glyph:calcmage>]
[<？textAA/LTsv_glyph:calcmage>|
 ※σ鍵盤の←→↑↓は実際には[Home][End][PgUp][PgDn]です。
  Ｎ　🎮☐☑☒✓✖♠♥♦♣↖↗　Ｘ
  　　Q W E R T Y U I O P ↙↘　　
  　　A S D F G H J K L bsdelenter
  ぬ　Z X C V B N M ←→↑↓σ　英
|<？textAA/LTsv_glyph:calcmage>]

[<？contents/bsicon>*<？contents/delicon>*<？contents/entericon>*<？contents/homeicon>*<？contents/endicon>*<？contents/pageupicon>*<？contents/pagedownicon>|
:<＄icon-0>	&#61649;
:<＄icon-1>	&#61650;
:<＄icon-2>	&#61651;
:<＄icon-3>	&#61659;
:<＄icon-4>	&#61660;
:<＄icon-5>	&#61661;
:<＄icon-6>	&#61662;
.+\.html?	<span class="kan5x5comic"><＄icon-@c></span>
.*	<＄icon-@c>
|<？contents/bsicon>*<？contents/delicon>*<？contents/entericon>*<？contents/homeicon>*<？contents/endicon>*<？contents/pageupicon>*<？contents/pagedownicon>]

[<＃contents/LTsv_glyph-4>|
<？P> 「kanedit」では省略して「電卓」と呼ぶテキスト入力欄の内容、「LTsv_kbdentry_evaltext()」の引数内容の状態により、<？BR>
 コマンドなのか単語なのか数式なのかで「漢字逆引き」「分数電卓」「文字参照」「簡易辞書」など分岐します。<？BR><？/P>

<？DLDT>  １文字のみ入力<？/DTDD>                     漢字逆引き。入力した文字が存在する鍵盤に切替。同時に単漢字辞書の項目表示、
                                     単漢字辞書に無い文字は「照」数値文字参照。<？BR>
                                     「走⇔」→「英走⇔run」「名走⇔はしる」「照走⇔&#36208;」<？BR><？/DD/DL>
<？DLDT>  先頭文字列が「&#」<？/DTDD>                 数値文字参照を文字列にデコード。<？BR>
                                     「&#21654;&#21937;&#40634;&#40621;」→「照&#21654;&#21937;&#40634;&#40621;⇔咖喱麺麭」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「照」<？/DTDD>                   文字列を数値文字参照にエンコード。数値文字参照を文字列へのデコードも可能。<？BR>
                                     「照咖喱麺麭&#21654;&#21937;&#40634;&#40621;」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「〒」<？/DTDD>                   <？DICzip>から住所を表示。<？BR>
                                     「〒1638001⇔東京都新宿区西新宿２丁目８－１東京都庁」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「平」<？/DTDD>                   カタカナをひらがな(平仮名)に変換。<？BR>
                                     「平ヴァイオリン⇔ヴぁいおりん」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「片」<？/DTDD>                   ひらがなをカタカナ(片仮名)に変換。<？BR>
                                     「片ヴぁいおりん⇔ヴァイオリン」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「半」<？/DTDD>                   全角アルファベットとカタカナをに半角に変換。<？BR>
                                     「半ヴァイオリン⇔ｳﾞｧｲｵﾘﾝ」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「全」<？/DTDD>                   半角アルファベットとカタカナをに全角に変換(曖昧な指示)。初期設定では「￥」。<？BR>
                                     「全ｳﾞｧｲｵﾘﾝ⇔ヴァイオリン」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「￥」<？/DTDD>                   半角アルファベットとカタカナをに全角に変換(バックスラッシュを全角円記号に)。<？BR>
                                     「￥バックスラッシュ\円記号⇔バックスラッシュ￥円記号」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「＼」<？/DTDD>                   半角アルファベットとカタカナをに全角に変換(バックスラッシュを全角バックスラッシュに)。<？BR>
                                     「＼バックスラッシュ\円記号⇔バックスラッシュ＼円記号」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「清」<？/DTDD>                   濁音を清音に変換(曖昧な指示)。初期設定では「Ｈ」。<？BR>
                                     「清ヴァイオリン⇔ウァイオリン」。<？/DD/DL>
<？DLDT>  先頭文字が「Ｈ」<？/DTDD>                   濁音を清音に変換("ばびぶべぼ"も"ぱぴぷぺぽ"も"はひふへほ"に)。<？BR>
                                     「Ｈカエルぴょこぴょこみぴょこぴょこ、ぼうずがびょうぶにえをかいた⇔カエルひょこひょこみひょこひょこ、ほうすかひょうふにえをかいた」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「Ｍ」<？/DTDD>                   濁音を清音に変換("ぱぴぷぺぽ"は"まみむめも"に)。<？BR>
                                     「Ｍカエルぴょこぴょこみぴょこぴょこ、ぼうずがびょうぶにえをかいた⇔カエルみょこみょこみみょこみょこ、ほうすかひょうふにえをかいた」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「濁」<？/DTDD>                   清音を濁音に変換(曖昧な指示)。初期設定では「Ｐ」。<？BR>
                                     「濁ウァイオリン⇔ヴァイオリン」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「Ｂ」<？/DTDD>                   清音を濁音に変換("はひふへほ"は"ばびぶべぼ"に)。<？BR>
                                     「Ｂカエルみょこみょこみみょこみょこ、ほうすかひょうふにえをかいた⇔ガエルみょごみょごみみょごみょご、ぼゔずがびょゔぶにえをがいだ」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「Ｐ」<？/DTDD>                   清音を濁音に変換("まみむめも"も"ぱぴぷぺぽ"に)。<？BR>
                                     「Ｐカエルみょこみょこみみょこみょこ、ほうすかひょうふにえをかいた⇔ガエルぴょごぴょごぴぴょごぴょご、ぼゔずがびょゔぶにえをがいだ」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「大」<？/DTDD>                   アルファベット(全角ギリシャ文字全角キリル文字を含む)を大文字に変換。<？BR>
                                     「大αAndΩ⇔ΑANDΩ」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「小」<？/DTDD>                   アルファベット(全角ギリシャ文字全角キリル文字を含む)を小文字に変換。<？BR>
                                     「小ΑAndΩ⇔αandω」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「今」<？/DTDD>                   日時などを取得。「平,干,年,月,日,週,曜,時,分,秒,今,版,印」の他に「日時フォーマット」で詳細な指定も可能。<？BR>
                                     「今年-月-日(週曜)時:分:秒」→「今@000y-@0m-@0dm(@0wnyi@wdj)@0h:@0n:@0s⇔2016-03-01(09火)02:15:15」<？BR>
                                     「今今」→「今@000y-@0m-@0dm(@0wnyi@wdj)@0h:@0n:@0s⇔2016-03-01(09火)02:15:48」。「eval_now」を返す。<？BR>
                                     「今版」→「今20160716S001619⇔20160716S001619」。[LTsv_time.py]の「LTsv_time_ver()」を返す。<？BR>
                                     「今枝」→「今@000y@0m@0dm@wdec@0h@0n@0s⇔20160716S001619」。「eval_branch」を返す。<？BR>
                                     日時フォーマットの詳しい使い方は「<？index/LTsv_time-1>」を参考。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「⑧」<？/DTDD>                   UTF-8文字列を256進数としての8点点字(UTF-8点字)に変換。一般的な点字ではないので注意。<？BR>
                                     「⑧点字に類似したもの⇔⣧⢂⢹⣥⢭⢗⣣⢁⢫⣩⢡⢞⣤⢼⢼⣣⢁⢗⣣⢁⢟⣣⢂⢂⣣⢁⢮」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「⓪」<？/DTDD>                    UTF-8文字列を256進数としての8点点字(UTF-8点字)をUTF-8の文字列に復号。<？BR>
                                     「⓪⣧⢂⢹⣥⢭⢗⣣⢁⢫⣩⢡⢞⣤⢼⢼⣣⢁⢗⣣⢁⢟⣣⢂⢂⣣⢁⢮⇔点字に類似したもの」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「⑯」<？/DTDD>                   10進数を16進数に変換。<？BR>
                                     「⑯65535⇔0xffff」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「⑩」<？/DTDD>                   16進数を10進数に変換。<？BR>
                                     「⑩FFFF⇔65535」「⑩0xFFFF⇔65535」「⑩U+ffff⇔65535」。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「英」「名」「音」「訓」「送」「異」「俗」「熙」「簡」「繁」「越」「地」「顔」「鍵」「代」「逆」「非」<？BR><？/DTDD>
                                     <？DICchar>から該当する文字あるいは単語等を字引。字引入力の単漢字項目も変更。<？BR>
                                     単漢字辞書の項目については「<？index/LTsv_glyph-5>」を確認。<？/DD/DL>
<？DLDT>  先頭文字が「難」<？/DTDD>                   漢字の難読レベル(小学校N学年・常用漢字・人名・地名・幽霊文字など)を設定予定。難読の定義が不明瞭なので放置中。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「活」「漫」「筆」<？/DTDD>       「kant5x5comic」のグリフデータ。「kanfont」で編集可能。「活」では独自形式で圧縮される。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「幅」<？/DTDD>                   <？DICchar>上のデータの「kan5x5comic」のフォントの幅を表示。全角(1024)の場合省略できる。半角(624)と麻雀牌(824)しか種類はないはず。<？BR><？/DD/DL>
<？DLDT>  先頭文字が「探」<？/DTDD>                   文字列から<？DICmap>に含まれる漢字の探索。漢字逆引きの一種。文字が見つかり次第鍵盤切替。「探袮穃粫𡚴岾軅垉椦蟐靹駲閠墸壥⇔𡚴」<？BR>
                                     <？DICmap>に見つからない文字の場合は<？DICchar>の「異」「簡」「繁」「代」項目からも探索を試みる。「探檪⇔櫟」「探<？contents/tokyoicon>⇔東」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「汎」その他数式以外<？/DTDD>      <？DICword>から単語を取得。単語にヒットしなければ数式扱い。２文字以上の単語は「汎」を省略できるが数式と区別するため「汎」は付加される。<？BR>
                                     「汎ヴァイオリン⇔提琴」「汎フカセツフカセツテン⇔不可説不可説転」<？BR><？/DD/DL>
<？DLDT>  先頭文字が「算」その他数式<？/DTDD>         数式とみなして分数計算。<？VReval/howto><？BR><？/DD/DL>
<？DLDT>  「3927/1250」といった割り算<？/DTDD>        割り算に限らず計算結果は分数表示。「3927/1250⇔3927|1250」<？BR><？/DD/DL>
<？DLDT>  「3927|1250」といった分数のみ<？/DTDD>       約分できない分数に限り少数で表示。「3927|1250⇔3.1416」<？BR><？/DD/DL>
|<＃contents/LTsv_glyph-4>]

[<＃contents/LTsv_glyph-5>|
<？P> 漢直で使う<？DICchar>の項目について説明。「[Q(た)]」などはキーボード操作で[NFER]+[XFER]or[XFER]+[NFER]の後に押す鍵盤。<？BR>
 <？VRkeyboard/howto><？BR>
<？/P>
<？DLDT>  [1(ぬ):名]<？/DTDD>  文字の名称(日本語)を字引。<？BR>
              「名〜⇔波ダッシュ」「名～⇔チルダ(全角)」「名∼⇔ランダウの記号」「名醤⇔波ダッシュ」「＃⇔ナンバーサイン(全角)」「♯⇔シャープ」。<？BR><？/DD/DL>
<？DLDT>  [2(ふ):音]<？/DTDD>  漢字の音読みを字引。原子記号だとカタカナを字引。<？BR>
              「音醤⇔ショウ/ジャン」「音銅⇔コッパー」。<？BR><？/DD/DL>
<？DLDT>  [3(あ):訓]<？/DTDD>  漢字の訓読みを字引。原子記号だと音訓両方を字引。<？BR>
              「訓醤⇔ひしお」「訓銅⇔ドウ/あかがね」。<？BR><？/DD/DL>
<？DLDT>  [4(う):送]<？/DTDD>  漢字の送り仮名を字引。<？BR>
              「送醤⇔醤油/豆板醤/醤酢」「送止⇔制止/差し止める/急に止まる/行き止まり/滑り止め/思い止まる/鳴り止む」。<？BR><？/DD/DL>
<？DLDT>  [5(え):異]<？/DTDD>  異体字や俗字や略字や通用や大字などを表示。<？BR>
              「異壷⇔壺」「異青⇔靑」「異鼠⇔鼡」「異觜⇔嘴」「異七⇔漆」「異百⇔陌」「異晦⇔卅」。<？BR><？/DD/DL>
<？DLDT>  [6(お):俗]<？/DTDD>  英語等の当て字や送り仮名だけでは説明不足になりそうな使用例・例文などを字引。<？BR>
              「俗金⇔Au」「俗円⇔丸/￥/JPY」「俗鯖⇔server」「俗𡚴⇔妛→𡚴/木通/通草」。<？BR><？/DD/DL>
<？DLDT>  [7(や):簡]<？/DTDD>  中国およびシンガポ—ルやマレ—シアなどの簡体字を字引。<？BR>
              「簡氣⇔气」「簡範⇔笵」。<？BR><？/DD/DL>
<？DLDT>  [8(ゆ):繁]<？/DTDD>  中国および台湾や香港などの繁体字(正体字)を字引。<？BR>
              「繁气⇔氣」「繁笵⇔範」。<？BR><？/DD/DL>
<？DLDT>  [9(よ):越]<？/DTDD>  ベトナム(越南)のチュノム(字喃)を字引。<？BR>
              「越頗⇔<？contents/pho>」<？BR><？/DD/DL>
<？DLDT>  [0(わ):地]<？/DTDD>  国名や地名や名字などを字引。<？BR>
              「国日⇔日本」「国米⇔亜米利加」「国英⇔英吉利西」「国中⇔中華人民共和国」「国台⇔台湾」「国香⇔香港」「国澳⇔澳門」「国蒙⇔蒙古」「国蔵⇔西蔵」「国越⇔越南」。<？BR><？/DD/DL>
<？DLDT>  [-(ほ):逆]<？/DTDD>  反対の意味の漢字を字引。全角ではないという意味で半角ｶﾀｶﾅ等の入力にも流用。<？BR>
              「逆暖⇔涼」「逆温⇔冷」「逆カ⇔ｶ」。<？BR><？/DD/DL>
<？DLDT>  [^(へ):非]<？/DTDD>  似て非なる意味の漢字を字引。<？BR>
              「非描⇔書」("絵を描く"と"文章を書く"の違い)「非喩⇔例」("比喩表現"と"実例"の違い)「非熔⇔溶」("液状に熔解"と"液体へ溶融"の違い)。<？BR><？/DD/DL>
<？DLDT>  [Q(た):英]<？/DTDD>  文字の名称(英語)を字引。もしくは漢字の英訳などを字引(和英)。<？BR>
              「英金⇔gold」「英円⇔circle/round/yen」「英鯖⇔mackerel」。<？BR><？/DD/DL>
<？DLDT>  [W(て):顔]<？/DTDD>  顔文字や１行AAや絵文字を字引。都道府県アイコンも。<？BR>
              「顔二⇔2get ｽﾞｻｰc⌒っﾟДﾟ)っ」「д⇔(ﾟдﾟ)」。「顔東⇔<？contents/tokyoicon>」。<？BR><？/DD/DL>
<？DLDT>  [;(れ):代]<？/DTDD>  濁音半濁音拗音促音入力補佐やロシア語以外のキリル文字など、似た文字での代用による字引入力。麻雀牌も。<？BR>
              「代つ⇔づ」「代に⇔っ」「代么⇔幺」「代算⇔Computer」「代算⇔Computer」。「代東⇔<？contents/tonhaiicon>」。<？BR><？/DD/DL>
<？DLDT>  [:(け):鍵]<？/DTDD>  基本ユーザーの自由だけど特殊な入力が必要になった時用の拡張確保項目。<？BR><？/DD/DL>
<？DLDT>  [,(ね):照]<？/DTDD>  HTMLの文字参照。漢直では文字実体参照、電卓では数値文字参照が入力される予定。<？BR><？/DD/DL>
|<＃contents/LTsv_glyph-5>]

[<？section/LTsv10_faq-0>|
.+\.html?	<section>@E <h3 id="LTsv10_faq-@c"><？title/LTsv10_faq-@c></h3>@E<＃contents/LTsv10_faq-@c>@E</section>@E
.*	@E<？title/LTsv10_faq-@c>@E@E<＃contents/LTsv10_faq-@c>@E
|<？section/LTsv10_faq-0>]

[<＃contents/LTsv10_faq-0>|
<？DLDTfaq> Ｑ．「<？https/LTsv_glyph.py>」などをダブルクリックしても起動しない。<？/DTDD>
 Ａ．Linuxの場合パーミッションで実行許可されてないのかも。もしWindowsの話でPythonをインストールしてなければ動くはずがないのでPythonをインストール。<？BR>
     Wineで「python-3.4.4.msi」が動かないって話なら「<？https/python3install.sh>」を参考。「msiexec /i python-3.4.4.msi」の様なコマンドが必要。<？BR>
<？/DD/DL>
<？https/LTsv10_faq:python.org>
<？https/LTsv10_faq:python344>
<？DLDTfaq> Ｑ．Pythonはもう3.5系出てますよね？<？/DTDD>
 Ａ．「python-3.5.1.exe」を「wine-portable-1.7.18-1-p4.tar.gz」で試した時エラーになったので放置。<？BR>
     「Visual C++ 2015」のランタイムをインストールすれば動くかもだけどランタイム自体をwineにインストール方法とか未確認。<？BR>
<？/DD/DL>
<？https/LTsv10_faq:python352>
<？https/LTsv10_faq:pythonMSVCRTQiita>
<？https/LTsv10_faq:PortableWine>
<？DLDTfaq> Ｑ．文字表示が複数あるというか、「LTsv_draw_font(<？https08:LTsv_gui.py>)」系と「LTsv_draw_glyphs(<？https09:LTsv_glyph.py>)」系の違いはなんですか。<？/DTDD>
 Ａ．フォント表示とグリフ描画の違いです。<？BR>
    「Tkinter」が<？CP932>を越える3バイト以上のUTF-8文字を扱えないので独自にグリフ描画モジュール用意しました。<？BR>
    「用意しました」と言いましたが一部の文字しか用意できてないので注意。<？BR><？/DD/DL>

<？DLDTfaq> Ｑ．ボタンなどのGUIにグリフ「kan5x5comic」を用いるにはどうすればいいですか。<？/DTDD>
 Ａ．GUIのボタン等に直接グリフは使えません。「kanfont_drawGTK_glyph」「kanfont_drawTkinter_glyph」などは「canvas」に描画する命令です。<？BR>
     GUIでフォントを表示する場合はグリフ「kan5x5.svg」かwebフォント「kan5x5comic.woff」をOSフォント「kan5x5comic.ttf」に変換してフォントをインストール。<？BR><？/DD/DL>

<？DLDTfaq> Ｑ．<？VRkeyboard>ですけど、なんでマウスボタンを押下(クリック)ではなく押上のタイミングで文字入力なんですか？<？/DTDD>
 Ａ．将来的に入力デバイスはタッチパネルに収束すると判断しました。タッチパネルではマウスカーソルの概念自体が希薄になると思います。<？BR>
     ペンタブレットだとペン先を少し浮かした状態でカーソル移動とかあるけど、タッチパネルには指先を少し浮かした状態とか存在しないはず。<？BR>
     文字入力タップ操作はＮＸ等にカーソルをそらすことで入力キャンセルが可能です。<？BR><？/DD/DL>

<？DLDTfaq> Ｑ．<？VRcalc>はなんで中途半端にVimっぽいHJKL移動なんですか？<？/DTDD>
 Ａ．[Up][Down][Left][Right]キーや[Tab]キーはフォーカス移動、[Space]キーは「button」押下など他のGUI操作を巻き込むからです。<？BR><？/DD/DL>

<？DLDTfaq> Ｑ．[NFER(無変換)]キーとか[XFER(変換)]キーとか存在しないキーボードですけど？<？/DTDD>
 Ａ．「<？https/LTsv_glyph.tsv>」の「kbdNX」の設定を「NFER:ShiftL」「XFER:ShiftR」に変更することで[Shift]キーで代用できます。<？BR><？/DD/DL>

<？DLDTfaq> Ｑ．起動できたたソフトがいつの間にか起動しなくなった。<？/DTDD>
 Ａ．ソフトの強制終了の時などに「LTsv/kanpickle.bin」が破損する場合があります。<？BR>
     「LTsv/kanpickle.bin」を削除してから「<？https/kanmap.py>」を起動することで初期化できます。<？BR>
    「kanedit」「kanfont」「kanmap」「kanzip」についてはモジュールのドキュメントではなくソフトのドキュメントで扱います。<？BR><？/DD/DL>
|<＃contents/LTsv10_faq-0>]

[<？section/LTsv_doc_usage-0>|
.+\.html?	<section>@E <h3 id="LTsv_doc_usage-@c"><？title/LTsv_doc_usage-@c></h3>@E<＃contents/LTsv_doc_usage-@c>@E</section>@E
.*	@E<？title/LTsv_doc_usage-@c>@E@E<＃contents/LTsv_doc_usage-@c>@E
|<？section/LTsv_doc_usage-0>]

[<＃contents/LTsv_doc_usage-0>|
<？Pcenter><？index/LTsv_doc_usage:capture><？BR> LTsv_docドキュメントを編集して保存してからボタンを押すと置換開始。<？BR>
 LTsv_docドキュメントの詳細は「<？index/LTsv_doc-2>」を参考。<？BR>
<？/P>
<？DLDT> 「LTsv_doc.tsv」ボタン<？/DTDD>                        「<？https/README.md>」のドキュメント作成。出力先は「LTsv/testfile/README.md」<？/DD/DL>
<？DLDT> 「../docs/kanedit_etc.tsv」ボタン<？/DTDD>             「<？LTsv>」のドキュメント作成。<？/DD/DL>
<？DLDT> 「../../ooblog.github.io/yakuyon.tsv」ボタン<？/DTDD>  「約四文字」のドキュメント作成。<？/DD/DL>
<？DLDT> 「edit」ボタン<？/DTDD>                                各ボタンのLTsv_docドキュメントを編集。<？/DD/DL>
<？P> ボタン編集(LTsv_docドキュメントの登録)は「<？https/LTsv_doc.tsv>」を編集。詳細は「<？index/LTsv_doc-1>」を参考。<？BR><？/P>
|<＃contents/LTsv_doc_usage-0>]
[<？index/LTsv_doc_usage:capture>|
.+\.html?	<img src="LTsv_doc_512x384.png" width="512" height="384" alt="LTsv_doc"><br />
.*	
|<？index/LTsv_doc_usage:capture>]

[<？section/LTsv_doc-0>*<？section/LTsv_doc-1>*<？section/LTsv_doc-2>|
.+\.html?	<section>@E <h3 id="LTsv_doc-@c"><？title/LTsv_doc-@c></h3>@E<＃contents/LTsv_doc-@c>@E</section>@E
.*	@E<？title/LTsv_doc-@c>@E@E<＃contents/LTsv_doc-@c>@E
|<？section/LTsv_doc-0>*<？section/LTsv_doc-1>*<？section/LTsv_doc-2>]

[<＃contents/LTsv_doc-0>|
<？P> 「<？https/LTsv_doc.py>」はモジュールそのものというよりは、モジュールのドキュメントを作成(関数一覧を作成)するソフトです。<？BR>
  ・ファイル名と同名のタグを作成すると項目一覧ページを作成します(現在Pythonと「L:Tsv」ファイルのみ)。<？BR>
  ・項目一覧ページの、例えばPythonのdef一覧とかは、ランチャーで更新する度に項目を入れ替えるので、目視で関数増減チェックする手間が軽減されます。<？BR>
  ・<？yakuyon>のサイトもLTsv_docドキュメントによる生成で置き換える予定。<？BR><？/P>

<！LTsv_doc.py>
|<＃contents/LTsv_doc-0>]

[LTsv_doc.py|
LTsvDOClaunch_kernel_regularexpression(LTsvDOC_outname,LTsvDOC_tagnames)	置換処理のコア部分。ファイル名分岐やタグセパレート繰り返しのカウンター処理など。
LTsvDOCdef_python(LTsvDOClaunch_deffile)	Pythonのソースから「def 」で始まる行を抜き出して関数一覧を取得。
LTsvDOCdef_vim(LTsvDOClaunch_deffile)	Vimスクリプトのソースから「function」で始まる行を抜き出して関数一覧を取得。
LTsvDOCdef_LTSV(LTsvDOClaunch_deffile)	「L:Tsv」のソースからページ名一覧とfirst一覧を抜き出す。firstにラベル「:」が含まれてるページはLTSVとみなしてページ名のみ取得。
LTsvDOClaunch_kernel_listfile(LTsvDOC_outname,LTsvDOC_tagname)	Pythonの関数一覧などに装飾処理。
LTsvDOClaunch_kernel_listdir(LTsvDOC_outname,LTsvDOC_tagname)	未実装。フォルダ指定の場合でファイル一覧を作成する予定。
LTsvDOClaunch_kernel_listout(LTsvDOC_outname,LTsvDOC_tagname)	outlistページタグの時、エイリアスが有ればエイリアスに、無ければファイル名に置換。
LTsvDOClaunch_kernel_count(window_objvoid=None,window_objptr=None)	LTsv_docドキュメント1枚作成毎にwaitを入れる。ドキュメントの設定読込処理も。
LTsvDOClaunch_shell(LTsvDOClaunch_tsvcount)	ランチャーのボタンを押したら「LTsvDOClaunch_kernel_count()」を呼び出す。
LTsvDOCopen_shell(LTsvDOClaunch_tsvcount)	ランチャーのボタンを押したら「<？https/LTsv_doc.tsv>」の「editer」で指定したテキストエディタを呼び出す。
|LTsv_doc.py]

[<＃contents/LTsv_doc-1>|
<？P> 「<？https/LTsv_doc.tsv>」は「<？https/LTsv_glyph.py>」の設定ファイルです。<？BR>
 「<？https/README.md>」作成のサンプルも兼用です。HTML版を同時作成で、GitHubのmarkdownをブラウザで確認できる風のデモになります。<？BR>
<？/PP>
 メタタグ「L:Tsv」のfirst縦軸ラベルの解説。<？BR>
<？/P>
<？DLDT>  [L:Tsv<？&#x7C;><？/DTDD>                     「L:Tsv」ファイルの宣言です。<？/DD/DL>
<？DLDT>   1st<？/DTDD>                        「<？https/LTsv_doc.tsv>」の設定を書き込む。通常「LTsv_doc」で構わないが今回は「LTsv_doc_this」を指定。「LTsv_doc.py」と衝突するので。<？/DD/DL>
<？DLDT>  [LTsv_doc<？&#x7C;><？/DTDD>                  「<？https/LTsv_doc.py>」の設定です。ドキュメントの設定ではなくアプリの設定です。<？/DD/DL>
<？DLDT>   window_size<？/DTDD>                ランチャーのウィンドウサイズなどの初期設定「width:600\theight:480\twait:100\tfontsize:24」。waitの感覚が狭すぎるとフリーズするので注意。<？/DD/DL>
<？DLDT>   tsvlist<？/DTDD>                    ランチャーに管理させるLTsvファイルのリストを指定。<？/DD/DL>
<？DLDT>   modify<？/DTDD>                     ランチャーのボタンを押した時刻を表示することで変換処理を一応行った事を通知。ボタンの時刻が変化してから正しく置換されたか確認。<？/DD/DL>
<？DLDT>   editer<？/DTDD>                      「edit」ボタンで表示する<？/DD/DL>
<？DLDT>  [LTsv_doc_this<？&#x7C;><？/DTDD>             「<？https/LTsv_doc.tsv>」の設定です。アプリの設定とドキュメント混在は後述の「skplist」機能のテストや解説役を兼ねてるのでご理解。<？/DD/DL>
<？DLDT>   main<？/DTDD>                       置換される前の元文書。今回は「<？&lt;>＠LTsv_doc_test_main<？&gt;>」。<？/DD/DL>
<？DLDT>   tagseparate<？/DTDD>                ループタグ作成用のタグ区切りを指定。「<？https/LTsv_doc.tsv>」では「*」を使用。<？/DD/DL>
<？DLDT>   skplist<？/DTDD>                    使用しないタグの追加(tsv)。初期状態で「L:Tsv」とmainで指定したメインタグ例えば「<＠LTsv_doc_main>」は置換対象にならない。今回「<？https/LTsv_doc.py>」の設定ページ「LTsv_doc」を混ぜてるのでリストに追加してる。<？/DD/DL>
<？DLDT>   outdir<？/DTDD>                     置換されたテキストの出力先フォルダ。<？/DD/DL>
<？DLDT>   outlist<？/DTDD>                    置換されたテキストの出力ファイル名一覧(tsv)。<？BR>
                              tsvのファイル名一覧の代わりに「<？&lt;>＠LTsv_doc_test_outlist<？&gt;>」の様にファイル一覧ページのタグ指定もできる。<？BR>
                              ファイル一覧ページでは、firstのファイルパスに加えrestでエイリアスが設定可能。<？BR>
                              ドキュメント内でoutlistタグを呼び出すとエイリアス(エイリアス指定が無い場合はファイルパス)に置換される。<？BR><？/DD/DL>
<？DLDT>   defdir<？/DTDD>                     Pythonのモジュール等が置いてあるフォルダ。<？/DD/DL>
<？DLDT>   deftag<？/DTDD>                     モジュールファイル名をタグ化するため左右に付けるソルト。例えば「foo.py」を「L:<！\tR:>」で囲って「<！foo.py>」のようにする。<？/DD/DL>
<？DLDT>   defindent<？/DTDD>                  モジュール関数一覧と説明文に装飾するテキスト。「firstL」「firstR」は項目名の左右に。「restL:」「restR」は説明文の左右。「restC」は説明文の「/t」を改行などに置換用。「restRLast」は説明文末尾の「restR」。改行調整用。<？/DD/DL>
<？DLDT>   LTsvver<？/DTDD>                    バージョン名「LTsv_file_ver()」に置換するタグの設定。初期設定は「<？&lt;>＠L:TsvLTsvver<？&gt;>」。<？BR>
                              詳細は「<？index/LTsv_file-0>」参考。<？BR><？/DD/DL>
<？DLDT>  [<？&lt;>＠LTsv_doc_test_main<？&gt;><？&#x7C;>
<？/DTDD>    置換される前の元文書(main)。以降の置換タグで文章が置換される。以降「<？https/README.md>」作成のLTsv_docドキュメントのサンプル。<？/DD/DL>
<？DLDT>  [<？&lt;>？LTsv_MD_header<？&gt;><？&#x7C;>
<？/DTDD>    ファイル拡張子がhtml(正規表現で「.+\.html?」)の時だけHTML5ヘッダを追加。ここで分岐タグ出現。<？/DD/DL>
<？DLDT>  [<？&lt;>＃LTsv_HTML_header<？&gt;><？&#x7C;><？/DTDD>
<？/DTDD>    簡略したHTML5ヘッダ本文。「<？&lt;>body<？&gt;>」タグまで。<？/DD/DL>
<？DLDT>  [<？&lt;>？LTsv_MD_footer<？&gt;><？&#x7C;>
<？/DTDD>    ファイル拡張子がhtml(正規表現で「.+\.html?」)の時だけフッターを追加。<？/DD/DL>
<？DLDT>  [<？&lt;>＃LTsv_HTML_footer<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>/body<？&gt;><？&lt;>/html<？&gt;>」閉じるタグ。フッターがあれば追記。<？/DD/DL>
<？DLDT>  [<？&lt;>？LTsv_MD_H1:LTsv10kanedit<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>h1<？&gt;>」タグの記述。markdownだと先頭の「#」。ここから内包タグ出現。<？/DD/DL>
<？DLDT>  [<？&lt;>？LTsv_MD_H2:kanedit<？&gt;>*<？&lt;>？LTsv_MD_H2:kanfont<？&gt;>*<？&lt;>？LTsv_MD_H2:kanzip<？&gt;>*<？&lt;>？LTsv_MD_H2:kanmap<？&gt;>*<？&lt;>？LTsv_MD_H2:LTsv_doc<？&gt;>*<？&lt;>？LTsv_MD_H2:KEV<？&gt;>*<？&lt;>？LTsv_MD_H2:environment<？&gt;>*<？&lt;>？LTsv_MD_H2:LICENSE<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>h2<？&gt;>」タグの記述。markdownだと行先頭に「#」。「*」は「tagseparate」による繰り返し記述。<？BR>
    「tagseparate」の詳細は「<？index/LTsv_doc-2>」を参考。<？BR>
    カウンター「@c」の詳細は「<？index/LTsv_time-1>」を参考。<？BR><？/DD/DL>
<？DLDT>  [<？&lt;>？LTsv_MD_IMG:kanedit<？&gt;>*<？&lt;>？LTsv_MD_IMG:kanfont<？&gt;>*<？&lt;>？LTsv_MD_IMG:kanzip<？&gt;>*<？&lt;>？LTsv_MD_IMG:kanmap<？&gt;>*<？&lt;>？LTsv_MD_IMG:LTsv_doc<？&gt;>*<？&lt;>？LTsv_MD_IMG:KEV<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>img<？&gt;>」タグの記述。markdownだと「![alt](src "title")」。画像を表示するので「raw」系リンク。<？/DD/DL>
<？DLDT>  [<？&lt;>？https/kanedit<？&gt;>*<？&lt;>？https/kanfont<？&gt;>*<？&lt;>？https/kanzip<？&gt;>*<？&lt;>？https/kanmap<？&gt;>*<？&lt;>？https/LTsv_doc<？&gt;>*<？&lt;>？https/LTsv10<？&gt;>*<？&lt;>？https/KEV<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>a<？&gt;>」タグの記述。markdownだと「[text](href "title")」。「github.com」リンクと「github.io」リンクの両方を用意。<？/DD/DL>
<？DLDT>  [<？&lt;>？https/kanchar<？&gt;>*<？&lt;>？https/kanedit.vim<？&gt;>*<？&lt;>？https/LTsv_doc_py<？&gt;>*<？&lt;>？https/kanedit_etc<？&gt;>*<？&lt;>？https/LTsv10LICENSE<？&gt;><？&#x7C;>
<？/DTDD>    こちらも「<？&lt;>a<？&gt;>」タグの記述。ドキュメント以外の「github.com(「blob」系)」リンク。<？/DD/DL>
<？DLDT>  [<？&lt;>？ooblog:LTsv10repository_raw<？&gt;>*<？&lt;>？ooblog:LTsv10repository_blob<？&gt;><？&#x7C;>
<？/DTDD>    「github.com」のリンクで「raw」系と「blob」系のURL差分。<？/DD/DL>
<？DLDT>  [<？&lt;>？https/htmldoc<？&gt;><？&#x7C;>
<？/DTDD>    普通に「<？https/htmldoc>」へのリンク。内包タグは外部参照できないのでリンク等を外に置くパターン。<？/DD/DL>
<？DLDT>  [<？&lt;>？ooblog:LTsv10repository_txt<？&gt;><？&#x7C;>
<？/DTDD>    リンクテキスト「「LTsv10kanedit(tsvtool10)」は「L&#58;Tsv」の読み書きを中心としたモジュール群です。」。<？/DD/DL>
<？DLDT>  [<？&lt;>？ooblog:LTsv10repository_url<？&gt;><？&#x7C;>
<？/DTDD>    リンクURL「<？https/htmldoc>」。<？/DD/DL>
<？DLDT>  [<？&lt;>？https/japanpost<？&gt;>*<？&lt;>？https/fontforge<？&gt;>*<？&lt;>？https/LTsv10kanedit<？&gt;>*<？&lt;>？https/TSF1KEV<？&gt;><？&#x7C;>
<？/DTDD>    「L&#58;Tsv」以外のサイトへのリンク枠。<？/DD/DL>
<？DLDT>  [<？&lt;>？P<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>p<？&gt;>」タグの記述。<？/DD/DL>
<？DLDT>  [<？&lt;>？/PP<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>/p<？&gt;><？&lt;>p<？&gt;>」タグの記述。<？/DD/DL>
<？DLDT>  [<？&lt;>？/P<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>/p<？&gt;>」タグの記述。<？/DD/DL>
<？DLDT>  [<？&lt;>？BR<？&gt;><？&#x7C;>
<？/DTDD>    「<？&lt;>br /<？&gt;>」タグの記述。markdownだと行末に「  」(空白2つ)。<？/DD/DL>
<？DLDT>  [<？&lt;>＠LTsv_doc_test_outlist<？&gt;><？&#x7C;>
<？/DTDD>    ファイルの出力先。「testfile/README.md」「testfile/README.html」。<？/DD/DL>
|<＃contents/LTsv_doc-1>]

[<？https/htmldoc>|
.+\.html?	<a href="<？ooblog:LTsv10repository_url>" title="<？ooblog:LTsv10repository_txt>"><？ooblog:LTsv10repository_url></a>
.+\.md	[<？ooblog:LTsv10repository_url>](<？ooblog:LTsv10repository_url> "<？ooblog:LTsv10repository_txt>")
|<？https/htmldoc>]
[<？ooblog:LTsv10repository_txt>|
.*	「LTsv10kanedit(tsvtool10)」は「L:Tsv」の読み書きを中心としたPythonモジュール群です。
|<？ooblog:LTsv10repository_txt>]
[<？ooblog:LTsv10repository_url>|
.*	https://github.com/ooblog/LTsv10kanedit/
|<？ooblog:LTsv10repository_url>]

[<＃contents/LTsv_doc-2>|
<？P> 前提は「L:Tsv」なので「<？contents/LTsv_doc:aboutLTsv-1>」も確認。<？BR>
 「main」で指定したページの内容をタグ名で置換していくことで目的の文章を作成します。<？BR>
 タグ名自体はかなり自由に変更できますが、命名規則に規則性があると説明がしやすいので便宜上のルールを用いた解説になります。<？BR><？/P> 

<？index/LTsv_doc:skplist>
<？DLDT>  <？&lt;>L:Tsv<？&gt;><？/DTDD>                       「L:Tsv」は「L:Tsv」ファイルのメタタグなのでskplist対象なので置換されません。<？/DD/DL>
<？DLDT>  <？&lt;>LTsv_doc_this<？&gt;>(L:Tsv 1st)<？/DTDD>    「1st」で指定するLTsv_docドキュメント設定ページのタグもskplist対象なので置換されません。<？/DD/DL>
<？DLDT>  <？&lt;>＠LTsv_doc_main<？&gt;>(main)<？/DTDD>      「main」指定のページタグ自身もskplist対象なので置換されません。「LTsv_doc」に再帰は存在せず、上から順に置換するのみです。<？/DD/DL>
<？DLDT>  <？&lt;>LTsv_doc<？&gt;>(skplist)<？/DTDD>          その他置換対象から外したいページをskplistに登録できます。<？BR>
                               例えば 「<？https/LTsv_doc.tsv>」ではskplistに「LTsv_doc」を登録してるので設定ページは置換されません。<？BR><？/DD/DL>

<？index/LTsv_doc:re.search>
<？DLDT>  <？&lt;>「＠」tag<？&gt;><？/DTDD>                   コンフィグタグと便宜上命名。「main<？&lt;>＠LTsv_doc_main<？&gt;>」「outlist<？&lt;>＠LTsv_doc_outlist<？&gt;>」「LTsvver<？&lt;>＠L:TsvLTsvver<？&gt;>」といったドキュメント本文ではなくメタ的な内容のページタグ。<？/DD/DL>
<？DLDT>  <？&lt;>「＃」tag<？&gt;><？/DTDD>                   コメントタグと便宜上命名。タブ文字「\t」を含まないページはタグをページ内容に置換。複数行を想定なので末尾に改行が入る。<？/DD/DL>
<？DLDT>  <？&lt;>「！」tag<？&gt;><？/DTDD>                   ファイルタグと便宜上命名。ファイル名を「deftag」ソルトで囲んだタグはモジュール関数一覧管理用途。<？BR>
                                置換用タグは「<？&lt;>！tag<？&gt;>」形式でもドキュメントのページタグは「[tag<？&#x7C;>」「<？&#x7C;>tag]」形式な事に注意。<？BR>
                                ページ内容は「*.py」「*.tsv」「*.ltsv」の場合「defindent」で装飾して置換。<？BR>
                                「*.png」「*.gif」「*.jpg」「*.jpeg」の場合base64に変換。htmlへの画像埋め込みを想定。画像を再度読み込む場合はページを空にする。<？BR><？/DD/DL>
<？DLDT>  <？&lt;>「？」tag<？&gt;><？/DTDD>                   分岐タグと便宜上命名。タブ文字「\t」を含むページは正規表現による分岐が発生。1行を想定なので末尾に改行は入らない。<？BR>
                                firstの正規表現にoutlistのファイル名が該当する場合にrest1行に置き換えられます。restには日時フォーマットが使えます。<？BR>
                                tagseparateを使った時は日時フォーマットの「@c(カウンター)」が使えます。カウンターは0から開始します。<？BR>
                                restを日時フォーマット(カウンター)で置換した結果ページタグ名になった場合、当然の様にページタグの置換対象。<？BR>
                                日時フォーマットの詳細は「<？index/LTsv_time-1>」を参考。Pythonで使える正規表現はPythonのドキュメントを参考。<？BR><？/DD/DL>
<？DLDT>  <？&lt;>「＄」tag<？&gt;><？/DTDD>                   内包タグと便宜上命名。置換結果をさらに置換します。分岐タグのコロン「:」が先頭のfirstがタグrestが置換内容。<？BR>
                                内包タグは分岐タグの内部でしか使えませんが、使い回さないデータの圧縮および置換処理の高速化に繋がります。<？BR><？/DD/DL>

<？https/Python_re>
<？index/LTsv_doc:separate>

<？P>  同じ構文をコピペすると一見楽なのですが、1箇所修正するつもりがコピペの回数分再度コピペ(加えてコピペ漏れ)のリスクがつきまといます。<？BR>
[<？&lt;>？tagA<？&gt;><？&#x7C;><？BR>
.+\.html?<？@T><？&lt;>a href="#text0" title="data-a"<？&gt;>data-a<？&lt;>/a<？&gt;><？BR>
.*<？@T>data-a<？BR>
<？&#x7C;><？&lt;>？tagA<？&gt;>]<？BR>

[<？&lt;>？tagB<？&gt;><？&#x7C;><？BR>
.+\.html?<？@T><？&lt;>a href="#text1" title="data-b"<？&gt;>data-b<？&lt;>/a<？&gt;><？BR>
.*<？@T>data-b<？BR>
<？&#x7C;><？&lt;>？tagB<？&gt;>]<？BR>

[<？&lt;>？tagC<？&gt;><？&#x7C;><？BR>
.+\.html?<？@T><？&lt;>a href="#text2" title="data-c"<？&gt;>data-c<？&lt;>/a<？&gt;><？BR>
.*<？@T>data-a　←コピペ漏れ<？BR>
<？&#x7C;><？&lt;>？tagC<？&gt;>]<？BR>
<？/PP>
tagseparateを用いることで同じ構文の繰り返しとデータの分離ができるのですが、タグが増える事で読みづらくなるデメリットがあります。<？BR>
[<？&lt;>？tagA<？&gt;>*<？&lt;>？tagB<？&gt;>*<？&lt;>？tagC<？&gt;><？&#x7C;><？BR>
.+\.html?<？@T><？&lt;>a href="#text@c" title="<？&lt;>？text@c<？&gt;>"<？&gt;><？&lt;>？text@c<？&gt;><？&lt;>/a<？&gt;><？BR>
.*<？@T><？&lt;>？text@c<？&gt;><？BR>
<？&#x7C;><？&lt;>？tagA<？&gt;>*<？&lt;>？tagB<？&gt;>*<？&lt;>？tagC<？&gt;>]<？BR>
[<？&lt;>？text0<？&gt;><？&#x7C;><？BR>
.*<？@T>data-a<？BR>
<？&#x7C;><？&lt;>？text0<？&gt;>]<？BR>
[<？&lt;>？text1<？&gt;><？&#x7C;><？BR>
.*<？@T>data-b<？BR>
<？&#x7C;><？&lt;>？text1<？&gt;>]<？BR>
[<？&lt;>？text2<？&gt;><？&#x7C;><？BR>
.*<？@T>data-c<？BR>
<？&#x7C;><？&lt;>？text2<？&gt;>]<？BR>
<？/PP>
内包タグで上記のタグ群をコンパクトにできます。<？BR>
[<？&lt;>？tagA<？&gt;>*<？&lt;>？tagB<？&gt;>*<？&lt;>？tagC<？&gt;><？&#x7C;><？BR>
:<？&lt;>＄text0<？&gt;><？@T>data-a<？BR>
:<？&lt;>＄text1<？&gt;><？@T>data-b<？BR>
:<？&lt;>＄text2<？&gt;><？@T>data-c<？BR>
.+\.html?<？@T><？&lt;>a href="#text@c" title="<？&lt;>＄text@c<？&gt;>"<？&gt;><？&lt;>＄text@c<？&gt;><？&lt;>/a<？&gt;><？BR>
.*<？@T><？&lt;>＄text@c<？&gt;><？BR>
<？&#x7C;><？&lt;>？tagA<？&gt;>*<？&lt;>？tagB<？&gt;>*<？&lt;>？tagC<？&gt;>]<？BR><？/P>
|<＃contents/LTsv_doc-2>]
[<？index/LTsv_doc:skplist>|
.+\.html?	<h4><？title/skplist></h4>
.*	 <？title/skplist>
|<？index/LTsv_doc:skplist>]
[<？title/skplist>|
.*	置換タグ説明の前にskplistに登録され置換対象にならないタグがあります。
|<？title/skplist>]
[<？index/LTsv_doc:re.search>|
.+\.html?	<h4><？title/re.search></h4>
.*	 <？title/re.search>
|<？index/LTsv_doc:re.search>]
[<？title/re.search>|
.*	分類すると5種類の置換タグがあるものとします。
|<？title/re.search>]
[<？index/LTsv_doc:separate>|
.+\.html?	<h4><？title/separate></h4>
.*	 <？title/separate>
|<？index/LTsv_doc:separate>]
[<？title/separate>|
.*	tagseparateによる繰り返し記述でタグの過剰生産を抑制します。
|<？title/separate>]

[<？section/LTsv_doc_faq-0>|
.+\.html?	<section>@E <h3 id="LTsv_doc_faq-@c"><？title/LTsv_doc_faq-@c></h3>@E<＃contents/LTsv_doc_faq-@c>@E</section>@E
.*	@E<？title/LTsv_doc_faq-@c>@E@E<＃contents/LTsv_doc_faq-@c>@E
|<？section/LTsv_doc_faq-0>]

[<＃contents/LTsv_doc_faq-0>|
<？DLDT> Ｑ．「<？https/LTsv_doc.py>」で置換されないタグが山ほど。<？/DTDD>
 Ａ．タグに実行順番があるので、後発ページ内容を先発タグで置換できない問題があります。当面は手動で並び替えです。<？BR>
      タグの順番を仮に解決できたとして今度は再帰無限ループをどう解決するのかという問題があるのですorz<？BR><？/DD/DL>
|<＃contents/LTsv_doc_faq-0>]

[<？section/kanedit_usage-0>|
.+\.html?	<section>@E <h3 id="kanedit_usage-@c"><？title/kanedit_usage-@c></h3>@E<＃contents/kanedit_usage-@c>@E</section>@E
.*	@E<？title/kanedit_usage-@c>@E@E<＃contents/kanedit_usage-@c>@E
|<？section/kanedit_usage-0>]

[<＃contents/kanedit_usage-0>|
<？Pcenter><？index/kanedit_usage:capture><？BR><？/PP> <？VRkeyboard/howto><？BR>
 <？VRcalc/howto><？BR>
 ここでは「kanedit」に追加された(予定含む)操作の説明になります。<？BR>
<？/P>
<？DLDT>  [Space]<？/DTDD>               いわゆる半角スペース「 」。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[Space]<？/DTDD>        いわゆる全角スペース「　」。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[T]<？/DTDD>            タブ文字「\t」。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[I]<？/DTDD>            現状では半角スペース4つ固定「    」。インデント自動調整予定(未定)。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[J]or[Down]<？/DTDD>    編集行(<？VRcalc>)を下に移動。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[K]or[Up]<？/DTDD>      編集行(<？VRcalc>)を上に移動。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[E]<？/DTDD>            電卓演算。<？VReval/howto><？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[Enter]<？/DTDD>        現状では電卓演算。改行入力に変更予定(未定)。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[O]<？/DTDD>            ファイルダイアログ予定(未定)。<？BR><？/DD/DL>
<？DLDT>  [Ctrl]+[S]<？/DTDD>            ファイル保存予定(未定)。<？BR><？/DD/DL>
<？P>
 漢直の詳細は「<？index/kanedit_faq-1>」を参考。<？/P>
|<＃contents/kanedit_usage-0>]
[<？index/kanedit_usage:capture>|
.+\.html?	<img src="kanedit_512x384.png" width="512" height="384" alt="漢直鍵盤"><br />
.*	
|<？index/kanedit_usage:capture>]

[<？section/kanedit-0>*<？section/kanedit-1>|
.+\.html?	<section>@E <h3 id="kanedit-@c"><？title/kanedit-@c></h3>@E<＃contents/kanedit-@c>@E</section>@E
.*	@E<？title/kanedit-@c>@E@E<＃contents/kanedit-@c>@E
|<？section/kanedit-0>*<？section/kanedit-1>]

[<＃contents/kanedit-0>|
<？P> 「<？https/kanedit.py>」の解説は準備中です。<？BR><？/P>
|<＃contents/kanedit-0>]
<！kanedit.py>

[<＃contents/kanedit-1>|
<？P> 「<？https/kanedit.tsv>」の解説も準備中です。<？BR><？/P>
|<＃contents/kanedit-1>]
<！kanedit.tsv>

[<？section/kanedit_faq-0>|
.+\.html?	<section>@E <h3 id="kanedit_faq-@c"><？title/kanedit_faq-@c></h3>@E<＃contents/kanedit_faq-@c>@E</section>@E
.*	@E<？title/kanedit_faq-@c>@E@E<＃contents/kanedit_faq-@c>@E
|<？section/kanedit_faq-0>]

[<＃contents/kanedit_faq-0>|
<？DLDTfaq> Ｑ．表示されない文字が多々あるのですが。<？/DTDD>
 Ａ．グリフが不足しています。「kanfont」でグリフを作成していく事で表示できる文字を増やしていく予定です。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．普通にフォント使えばよかったんじゃないですか？<？/DTDD>
 Ａ．「Tkinter」は<？CP932>を越える文字を扱えない問題があったので、独自にフォントモジュールを作る必要に迫られました。<？BR>
     Vim版でとりあえずの解決は図りましたがグリフ確認用としての簡易的テキストエディタは必要なので「kanedit」の開発はTSF版で続くと思います。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．<？DICzip>が見つからない。<？/DTDD>
 Ａ．郵便番号辞書(大口事業所個別番号含む)は「kanzip」でzipファイルをダウンロードして「kanzip.tsv」を作成します。<？BR>
     詳細は「<？index/kanzip_usage-0>」を参考。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．漢直の説明が足りない。<？/DTDD>
 Ａ．以前このページにあった漢直の解説(ソフトの操作方法ではない)は、「KEV」の方に移管しました。<？BR>
     漢直の詳細は「<？index/KEV_interpret-0>」などを参考。<？BR>
<？/DD/DL>
|<＃contents/kanedit_faq-0>]

[<？section/kanfont_usage-0>|
.+\.html?	<section>@E <h3 id="kanfont_usage-@c"><？title/kanfont_usage-@c></h3>@E<＃contents/kanfont_usage-@c>@E</section>@E
.*	@E<？title/kanfont_usage-@c>@E@E<＃contents/kanfont_usage-@c>@E
|<？section/kanfont_usage-0>]

[<＃contents/kanfont_usage-0>|
<？Pcenter><？index/kanfont_usage:capture><？BR><？/P><？DLDT>   左上の<？VRkeyboard><？/DTDD>                   グリフ編集する漢字などを選択。<？VRkeyboard/howto><？BR>電卓機能は不使用。<？BR><？/DD/DL>
<？DLDT>   縦のスケール<？/DTDD>                     グリフを編集する文字を選択。<？VRkeyboard>に無い漢字も選択可能。<？BR><？/DD/DL>
<？DLDT>   縦スケールのスピンボックス<？/DTDD>       グリフを編集する文字を選択。縦のスケールと連動。<？BR><？/DD/DL>
<？DLDT>   U+ffff表記下の「CP」ボタン<？/DTDD>       クリップボードに縦スケールで選択されてる文字をコピー。<？BR><？/DD/DL>
<？DLDT>   U+ffff表記下の「PT」ボタン<？/DTDD>       クリップボードの先頭１文字を使って文字を選択。左上の<？VRkeyboard>にも反映。<？BR><？/DD/DL>
<？DLDT>   真ん中のキャンバス<？/DTDD>               グリフを編集。右回転の青色ポリゴンが描画用途、左回転の緑色ポリゴンがフォントだと反転消去グリフだと背景色消去。<？BR>
                                    クリックで頂点追加、ドラッグで頂点移動。ドラッグだけど頂点を動かさずクリックを離すと頂点は消える。<？BR>
                                    線分(長方形じゃなくて円の部分)をクリックで頂点を増やせる。<？BR>
                                    頂点を全て消すとポリゴンが１枚消える。<？BR><？/DD/DL>
<？DLDT>   横のスケール<？/DTDD>                     編集するポリゴンの変更。または新規ポリゴンレイヤーを選択。<？BR><？/DD/DL>
<？DLDT>   横スケール下の「COPY」ボタン<？/DTDD>     ポリゴンレイヤーを複製。「PASTE」で貼り直す事が可能。クリップボード不使用。<？BR><？/DD/DL>
<？DLDT>   横スケール下の「CUT」ボタン<？/DTDD>      ポリゴンレイヤーを削除。「PASTE」で貼り直す事が可能。クリップボード不使用。<？BR><？/DD/DL>
<？DLDT>   横スケール下の「PASTE」ボタン<？/DTDD>      「COPY」「CUT」したポリゴンレイヤーを貼り直す。クリップボード不使用。<？BR><？/DD/DL>
<？DLDT>   横スケール下の「UP」ボタン<？/DTDD>       ポリゴンレイヤーを重ねる順番を変更。左回転のポリゴンを浮上。<？BR><？/DD/DL>
<？DLDT>   横スケール下の「DOWN」ボタン<？/DTDD>     ポリゴンレイヤーを重ねる順番を変更。右回転のポリゴンを沈める。<？BR><？/DD/DL>
<？DLDT>   「grid」スピンボックス<？/DTDD>           ポリゴンの頂点位置を揃える。「活(5x)」では100「漫(10x)」では50を想定。<？BR><？/DD/DL>
<？DLDT>   「grid」チェックボックス<？/DTDD>         通常OFF。スピンボックスの値より1少ない数値にグリッド指定する事も可能。グリフデザインでは杞憂だった機能。<？BR><？/DD/DL>
<？DLDT>   「seg」チェックボックス<？/DTDD>          通常ON。ポリゴンの線分を表示＆操作許可。<？BR><？/DD/DL>
<？DLDT>   「Pce(piece)」チェックボックス<？/DTDD>   番号付き頂点を移動するとポリゴン1枚まるごと移動。頂点はキャンバスの外に移動できないので図形が潰れる場合に注意。必要に応じてOFF。Pce=piece。<？BR><？/DD/DL>
<？DLDT>   「ref」チェックボックス<？/DTDD>          グリフ編集中に参考までに別のフォントを表示。<？BR><？/DD/DL>
<？DLDT>   「活」「漫」「筆」ラジオボタン<？/DTDD>   キャンバスで編集するグリフを「活:kan5x5」「漫:kan5x5comic」「筆:kan5x5brush」から選択。<？BR><？/DD/DL>
<？DLDT>   右側の入力欄<？/DTDD>                     辞書項目「英名音訓送異俗熙簡繁越地顔鍵代逆非難活漫筆幅」を<？VRkeyboard>で入力します。クリップボード使用可能。<？BR>
                                    活漫筆幅がグリフ項目になります。グリフキャンバスで編集。頂点はSVGパスから独自形式に圧縮される場合があります。<？BR>
                                    <？VRcalc/howto><？BR><？/DD/DL>
<？DLDT>   右下の「save」ボタン<？/DTDD>             「kan5x5.svg」「LTsv/kanchar.tsv」「LTsv/kanpickle.bin」に保存します。<？BR><？/DD/DL>
|<＃contents/kanfont_usage-0>]
[<？index/kanfont_usage:capture>|
.+\.html?	<img src="kanfont_512x384.png" width="512" height="384" alt="kanfont"><br />
.*	
|<？index/kanfont_usage:capture>]

[<？section/kanfont-0>*<？section/kanfont-1>*<？section/kanfont-2>|
.+\.html?	<section>@E <h3 id="kanfont-@c"><？title/kanfont-@c></h3>@E<＃contents/kanfont-@c>@E</section>@E
.*	@E<？title/kanfont-@c>@E@E<＃contents/kanfont-@c>@E
|<？section/kanfont-0>*<？section/kanfont-1>*<？section/kanfont-2>]

[<＃contents/kanfont-0>|
<？index/kanfont:kanfont.py>
<！../kanfont.py>
<？index/kanfont:5x10xTO5x10x20x.py>
<！../5x10xTO5x10x20x.py>
|<＃contents/kanfont-0>]

[<？index/kanfont:kanfont.py>*<？index/kanfont:5x10xTO5x10x20x.py>|
:<＄title/LTsv_glyph-0>	「kanfont.py」の関数
:<＄title/LTsv_glyph-1>	「5x10xTO5x10x20x.py」の関数
.+\.html?	<h4><＄title/LTsv_glyph-@c></h4>
.*	 <＄title/LTsv_glyph-@c>
|<？index/kanfont:kanfont.py>*<？index/kanfont:5x10xTO5x10x20x.py>]

[../kanfont.py|
kanfont_pathadjustment(pathpos=None)	表示グリフのパスの個数(レイヤー数)に合わせて横スケールの目盛り数を変化。
kanfont_code(pathpos=None)	縦スケール操作などで編集するグリフを選択した時の辞書項目表示更新など。
kanfont_codespin_shell(window_objvoid=None,window_objptr=None)	縦スケールのスピンボックス編集時の挙動。縦スケールと連動。グリフを選択。
kanfont_codescale_shell(window_objvoid=None,window_objptr=None)	縦スケール編集時の挙動。スピンボックスと連動。グリフを選択。
kanfont_codekbd(kbdentry)	縦スケールの<？VRkeyboard>の入力を受けとって編集グリフ選択に繋げる。
kanfont_codekbd_paste(window_objvoid=None,window_objptr=None)	クリッブボードを受けとって編集グリフ選択に繋げる。
kanfont_codekbd_copy(window_objvoid=None,window_objptr=None)	選択中のグリフをクリッブボードに転送。
kanfont_pathsel_shell(window_objvoid=None,window_objptr=None)	横スケール操作でグリフのパス(レイヤー)選択。
kanfont_grid_shell(window_objvoid=None,window_objptr=None)	「grid」スピンボックス変更時の挙動。
kanfont_inner_shell(window_objvoid=None,window_objptr=None)	「grid」チェックボックス変更時の挙動。innerオプションで挙動変更。
kanfont_piece_shell(window_objvoid=None,window_objptr=None)	「Pce(piece)」チェックボックス変更時の挙動。
kanfont_lineseg_shell(window_objvoid=None,window_objptr=None)	「seg」チェックボックス変更時の挙動。
kanfont_gothic_shell(radioNumber)	「活」「漫」「筆」ラジオボタン変更時の挙動。
kanfont_refer_shell(window_objvoid=None,window_objptr=None)	「ref」チェックボックス変更時の挙動。
kanfont_layerX_shell(window_objvoid=None,window_objptr=None)	横スケール下の「CUT」ボタンの挙動。
kanfont_layerC_shell(window_objvoid=None,window_objptr=None)	横スケール下の「COPY」ボタンの挙動。
kanfont_layerV_shell(window_objvoid=None,window_objptr=None)	横スケール下の「PASTE」ボタンの挙動。
kanfont_layerU_shell(window_objvoid=None,window_objptr=None)	横スケール下の「UP」ボタンの挙動。
kanfont_layerD_shell(window_objvoid=None,window_objptr=None)	横スケール下の「DOWN」ボタンの挙動。
kanfont_glyph_grid()	グリッド座標の計算。innerオプションで挙動変更。
kanfont_glyph_draw()	グリフ描画。キャンパス内にマウスがある時と外にあるときで描画内容が異なる。
kanfont_glyph_mousepress(window_objvoid=None,window_objptr=None)	キャンパス内でマウス押下。グリフ頂点の追加もしくは既存の頂点を掴む。
kanfont_glyph_mousemotion(window_objvoid=None,window_objptr=None)	キャンパス内でマウス移動。グリフ頂点の移動など。
kanfont_glyph_mouserelease(window_objvoid=None,window_objptr=None)	キャンパス内でマウス押上。グリフを「<？https/kanchar.tsv>」に書き込みなど。
kanfont_glyph_mouseenter(window_objvoid=None,window_objptr=None)	キャンパス内にマウス移動の挙動。
kanfont_glyph_mouseleave(window_objvoid=None,window_objptr=None)	キャンパス外にマウス移動の挙動。
kanfont_kbd_mousepress(window_objvoid=None,window_objptr=None)	縦スケール<？VRkeyboard>のマウス押下の挙動。
kanfont_kbd_mousemotion(window_objvoid=None,window_objptr=None)	縦スケール<？VRkeyboard>のマウス移動の挙動。
kanfont_kbd_mouserelease(window_objvoid=None,window_objptr=None)	縦スケール<？VRkeyboard>のマウス押上の挙動。
kanfont_keypress(window_objvoid=None,window_objptr=None)	キーボード押下の挙動。マウスがどのキャンパス(<？VRkeyboard>)にあるかで分岐。
kanfont_keyrelease(window_objvoid=None,window_objptr=None)	キーボード押上の挙動。kanfont_keypressと同じ関数を参照。
kanfont_calculatormouseinput_enter(calculator_canvas)	辞書項目入力後、グリフ幅をチェックしたり、キャンバスにグリフを反映させる。
kanfont_calculatormouseinput_shell(calculator_canvas)	辞書項目の<？VRkeyboard>で文字入力があった時の挙動。
kanfont_calculatormousepress_shell(calculator_canvas)	辞書項目の<？VRkeyboard>でマウス押下の挙動。
kanfont_calculatormousemotion_shell(calculator_canvas)	辞書項目の<？VRkeyboard>でマウス移動の挙動。
kanfont_calculatormouserelease_shell(calculator_canvas)	辞書項目の<？VRkeyboard>でマウス押上の挙動。
kanfont_calculatormouseleave_shell(calculator_canvas)	辞書項目の<？VRkeyboard>でキャンパス外にマウス移動の挙動。
kanfont_calculatormouseenter_shell(calculator_canvas)	辞書項目の<？VRkeyboard>でキャンパス内にマウス移動の挙動。
kanfont_svgsave_shell(window_objvoid=None,window_objptr=None)	「save」ボタンの挙動。
kanfont_svgmake(window_objvoid=None,window_objptr=None)	グリフから「kan5x5.svg」を生成する。
kanfont_configload()	設定ファイル「<？https/kanfont.tsv>」を読み込む。
kanfont_configsave_exit(window_objvoid=None,window_objptr=None)	設定ファイル「<？https/kanfont.tsv>」に保存する。kanfont_autosaveがONの場合「kanfont_svgmake()」も実行。
|../kanfont.py]

[../5x10xTO5x10x20x.py|
LTsv_glyphSVG5x10x(LTsv_glyph_path)	旧式のグリフパス伸張(SVGに戻す)。
LTsv_glyphSVG5x10x20x(LTsv_kanpath5x10x20x)	新式のグリフパス伸張(SVGに戻す)。
LTsv_glyph5x10x20x(LTsv_kanpathSVG)	新式のグリフパス圧縮。
|../5x10xTO5x10x20x.py]

[<＃contents/kanfont-1>|
<？P> 「<？https/kanfont.tsv>」は「<？https/kanfont.py>」の設定ファイルです。<？BR>
<？/P>
<！../kanfont.tsv>
|<＃contents/kanfont-1>]

[../kanfont.tsv|
[kanfont|	「kanfont.py」の設定。
seek	縦スケール(編集中のグリフ)の値を保存。初期値は「ぱ」。
grid	「grid」スピンボックスの値を保存。初期値は「50」。
inner	「inner」チェックボックスの値を保存。初期値は「0」。
lineseg	「seg」チェックボックスの値を保存。初期値は「1」。
piece	「Pce」チェックボックスの値を保存。初期値は「1」。
gothic	グリフラジオボタン(活,漫,筆)の値を保存。初期値は「0」。
gridimage	編集中キャンバスに表示するグリッド画像ファイル名。初期値は「kanfont_grid25_5x5.png」。
refer	「ref」編集中キャンバスに表示できるフォント名。初期値は「Noto Sans Japanese Regular」。
refergrid	「ref」チェックボックスの値を保存。初期値は「1」。
referGTK	キャンバスに「refer」を表示する場合の位置調整と色。「GTK」で大きいフォントを表示するとズレが発生する。初期値は「X:-30<？@T>Y:-30<？@T>S:420<？@T>C:#E5E5E5」。
referTkinter	キャンバスに「refer」を表示する場合の位置調整と色。「Tkinter」で大きいフォントを表示するとズレが発生する。初期値は「X:-30<？@T>Y:-135<？@T>S:420<？@T>C:#E5E5E5」。
glyphcolor	キャンバス編集中のグリフやカーソルの色指定。R:右回転ポリゴン L:左回転ポリゴン X:#D96ED3 G:#9F6C00。初期値は「R:#6E81D9<？@T>L:#6ED997<？@T>X:#D96ED3<？@T>G:#9F6C00」。
dic_name	単漢字辞書保存先指定。初期値は「LTsv/kanchar.tsv」。
svg_name	SVGの保存先指定。初期値は「kan5x5.svg」。
font_name	グリフの名称。フォント名称にも使用。初期値は「活:kan5x5<？@T>漫:kan5x5comic<？@T>筆:kan5x5brush」。
font_glyphtype	「save」ボタンで保存するグリフは初期値の「漫」に固定されてるが、「活」に変える事でドット絵限定にしたり、「」に空指定する事でグリフラジオボタンによる選択ができる。
font_widths	フォント幅(全角,麻雀牌,半角)グループを生成。「kan5x5.svg」で「<？&lt;>font id="kan5x5comic_w624" horiz-adv-x="624"<？&gt;>」のようなタグ生成に使う。初期値は「1024,824,624」。
autosave	初期値は「off」。「on」にするとウィンドウを閉じた時に「LTsv/kanchar.tsv(dic_name)」に自動保存可能。設定に関係なく「LTsv/kanpickle.bin」は上書保存。
savetime	「save」ボタンに保存時間を表示する演出用途。初期値は「@0h:@0n:@0s」。
|../kanfont.tsv]

[<＃contents/kanfont-2>|
<？P> ・「kanfont」のグリフキャンバスサイズは512pxですがSVGパスの想定サイズは1024pxです。<？BR>
 ・グリフキャンバスは左上が&#40;0,0&#41;ですがSVGパスは左下が&#40;0,0&#41;です。<？BR>
 ・「kanfont」はポリゴン限定(直線しか編集できない)ので、SVGパスの読込も「M」と「z」しか対応してないことに注意。<？BR>
<？/P>
<？https/kanfont:paths>

<？https/kanfont:fonts>

<？P> 「kanfont」はSVGパスを<？DICchar>に保存する際に独自形式5x10x20xで圧縮して容量削減します(半角角括弧「[」「]」が用いられてたら圧縮されてるはず)。<？BR>
<？/P>
<？DLDT>「活」の5x系(グリフキャンバス上「grid」100px)<？/DTDD>
  25分割するので36個のxy座標(0123456789?!+-*/%^#$&;@=_LMN`Zklmnyz)で表現する事で圧縮。<？BR>
<？/DD/DL>
<？DLDT>「漫」の10x20x系(グリフキャンバス上「grid」50px25px)<？/DTDD>
  縦横それぞれ10分割するのでX軸Y軸それぞれ11個のx座標(ABCDEFGHIJK)y座標(OPQRSTUVWXY)で表現する事で圧縮。<？BR>
  実際の「漫」グリフでは25px単位の「grid」も使ってるので圧縮されない場合もあります。<？BR>
  そこで20分割に対応した座標表現も追加。x座標(AaBbCcDdEeFfGgHhIiJjK)y座標(OoPpQqRrSsTtUuVvWwXxY)で圧縮。<？BR>
<？/DD/DL>
<？DLDT>「筆」の無圧縮系<？/DTDD>
  都道府県アイコンが10pxで描画とか「grid」が細かいので圧縮予定はありません。<？BR><？/DD/DL>
|<＃contents/kanfont-2>]

[<？https/kanfont:paths>*<？https/kanfont:fonts>|
:<＄web/kanfont_faq-0>	パス – SVG 1.1 （第２版）ウェブ関連仕様 日本語訳
:<＄url/kanfont_faq-0>	https://triple-underscore.github.io/SVG11/paths.html
:<＄web/kanfont_faq-1>	フォント – SVG 1.1 （第２版）ウェブ関連仕様 日本語訳
:<＄url/kanfont_faq-1>	https://triple-underscore.github.io/SVG11/fonts.html
.+\.html?	<dl class="faqlink"><dt><＄web/kanfont_faq-@c></dt><dd><a href="<＄url/kanfont_faq-@c>" title="<＄web/kanfont_faq-@c>"><＄url/kanfont_faq-@c></a></dd></dl>
.*	   <＄web/kanfont_faq-@c><？BR>@E   <＄url/kanfont_faq-@c><？BR>
|<？https/kanfont:paths>*<？https/kanfont:fonts>]

[<？section/kanfont_faq-0>|
.+\.html?	<section>@E <h3 id="kanfont_faq-@c"><？title/kanfont_faq-@c></h3>@E<＃contents/kanfont_faq-@c>@E</section>@E
.*	@E<？title/kanfont_faq-@c>@E@E<＃contents/kanfont_faq-@c>@E
|<？section/kanfont_faq-0>]

[<＃contents/kanfont_faq-0>|
<？DLDTfaq> Ｑ．「kanfont」で他のフォントを編集できますか？<？/DTDD>
 Ａ．「kanfont」はフォントファイルを読み込めないので「kan5x5comic」のグリフ編集しかできません。<？BR>
     既存のフォントのパスをSVGに変換してtsvを上書きする荒技も考えられますが、現状「kanfont」は曲線を扱えないので普通に読み込めるフォントは皆無かと。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．圧縮されてない素のSVGを確認したい。<？/DTDD>
 Ａ．「save」ボタンで「kan5x5.svg」が保存できるのでそっちで確認できるはず。<？BR>
    もしくは「<？https/5x10xTO5x10x20x.py>」を修正すれば無圧縮版の「<？https/kanchar.tsv>」を別途作成できるはず。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．「kan5x5.svg」は何に使うんですか？<？/DTDD>
 Ａ．「kan5x5comic.svg」をFontForgeで「kan5x5comic.ttf」に変換できます。<？BR>
 <？/DD/DL>
<？https/kanfont_faq:fontforge>

<？DLDTfaq> Ｑ．「FontForge」が使えない環境というかLinux以外のOSだと謎の環境構築が複雑なので簡単な方法お願い。<？/DTDD>
 Ａ．<？yakuyon>から「kan5x5comic.woff」をダウンロードしてWOFFコンバータで「kan5x5comic.ttf」にする別ルートもあります。<？BR>
 <？/DD/DL>
<？https/kanfont_faq:ooblog.github.io>

<？https/kanfont_faq:woffconv>

<？DLDTfaq> Ｑ．上下左右で<？VRkeyboard>のカーソルを移動しようとすると別のGUIにフォーカスが移動してしまいます。<？/DTDD>
 Ａ．[KANA]+[NFER]などで「σ」鍵盤を表示した状態でHJKLによりカーソルが移動できます。<？BR>
     <？VRkeyboard/howto><？BR>
     <？VRcalc/howto><？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．「PT」ボタンで文字を貼り付けたのに<？VRkeyboard>に反映されない。<？/DTDD>
 Ａ．「LTsv/kanmap.tsv」に含まれてない漢字を探索するには「kanedit」の「探」コマンドを用いてください。<？BR>
     例えば都道府県アイコン「<？contents/tokyoicon>」は「kanedit」の「電卓」で「探<？contents/tokyoicon>」すると「探<？contents/tokyoicon>⇔東」が求められます。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．左回転のポリゴンがフォントに変換したときに描画されてましたよ？<？/DTDD>
 Ａ．フォントの描画ルールでは、逆回転のポリゴンが重なった場所が透過になるアルゴリズムだからです。<？BR>
     「L:Tsv」のグリフは単純に順番に描画するアルゴリズムなので「UP」「DOWN」ボタンでポリゴン描画順の入れ替えてください。<？BR><？/DD/DL>
|<＃contents/kanfont_faq-0>]
[<？contents/tokyoicon>|
.+\.html?	<span class="kan5x5comic">&#61580;</span>
.*	&#61580;
|<？contents/tokyoicon>]

[<？https/kanfont_faq:ooblog.github.io>*<？https/kanfont_faq:fontforge>*<？https/kanfont_faq:woffconv>|
:<＄web/kanfont_faq-0>	ふぉんと - 「約四文字」(http://ooblog.github.io/)
:<＄url/kanfont_faq-0>	https://ooblog.github.io/%E3%81%B5%E3%81%89%E3%82%93%E3%81%A8.html
:<＄web/kanfont_faq-1>	FontForge
:<＄url/kanfont_faq-1>	http://fontforge.github.io/ja/
:<＄web/kanfont_faq-2>	WOFFコンバータ
:<＄url/kanfont_faq-2>	http://opentype.jp/woffconv.htm
.+\.html?	<dl class="faqlink"><dt><＄web/kanfont_faq-@c></dt><dd><a href="<＄url/kanfont_faq-@c>" title="<＄web/kanfont_faq-@c>"><＄url/kanfont_faq-@c></a></dd></dl>
.*	   <＄web/kanfont_faq-@c><？BR>@E   <＄url/kanfont_faq-@c><？BR>
|<？https/kanfont_faq:ooblog.github.io>*<？https/kanfont_faq:fontforge>*<？https/kanfont_faq:woffconv>]

[<？https/kanfont.py>*<？https/kanfont.tsv>*<？https/5x10xTO5x10x20x.py>|
:<＄path/kanfont-0>	kanfont.py
:<＄path/kanfont-1>	kanfont.tsv
:<＄path/kanfont-2>	5x10xTO5x10x20x.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/kanfont-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/kanfont-@c>"><＄path/kanfont-@c></a>
.*	<＄path/kanfont-@c>
|<？https/kanfont.py>*<？https/kanfont.tsv>*<？https/5x10xTO5x10x20x.py>]

[<？section/kanmap_usage-0>*<？section/kanmap_usage-1>|
.+\.html?	<section>@E <h3 id="kanmap_usage-@c"><？title/kanmap_usage-@c></h3>@E<＃contents/kanmap_usage-@c>@E</section>@E
.*	@E<？title/kanmap_usage-@c>@E@E<＃contents/kanmap_usage-@c>@E
|<？section/kanmap_usage-0>*<？section/kanmap_usage-1>]

[<＃contents/kanmap_usage-0>|
<？P> 事前にグリフを「LTsv/kanpickle.bin」へ積み込む事で「kanedit」「kanfont」などの動作がスムーズになります。<？BR>
 「<？https/kanmap.py>」を起動すると上部に漢字配列「<？https/kanmap.tsv>」、下部に<？DICchar>を表示します。<？BR>
 「<？https/kanmap.py>」を終了する時に「LTsv/kanpickle.bin」と「kanmap.png」を保存します(PNGの生成はGTKのみ)。<？BR><？/P>
|<＃contents/kanmap_usage-0>]

[<＃contents/kanmap_usage-1>|
<？Pcenter><？index/kanmap_usage:capture><？/P><？DLDT>  <？VRkeyboard><？/DTDD>          <？VRkeyboard/howto><？BR><？/DD/DL>
<？DLDT>  小さい文字の上でタップ<？/DTDD>          カーソル点灯。クリップボードに１文字転送。<？BR><？/DD/DL>
<？DLDT>  「clipfind」をタップ<？/DTDD>            クリップボードの文字で検索してカーソル点灯。<？VRkeyboard>も同様に移動。複数同じ文字がある場合最初の文字を表示するので注意。<？BR><？/DD/DL>
<？DLDT>  「update☐」にチェック☑<？/DTDD>        ONの状態で[Ctrl]+[S]もしくは「<？https/kanmap.py>」を終了すると「LTsv/kanmap.tsv」を上書保存。<？BR><？/DD/DL>
<？DLDT>  「kbdfind☐」にチェック☑<？/DTDD>       ONの状態なら<？VRkeyboard>の入力操作で検索してカーソル点灯。<？BR><？/DD/DL>
<？DLDT>  「rewrite☐」にチェック☑<？/DTDD>       ONの時かつ漢字配列カーソル点灯状態で、単漢字辞書文字タップすると漢字配列の文字を差替。<？BR><？/DD/DL>
<？DLDT>  「swap☐」にチェック☑<？/DTDD>          ONの時かつ漢字配列カーソル点灯状態で、別の漢字配列文字タップすると漢字配列の文字同士を交換。<？BR><？/DD/DL>
|<＃contents/kanmap_usage-1>]

[<？index/kanmap_usage:capture>|
.+\.html?	<img src="kanmap_512x384.png" width="512" height="384" alt="kanmap"><br />
.*	
|<？index/kanmap_usage:capture>]

[<？section/kanmap-0>|
.+\.html?	<section>@E <h3 id="kanmap-@c"><？title/kanmap-@c></h3>@E<＃contents/kanmap-@c>@E</section>@E
.*	@E<？title/kanmap-@c>@E@E<＃contents/kanmap-@c>@E
|<？section/kanmap-0>]

[<＃contents/kanmap-0>|
<？P> 「<？https/kanmap.py>」の解説は準備中です。<？BR><？/P>
|<＃contents/kanmap-0>]
<！kanmap.py>

[<？section/kanmap_faq-0>|
.+\.html?	<section>@E <h3 id="kanmap_faq-@c"><？title/kanmap_faq-@c></h3>@E<＃contents/kanmap_faq-@c>@E</section>@E
.*	@E<？title/kanmap_faq-@c>@E@E<＃contents/kanmap_faq-@c>@E
|<？section/kanmap_faq-0>]

[<＃contents/kanmap_faq-0>|
<？DLDTfaq> Ｑ．「Tkinter」で「kanmap.png」が保存されないのですが？<？/DTDD>
 Ａ．「Tkinter」では「canvas」を画像として保存する方法が不明なので、[PrtSc]キーとかでキャプチャソフトを起動してください。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．「kanmap.png」に「LTsv/kanmap.tsv」のフォントが保存されるのですか？<？/DTDD>
 Ａ．グリフの座標データが保存されるのは「LTsv/kanpickle.bin」です。「kanmap.png」は進捗確認用の画像です。<？BR>
     <？DICchar>のSVGを「LTsv/kanpickle.bin」にPythonのパイクルとして積み込みます。<？BR>
<？/DD/DL>
<？https/Python_pickle>
<？DLDTfaq> Ｑ．「kanmap.png」の空白が多い気がします。<？/DTDD>
 Ａ．<？DICchar>で扱ってる文字がまだまだ不十分なので同時にグリフデータも不足するためです。いわゆる開発中の画面状態です。<？BR>
 一見表示されてない漢字も「<？https/kanmap.tsv>」で扱ってる漢字はクリップボードに取得できます。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．編集追加したはずのグリフが「kanedit」に反映されない。<？/DTDD>
 Ａ．「LTsv/kanpickle.bin」を一旦手動で削除して「<？https/kanmap.py>」をもう一度起動。「LTsv/kanpickle.bin」が初期化されるはずです。<？BR><？/DD/DL>
|<＃contents/kanmap_faq-0>]

[<？https/Python_pickle>*<？https/Python_re>|
:<＄web/Python-0>	 12.1. pickle — Python オブジェクトの直列化 — Python 3.5.2 ドキュメント
:<＄url/Python-0>	 http://docs.python.jp/3/library/pickle.html
:<＄web/Python-1>	 6.2. re — 正規表現操作 — Python 3.5.2 ドキュメント
:<＄url/Python-1>	 http://docs.python.jp/3/library/re.html
.+\.html?	<dl class="faqlink"><dt><＄web/Python-@c></dt><dd><a href="<＄url/Python-@c>" title="<＄web/Python-@c>"><＄url/Python-@c></a></dd></dl>
.*	   <＄web/Python-@c><？BR>@E   <＄url/Python-@c><？BR>@E
|<？https/Python_pickle>*<？https/Python_re>]

[<？section/kanzip_usage-0>|
.+\.html?	<section>@E <h3 id="kanzip_usage-@c"><？title/kanzip_usage-@c></h3>@E<＃contents/kanzip_usage-@c>@E</section>@E
.*	@E<？title/kanzip_usage-@c>@E@E<＃contents/kanzip_usage-@c>@E
|<？section/kanzip_usage-0>]

[<＃contents/kanzip_usage-0>|
<？Pcenter><？index/kanzip_usage:capture><？BR><？/PP> まず「<？https/kanzip.py>」配下に作業用の「kanzip」フォルダが作成されます。<？BR>
 初期状態なら「jigyosyo.zip」「01hokkai.zip」など各都道府県(大口事業所個別番号含む)のボタンがあり、押すと「*.zip」をダウンロード。<？BR>
 「*.zip」ダウンロード同様に「*.csv」から必要事項を取りだして「*.tsv」に変換の手順を、47都道府県で行います。手順は手動でボタンを押します。<？BR>
 全ての「*.tsv」を作成(かつ「kanzip.tsv」が無い状態)すると「都道府県と事業所をダウンロード＆コンバートし終えてから[kanzip.tsv]にマージ。」ボタンの封印が解除されるので、<？BR>
 最終的に<？DICzip>にマージして完成。<？BR><？/P>
|<＃contents/kanzip_usage-0>]
[<？index/kanzip_usage:capture>|
.+\.html?	<img src="kanzip_512x384.png" width="512" height="384" alt="kanzip"><br />
.*	
|<？index/kanzip_usage:capture>]

[<？section/kanzip-0>|
.+\.html?	<section>@E <h3 id="kanzip-@c"><？title/kanzip-@c></h3>@E<＃contents/kanzip-@c>@E</section>@E
.*	@E<？title/kanzip-@c>@E@E<＃contents/kanzip-@c>@E
|<？section/kanzip-0>]

[<＃contents/kanzip-0>|
<？P> 「<？https/kanzip.py>」の解説は準備中です。<？BR><？/P>
|<＃contents/kanzip-0>]
<！kanzip.py>

[<？section/kanzip_faq-0>|
.+\.html?	<section>@E <h3 id="kanzip_faq-@c"><？title/kanzip_faq-@c></h3>@E<＃contents/kanzip_faq-@c>@E</section>@E
.*	@E<？title/kanzip_faq-@c>@E@E<＃contents/kanzip_faq-@c>@E
|<？section/kanzip_faq-0>]

[<＃contents/kanzip_faq-0>|
<？DLDTfaq> Ｑ．ボタンを手動で１個ずつ押していくのが面倒です。<？/DTDD>
 Ａ．ダウンロードがうまくいかない場合(回線が襲いとかzipの破損など)自動化しづらい箇所があるので手動確認は大事です。<？/DD/DL>
<？DLDTfaq> Ｑ．ダウンロードできなくなりました。<？/DTDD>
 Ａ．日本郵便にあるはずのzipファイルのURL変更などが考えられますが、ブラウザでzipをダウンロードして「kanzip」フォルダにコピーすれば作業続行可能なはずです。<？/DD/DL>
<？https/kanzip_faq:jigyosyo>
<？https/kanzip_faq:kogaki-zip>
|<＃contents/kanzip_faq-0>]

[<？https/kanzip_faq:jigyosyo>*<？https/kanzip_faq:kogaki-zip>|
:<＄web/kanzip_faq-0>	事業所の個別郵便番号のダウンロード zip形式 - 日本郵便
:<＄url/kanzip_faq-0>	http://www.post.japanpost.jp/zipcode/dl/jigyosyo/index-zip.html
:<＄web/kanzip_faq-1>	読み仮名データの促音・拗音を小書きで表記するもの - zip圧縮形式 日本郵便
:<＄url/kanzip_faq-1>	http://www.post.japanpost.jp/zipcode/dl/kogaki-zip.html
.+\.html?	<dl class="faqlink"><dt><＄web/kanzip_faq-@c></dt><dd><a href="<＄url/kanzip_faq-@c>" title="<＄web/kanzip_faq-@c>"><＄url/kanzip_faq-@c></a></dd></dl>
.*	   <＄web/kanzip_faq-@c><？BR>@E   <＄url/kanzip_faq-@c><？BR>
|<？https/kanzip_faq:jigyosyo>*<？https/kanzip_faq:kogaki-zip>]

[<？section/KEV_usage-0>*<？section/KEV_usage-1>*<？section/KEV_usage-2>*<？section/KEV_usage-3>|
.+\.html?	<section>@E <h3 id="KEV_usage-@c"><？title/KEV_usage-@c></h3>@E<＃contents/KEV_usage-@c>@E</section>@E
.*	@E<？title/KEV_usage-@c>@E@E<＃contents/KEV_usage-@c>@E
|<？section/KEV_usage-0>*<？section/KEV_usage-1>*<？section/KEV_usage-2>*<？section/KEV_usage-3>]

[<＃contents/KEV_usage-0>|
<？Pcenter><？index/KEV_usage:capture><？BR><？/PP> 「.vimrc」ファイルに起動コマンド「:KEV」を設置する方法で解説します。<？BR>
<？/PP>
「<？https/kanmap.tsv>」と「<？https/kanchar.tsv>」を「<？https/kanedit.vim>」と同じフォルダに入れて置きます。<？BR>
Vimのメニューから「編集」→「起動時の設定」で「.vimrc」ファイルが開きます&#40;作成できます&#41;。<？BR>
「command KEVtsf  :source &#40;KEVインストール先フォルダ&#41;/kanedit.vim」のような一行を加え保存&#40;Vimのメニューから「ファイル」→「保存」&#41;します。<？BR>
Vim再起動すると「:KEV」コマンドが入力できるようになるはずです([Esc]を何回か連打してから、[:]を押すとコマンドモードに移行)。<？BR>
「:KEV」コマンドで「1(ぬ)」「鍵盤」のメニューが追加されてたらセットアップ完了です&#40;Vimを起動するたび「:KEV」コマンド実行&#41;。<？BR>
[Space]キー2回でモード切替、[Shift]キー押しながら[Space]キー2回で半角スペース入力になります。<？BR>
漢直を停止するには「:call KEVexit()」、再度有効にするには「:call KEVexit()」。<？BR>
<？/PP>
Vim自体の使い方は日本語ドキュメント等で確認してください&#40;英語版はVimのメニューから「ヘルプ」→「概略」「ユーザーマニュアル」「How-toリンク」のいずれか&#41;。<？BR><？/P>

<？https/KEV_usage:vimdoc-ja>

<？P>あと漢直と直接関係けどVimの設定についで追加として、<？BR>
「matchpairs」オプションに全角括弧を設定、全角空白のハイライト指定など。<？BR>
「eol:$」も本当は「eol:&#x21B2;」(&amp;#x21B2;)だけどWindowsだとエラーになるので注意。<？BR><？/P>
<？CODE>
"# 表示設定
set encoding=utf-8                                                      "日本語というか漢字対応
set fileencodings=iso-2022-jp,cp932,sjis,euc-jp,utf-8                   "シフトJISも読める様に
set number                                                              "行番号表示
set title                                                               "編集中ファイル名表示
set showmatch                                                           "対応する括弧を強調
:if has('win32')
  imap <？&lt;>silent<？&gt;> <？&lt;>C-CR<？&gt;> <？&lt;>Esc<？&gt;>|                                           "winで「^[」動作しない
"set matchpairs+=「:」,『:』,（:）,【:】,《:》,〈:〉,［:］,‘:’,“:” "winで全角括弧動作しない
:else
  set matchpairs+=「:」,『:』,（:）,【:】,《:》,〈:〉,［:］,‘:’,“:” "「%」で全角括弧も移動
:endif
syntax on                                                               "コード色分け
set tabstop=4                                                           "インデント4スペース
set smartindent                                                         "オートインデント
set list                                                                "スペースやタブの表示
:if has('win32')
  set listchars=tab:>-,trail:_,eol:$,nbsp:%                             "改行を改行記号代行に
:else
  set listchars=tab:>-,trail:_,eol:$,nbsp:%                             "改行を(U+21b2)に
augroup highlightZenkakuSpace
:endif
highlight ZenkakuSpace guibg=#f0f0f0  "全角空白の設定前にハイライトを事前に作らないとエラーなる
  autocmd!
  autocmd Colorscheme * highlight ZenkakuSpace guibg=#f0f0f0            "全角空白の色を指定
  autocmd VimEnter,WinEnter * match ZenkakuSpace /　/                   "全角空白とは何かを設定
augroup END
set columns=100                                                         "ウィンドウ横幅100
set lines=30                                                            "ウィンドウ縦高30

"# スクリプト実行
autocmd BufNewFile,BufRead *.vim nnoremap <F5> :source % <CR>
autocmd BufNewFile,BufRead *.py nnoremap <F5> :!python % 
autocmd BufNewFile,BufRead *.lua nnoremap <F5> :!lua5.2 % 

"# 漢直設定
command KEVltsv :source /mnt/sda2/github/LTsv10kanedit/LTsv/kanedit.vim "漢直(入力&検索)
command KEVtsf  :source /mnt/sda2/github/TSF1KEV/kanedit.vim            "漢直(入力&検索)<？/CODE>
|<＃contents/KEV_usage-0>]
[<？index/KEV_usage:capture>|
.+\.html?	<img src="KEV_512x384.png" width="512" height="384" alt="KEV"><br />
.*	
|<？index/KEV_usage:capture>]
[<？https/KEV_usage:vimdoc-ja>|
:<＄web/License-0>	help - Vim日本語ドキュメント
:<＄url/License-0>	http://vim-jp.org/vimdoc-ja/
.+\.html?	<dl><dt><＄web/License-@c></dt><dd><a href="<＄url/License-@c>" title="<＄web/License-@c>"><＄url/License-@c></a></dd></dl>
.*	   <＄web/License-@c><？BR>@E   <＄url/License-@c><？BR>
|<？https/KEV_usage:vimdoc-ja>]

[<＃contents/KEV_usage-1>|
<？P> Vimのマップ機能を用いて漢直を実装しています。マップ等の設定変更は[Space]キーから始まるコマンド入力を使います。<？BR>
<？/P>
<？DLDT>  [1(ぬ)〜&#92;(ろ)]<？/DTDD>                          通常ひらがな鍵盤の文字入力、もしくは1文字検索。後述の鍵盤切替コマンドでカタカナ入力も可能。<？BR><？/DD/DL>
<？DLDT>  [Space],[Space]<？/DTDD>                             ノーマルモードと挿入モードを切り替えます。通常は[i(に)]で挿入モード移行、[Esc]か[Ctrl]+[[(゜)]でノーマルモード移行。<？BR><？/DD/DL>
<？DLDT>  [Space]…<？/DTDD>                                   [Space]キー入力後のコマンド入力が遅れると普通に半角スペースが入力されます。<？BR><？/DD/DL>
<？DLDT>  [Space],[1(ぬ)〜&#92;(ろ)]<？/DTDD>                  入力鍵盤を切り替え、もしくは字引入力辞書の変更をします。同じ鍵盤を2回選択するとひらがなカタカナの入れ替えです。<？BR><？/DD/DL>
<？DLDT>  [Space],[Enter]<？/DTDD>                             「/前方1文字検索」モードです。漢直検索できます。解除は再度[Space],[Enter]。<？BR><？/DD/DL>
<？DLDT>  [Space],[Tab]<？/DTDD>                               「?後方1文字検索」モードです。漢直検索できます。解除は再度[Space],[Tab]。<？BR><？/DD/DL>
<？DLDT>  [Space],[Del]<？/DTDD>                              「σ」鍵盤に切り替えます。1文字検索モード、辞書メニュー、字引入力、カタカナ鍵盤も解除されます。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [h(く)][j(ま)][k(の)][l(り)]<？/DTDD>     hjklカーソル移動です。移動後即座に挿入モードに戻るので、挿入モードでカーソル移動してる錯覚を味わえます。<？BR>
                                              (元々Vim以外のエディタでhjkl移動可能にする機能が操作の互換性でVim版にも搭載というか、<？BR>
                                              KEV的には「[Space],[Del]」するより普通に「[Space],[Space]」でVimのノーマルモード使う方が速くて機能も豊富かと)<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [;(れ)]<？/DTDD>                          [BS]入力というかカーソルの左が1文字消去されます。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [:(け)]<？/DTDD>                          [Del]入力というかカーソルの右が1文字消去されます。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [](む)]<？/DTDD>                          [Enter]入力というか改行が入力されます。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [,(ね)]<？/DTDD>                          [Home]入力というか行頭にカーソル移動です。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [.(る)]<？/DTDD>                          [End]入力というか行末にカーソル移動です。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [/(め)]<？/DTDD>                          [PageUp]入力というか1画面文頭にスクロールです。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [&#92;(ろ)]<？/DTDD>                      [PageDown]入力というか1画面文末にスクロールです。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [a(ち)]<？/DTDD>                          テキスト全選択です。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [z(つ)]<？/DTDD>                          一手前に戻します。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [o(ら)]<？/DTDD>                          ファイル履歴などからファイルを開きます。マウスが使えるかのようなメッセージがでますが、番号がズレる場合があり危険なので数値入力してください。<？BR><？/DD/DL>
<？DLDT> 「σ」鍵盤で [s(て)]<？/DTDD>                          ファイルを保存します。<？BR><？/DD/DL>
<？DLDT>  [Space],[BS]<？/DTDD>                                「鍵盤」と「辞書」を入れ替え。ひらがなカタカナの入れ替えではなく[1(ぬ)〜&#92;(ろ)]と[1(ヌ):名〜,(ネ):照]およびα鍵盤等との交換です。辞書の解除は再度同じ辞書の選択。<？BR><？/DD/DL>
|<＃contents/KEV_usage-1>]

[<＃contents/KEV_usage-2>|
<？P> [Shift]キーを併用する事で入れ替え動作などをショートカットすることができます。<？BR>
<？/P>
<？DLDT>  [Shift]+[Space],[Shift]+[Space]<？/DTDD>             [Shift]キー押しながら[Space]キー2回で半角スペースを入力します。<？BR><？/DD/DL>
<？DLDT>  [Shift]+[Space],[Space]<？/DTDD>                     [Shift]キー押しながら[Space]キー2回の時、2回目の[Shift]キーを離すと全角スペースも入力できます。<？BR><？/DD/DL>
<？DLDT>  [Space],[Shift]+[Space]<？/DTDD>                     [Shift]キーを押さずに[Space]キー押してから[Shift]キーを押しながら[Space]でタブ文字も入力できます。<？BR>
                                              インデント処理が半角スペース状態でも別途タブ文字欲しい時便利。<？BR><？/DD/DL>
<？DLDT>  [Shift]+[1(ヌ)〜&#92;(ロ)]<？/DTDD>                  [Shift]キーを組み合わせる事で先述の鍵盤切替コマンドをショートカットしてカタカナ入力することも可能です。<？BR><？/DD/DL>
<？DLDT>  [Shift]+[Space],[Shift]+[1(ヌ)〜&#92;(ロ)]<？/DTDD>  [Shift]キーを組み合わせる事で先述の「鍵盤」と「辞書」の入れ替えコマンドをショートカットして辞書の選択解除も可能です。<？BR><？/DD/DL>
<？DLDT>  [Shift]+[Space],[Shift]+[BS]<？/DTDD>                「[1(ヌ)]」鍵盤と「[[(ぷ)]」鍵盤を入れ替え。これにより[Shift]がひらがなカタカナ切替から静音濁音の切り替えに変化。入れ替え中は「[1(ゔ)]」鍵盤と「[[(ヴ)]」鍵盤が出現。<？BR><？/DD/DL>
|<＃contents/KEV_usage-2>]

[<＃contents/KEV_usage-3>|
<？DLDT>  [1(ヌ):名]<？/DTDD>  文字の名称(日本語)を字引。<？BR>
              「名〜⇔波ダッシュ」「名～⇔チルダ(全角)」「名∼⇔ランダウの記号」「名醤⇔波ダッシュ」「＃⇔ナンバーサイン(全角)」「♯⇔シャープ」。<？BR><？/DD/DL>
<？DLDT>  [2(フ):音]<？/DTDD>  漢字の音読みを字引。原子記号だとカタカナを字引。<？BR>
              「音醤⇔ショウ/ジャン」「音銅⇔コッパー」。<？BR><？/DD/DL>
<？DLDT>  [3(ア):訓]<？/DTDD>  漢字の訓読みを字引。原子記号だと音訓両方を字引。<？BR>
              「訓醤⇔ひしお」「訓銅⇔ドウ/あかがね」。<？BR><？/DD/DL>
<？DLDT>  [4(ウ):送]<？/DTDD>  漢字の送り仮名を字引。<？BR>
              「送醤⇔醤油/豆板醤/醤酢」「送止⇔制止/差し止める/急に止まる/行き止まり/滑り止め/思い止まる/鳴り止む」。<？BR><？/DD/DL>
<？DLDT>  [5(エ):異]<？/DTDD>  異体字や俗字や略字や通用や大字などを表示。<？BR>
              「異壷⇔壺」「異青⇔靑」「異鼠⇔鼡」「異觜⇔嘴」「異七⇔漆」「異百⇔陌」「異晦⇔卅」。<？BR><？/DD/DL>
<？DLDT>  [6(オ):俗]<？/DTDD>  英語等の当て字や送り仮名だけでは説明不足になりそうな使用例・例文などを字引。<？BR>
              「俗金⇔Au」「俗円⇔丸/￥/JPY」「俗鯖⇔server」「俗𡚴⇔妛→𡚴/木通/通草」。<？BR><？/DD/DL>
<？DLDT>  [7(ヤ):簡]<？/DTDD>  中国およびシンガポ—ルやマレ—シアなどの簡体字を字引。<？BR>
              「簡氣⇔气」「簡範⇔笵」。<？BR><？/DD/DL>
<？DLDT>  [8(ユ):繁]<？/DTDD>  中国および台湾や香港などの繁体字(正体字)を字引。<？BR>
              「繁气⇔氣」「繁笵⇔範」。<？BR><？/DD/DL>
<？DLDT>  [9(ヨ):越]<？/DTDD>  ベトナム(越南)のチュノム(字喃)を字引。<？BR>
              「越頗⇔<？contents/pho>」<？BR><？/DD/DL>
<？DLDT>  [0(ワ):地]<？/DTDD>  国名や地名や名字などを字引。<？BR>
              「国日⇔日本」「国米⇔亜米利加」「国英⇔英吉利西」「国中⇔中華人民共和国」「国台⇔台湾」「国香⇔香港」「国澳⇔澳門」「国蒙⇔蒙古」「国蔵⇔西蔵」「国越⇔越南」。<？BR><？/DD/DL>
<？DLDT>  [-(ホ):逆]<？/DTDD>  反対の意味の漢字を字引。全角ではないという意味で半角ｶﾀｶﾅ等の入力にも流用。<？BR>
              「逆暖⇔涼」「逆温⇔冷」「逆カ⇔ｶ」。<？BR><？/DD/DL>
<？DLDT>  [^(ヘ):非]<？/DTDD>  似て非なる意味の漢字を字引。<？BR>
              「非描⇔書」("絵を描く"と"文章を書く"の違い)「非喩⇔例」("比喩表現"と"実例"の違い)「非熔⇔溶」("液状に熔解"と"液体へ溶融"の違い)。<？BR><？/DD/DL>
<？DLDT>  [Q(タ):英]<？/DTDD>  文字の名称(英語)を字引。もしくは漢字の英訳などを字引(和英)。<？BR>
              「英金⇔gold」「英円⇔circle/round/yen」「英鯖⇔mackerel」。<？BR><？/DD/DL>
<？DLDT>  [W(テ):顔]<？/DTDD>  顔文字や１行AAや絵文字を字引。都道府県アイコンも。<？BR>
              「顔二⇔2get ｽﾞｻｰc⌒っﾟДﾟ)っ」「д⇔(ﾟдﾟ)」。「顔東⇔<？contents/tokyoicon>」。<？BR><？/DD/DL>
<？DLDT>  [;(レ):代]<？/DTDD>  濁音半濁音拗音促音入力補佐やロシア語以外のキリル文字など、似た文字での代用による字引入力。麻雀牌も。<？BR>
              「代つ⇔づ」「代に⇔っ」「代么⇔幺」「代算⇔Computer」「代算⇔Computer」。「代東⇔<？contents/tonhaiicon>」。<？BR><？/DD/DL>
<？DLDT>  [:(ケ):鍵]<？/DTDD>  基本ユーザーの自由だけど特殊な入力が必要になった時用の拡張確保項目。<？BR><？/DD/DL>
<？DLDT>  [,(ネ):照]<？/DTDD>  HTMLの文字参照。辞書に無い文字は数値文字参照で補う。<？BR><？/DD/DL>
|<＃contents/KEV_usage-3>]
[<？contents/tokyoicon>*<？contents/tonhaiicon>*<？contents/pho>|
:<＄icon-0>	&#61580;
:<＄icon-1>	&#126976;
:<＄icon-2>	&#181694;
.+\.html?	<span class="kan5x5comic"><＄icon-@c></span>
.*	<＄icon-@c>
|<？contents/tokyoicon>*<？contents/tonhaiicon>*<？contents/pho>]

[<？section/KEV-0>|
.+\.html?	<section>@E <h3 id="KEV-@c"><？title/KEV-@c></h3>@E<＃contents/KEV-@c>@E</section>@E
.*	@E<？title/KEV-@c>@E@E<＃contents/KEV-@c>@E
|<？section/KEV-0>]

[<＃contents/KEV-0>|
<！kanedit.vim>
|<＃contents/KEV-0>]
[kanedit.vim|
KEVsetup()	「KanEditVim」の初期化初期設定(imap等含む)。
s:KEVfilereadable(TSFfilepath,TSVfilepath)	辞書等の存在チェック。漢字配列「<？https/kanmap.tsv>」と単漢字辞書「<？https/kanchar.tsv>」は「<？https/kanedit.vim>」と同じフォルダに。	LTsv版と互換性持たせるため「.tsf」と「.tsv」の両ファイルの有無を調べる。
KEVimap(kankbd_kbdchar)	「[Space],[1(ぬ)〜&#92;(ろ)]」等のコマンド入力で鍵盤(imap等)変更。「[Space],[Enter]」「[Space],[Tab]」で一文字検索モード。
KEVdicmenu(menuname)	鍵盤と辞書を並び替える時のメニュー書き替えなどの処理。
KEVfiler()	「σ」鍵盤で [o(ら)]が押された時に履歴などからファイルを開く簡易ファイラー。
KEVexit()	「KanEditVim」の終了。imap等マップ関連の撤去やメニューの撤去処理。
|kanedit.vim]

[<？section/KEV_faq-0>|
.+\.html?	<section>@E <h3 id="KEV_faq-@c"><？title/KEV_faq-@c></h3>@E<＃contents/KEV_faq-@c>@E</section>@E
.*	@E<？title/KEV_faq-@c>@E@E<＃contents/KEV_faq-@c>@E
|<？section/KEV_faq-0>]

[<＃contents/KEV_faq-0>|
<？DLDTfaq> Ｑ．「鍵盤」なのに辞書変更やα鍵盤変更など逆の動きをする。<？/DTDD>
 Ａ．[CapsLock]がON状態になってると[Shift]が押されっぱなしのような動きになると思います。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．汎用辞書「kanword.tsv」が認識されない。<？/DTDD>
 Ａ．Vim版では<？DICword>は未サポートです。汎用辞書は漢直の対象外だからです。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．<？DICzip>が認識されない。<？/DTDD>
 Ａ．Vim版では<？DICzip>は未サポートです。郵便番号は漢直の対象外だからです。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．「[@(＠)][@(｀)][[(ぷ)][[(プ)]」表記に違和感。全角アットマーク記号は「Λ」鍵盤だし「ぷ」じゃなく「゜」を使うべき。<？/DTDD>
 Ａ．半濁音そのものにひらがなかたかなの区別が無いので「Ｐまみむめも⇔ぱぴぷぺぽ」理論で「む」の半濁音扱いの「ぷ」表記をする場合もあります。<？BR>
     「Ｐ」コマンドの詳細は「kanedit」の「<？index/LTsv_glyph-4>」を参考。<？BR>
     全角アットマークの「＠」は他のひらがなカタカナも全角なので文字の幅を揃える目的。<？BR>
<？/DD/DL>
<？DLDTfaq> Ｑ．都道府県国名の解説の「地北⇔北海道」みたいなのはどういう入力ですか？<？/DTDD>
 Ａ．「⇔」記号の方は漢直ではなく漢字逆引きなど「電卓」の機能です。<？BR>
     [NFER]+[G(き)],[KANA]+[Q(た)]の字引入力で直接「北海道」が入力できるはずです。<？BR>
     Vim版では「電卓」機能は未サポートです。<？BR>
     <？VReval/howto><？BR><？/DD/DL>
|<＃contents/KEV_faq-0>]
[<？VRkeyboard/howto>|
.*	<？VRkeyboard>の入力操作は「<？index/LTsv_glyph-2>」を参考。
|<？VRkeyboard/howto>]
[<？VRcalc/howto>|
.*	<？VRcalc>の入力操作は「<？index/LTsv_glyph-3>」を参考。
|<？VRcalc/howto>]
[<？VReval/howto>|
.*	<？VRcalc>の演算結果は「<？index/LTsv_glyph-4>」を参考。
|<？VReval/howto>]

[<？section/KEV_interpret-0>*<？section/KEV_interpret-1>*<？section/KEV_interpret-2>*<？section/KEV_interpret-3>*<？section/KEV_interpret-4>|
.+\.html?	<section>@E <h3 id="KEV_interpret-@c"><？title/KEV_interpret-@c></h3>@E<＃contents/KEV_interpret-@c>@E</section>@E
.*	@E<？title/KEV_interpret-@c>@E@E<＃contents/KEV_interpret-@c>@E
|<？section/KEV_interpret-0>*<？section/KEV_interpret-1>*<？section/KEV_interpret-2>*<？section/KEV_interpret-3>*<？section/KEV_interpret-4>]

[<＃contents/KEV_interpret-0>|
<？P> 漢字を音読み訓読みなど理由を付けて<？VRkeyboard>の[1(ぬ)〜\(ろ)][1(ヌ)〜&#92;(ロ)]などに配置するのですが、普通に考えると例えば[か]に入りきらない場合などあります。<？BR>
 そこで入りきらない文字を「相席」というレトリックで分散しています。<？BR>
<？/P>
<？DLDTinputstroke>  「[1(ぬ)]」<？/DTDD>   ひらがな鍵盤だけど「沼」「濡」を相席。<？/DD/DL>
<？DLDTinputstroke>  「[1(ヌ)]」<？/DTDD>   カタカナ鍵盤だけど「糠」「鵺」を相席。<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」<？/DTDD>   記号XOR(⊕)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[5(エ)]」<？/DTDD>   [3(あ)]に入り切らなかった「あ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[7(や)]」<？/DTDD>   矢印(⇔⇒←→↑↓)を相席。や行え(𛀁)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」<？/DTDD>   [D(し)]に入り切らなかった'しゃ'読みの漢字を相席。記号(￢￣∈∋⊆⊇⊂⊃∪∩)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[8(ゆ)]」<？/DTDD>   ユーロ記号(€)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」<？/DTDD>   [D(し)]に入り切らなかった「しゅ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」<？/DTDD>   [D(し)]に入り切らなかった「しょ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[0(ワ)]」<？/DTDD>   [D(し)]に入り切らなかった「しょ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[^(へ)]」<？/DTDD>   [-(ほ)]に入り切らなかった「ほ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[^(ヘ)]」<？/DTDD>   [Q(た)]に入り切らなかった「た」読みの漢字を相席。丸数字(⓪①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳)と二重丸(◎)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[W(テ)]」<？/DTDD>   [Q(た)]に入り切らなかった「た」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」<？/DTDD>   [T(か)]に入り切らなかった「か」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」<？/DTDD>   [T(か)]に入り切らなかった「か」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」<？/DTDD>   [T(か)]に入り切らなかった「か」読みの漢字を相席。性別記号(♂♀)と虹を表す漢字(虹霓蜺蝃螮蝀)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」<？/DTDD>   [U(な)]に入り切らなかった「な」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」<？/DTDD>   [S(と)]に入り切らなかった「と」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」<？/DTDD>   括弧(【】≪≫〔〕〈〉《》)と音楽記号(♮♯♭♪)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」<？/DTDD>   [D(し)]に入り切らなかった'し'読みの漢字を相席。締め記号(〆)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」<？/DTDD>   摂氏セルシウス度(°℃)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[{(ぷ)]」<？/DTDD>   濁音ひらがな。濁音(゛)半濁音(゜)を相席。三点リーダー(…)と「かぎ括弧」と波ダッシュ(〜)を相席。う濁音(ゔ)が使用可能。<？/DD/DL>
<？DLDTinputstroke>  「[{(プ)]」<？/DTDD>   濁音カタカナ。濁音(゛)半濁音(゜)を相席。中黒(・)と『二重かぎ括弧』と長音符(〜)を相席。を相席。<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」<？/DTDD>   短剣符(†)と段落記号(¶)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」<？/DTDD>   二重短剣符(‡)と節記号(§)を相席。(練鍊煉)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[H(ク)]」<？/DTDD>   "くぬぎ"と読む漢字(椚橡栩椢椪椡檪櫪桾檞㓛)を相席。「檪」は「櫟」で字引。㓛は「㓛刀」と書いて"くぬぎ"。<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」<？/DTDD>   [F(は)]に入り切らなかった「は」読みの漢字を相席。華氏ファーレンハイト度(℉)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」<？/DTDD>   [F(は)]に入り切らなかった「は」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[;(れ)]」<？/DTDD>   記号(∠∟⊥⌒∫∬∴∵∽∝∞∨∧∀￤)を相席。「令岭玲怜伶鈴」を固める感覚で「亨惇淳諄享」も相席。<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」<？/DTDD>   [G(き)]に入り切らなかった「き」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[](む)]」<？/DTDD>   全角キリル小文字(абвгдеёжзийклмнопрстуфхцчшщъыьэюя)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[](ム)]」<？/DTDD>   全角キリル大文字(АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」<？/DTDD>   [X(さ)]に入り切らなかった「さ」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」<？/DTDD>   [C(そ)]に入り切らなかった「そ」読みの漢字を相席。記号(′″‘’“”‐〓∃∂∇Å)と通貨単位(￠￡)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[,(ね)]」<？/DTDD>   演算記号(±×÷≡≒≠≦≧√‰‱)を相席。nauticalmile海里(浬)を相席、ついでにマイル(哩)も相席。ついでにインチ・フィート・ヤード(吋呎碼)も相席。質量のポンド(听)も相席。<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」<？/DTDD>   [V(ひ)]に入り切らなかった「ひ」読みの漢字を相席。著作権表示記号(©®℗™℠)の記号を相席<？/DD/DL>
<？DLDTinputstroke>  「[.(る)]」<？/DTDD>   罫線(├┼┤┣╋┫)と記号(☆★○●◇◆□■△▲▽▼◎※)と郵便マーク(〒)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」<？/DTDD>   [B(こ)]に入り切らなかった「こ」読みの漢字を相席。ルーブル記号(₽)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[?(め)]」<？/DTDD>   [.(る)]に入り切らなかった「る」読みの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[?(メ)]」<？/DTDD>   漢数字(〇一二三四五六七八九十百千万億兆京垓𥝱零分厘毛)やメートル(米)グラム(瓦)リットル(立)などの漢字を相席。<？/DD/DL>
<？DLDTinputstroke>  「[_(ろ)]」<？/DTDD>   全角ギリシャ小文字(αβγδεζηθικλμνξοπρστυφχψω)文字とローマ数字(ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[_(ロ)]」<？/DTDD>   全角ギリシャ大文字(ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ)文字と大字(壱弐参肆伍陸漆捌玖拾佰仟萬)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席。出現順番が未定義。<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席。出現順番が未定義。<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席。出現順番が未定義。「￥」鍵盤廃止の関係で「埠痰蛎韓璽蹟嫡鴇蛤恷籤俎藩倦叢捧其」を一時退避。<？/DD/DL>
<？DLDTinputstroke>  「[B(Β)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席。出現順番が未定義。<？/DD/DL>
<？DLDTinputstroke>  「[G(γ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。<？/DD/DL>
<？DLDTinputstroke>  「[G(Γ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。<？/DD/DL>
<？DLDTinputstroke>  「[D(δ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。<？/DD/DL>
<？DLDTinputstroke>  「[D(Δ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。<？/DD/DL>
<？DLDTinputstroke>  「[E(ε)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。<？/DD/DL>
<？DLDTinputstroke>  「[E(Ε)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[Z(ζ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[Z(Ζ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[H(η)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[H(Η)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[U(θ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[U(Θ)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[I(ι)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[I(Ι)]」<？/DTDD>   未整理：難読漢字(難読名字とか難読地名など)の相席予定。人名漢字の異体字を字引入力に移行中。<？/DD/DL>
<？DLDTinputstroke>  「[K(κ)]」<？/DTDD>   半角カナ。<？/DD/DL>
<？DLDTinputstroke>  「[K(Κ)]」<？/DTDD>   半角カナ。「ヵ」「ヶ」を相席。円記号「¥(U+00A5)」「￥(U+FFE5)」を相席。二点リーダー(‥)と同の字点(仝々)ノノ字点(〃)と一の字点(ゝヽゞヾ)とダッシュ(―)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[L(λ)]」<？/DTDD>   全角アルファベットなど。半角アルファベットの「[@(｀)]」とほぼ同じ。<？/DD/DL>
<？DLDTinputstroke>  「[L(Λ)]」<？/DTDD>   全角アルファベットなど。ダブルクォート「＂(U+ff02)」を相席。<？/DD/DL>
<？DLDTinputstroke>  「[M(μ)]」<？/DTDD>   康熙部首専用コード(⼀〜⼮)。<？/DD/DL>
<？DLDTinputstroke>  「[M(Μ)]」<？/DTDD>   康熙部首専用コード(⼯〜⽝)。<？/DD/DL>
<？DLDTinputstroke>  「[J(ξ)]」<？/DTDD>   康熙部首専用コード(⾼〜⿕)。康熙部首コード以外の偏旁冠脚構垂繞。(乀〜冖)。「熙」と「偏旁冠脚構垂繞」を相席。<？/DD/DL>
<？DLDTinputstroke>  「[J(Ξ)]」<？/DTDD>   康熙部首コード以外の偏旁冠脚構垂繞(冫〜氺)。<？/DD/DL>
<？DLDTinputstroke>  「[O(ο)]」<？/DTDD>   康熙部首コード以外の偏旁冠脚構垂繞(灬〜辶)。<？/DD/DL>
<？DLDTinputstroke>  「[O(Ο)]」<？/DTDD>   康熙部首コード以外の偏旁冠脚構垂繞(阝〜龠)。漢字が３つ(㐂厵刕驫垚畾矗飍猋孨芔鑫卉惢劦众姦)の仮置き。<？/DD/DL>
<？DLDTinputstroke>  「[P(π)]」<？/DTDD>   元素の中国語(氫〜銀)。<？/DD/DL>
<？DLDTinputstroke>  「[P(Π)]」<？/DTDD>   元素の中国語(鎘〜鈽)。<？/DD/DL>
<？DLDTinputstroke>  「[R(ρ)]」<？/DTDD>   元素の中国語(鋂〜鎶)。<？/DD/DL>
<？DLDTinputstroke>  「[R(Ρ)]」<？/DTDD>   「なんだかとっても！いいかんじ」の「閄」など。<？/DD/DL>
<？DLDTinputstroke>  「[S(σ)]」<？/DTDD>   「HJKL」といったカーソル移動や「ZXCVS」といったショートカットなどのキーバインド。斜め矢印など一部絵文字(✖🎮↖↗↘↙♠♥♦♣)を相席。<？/DD/DL>
<？DLDTinputstroke>  「[S(Σ)]」<？/DTDD>   分数電卓(＋+－-×*÷/#|)。10進数16進数変換(⑩⑯)も相席。「平片半全大小清濁」といった文字置換、時刻取得「今干」コマンドも相席。<？/DD/DL>
<？DLDTinputstroke>  「[T(τ)]」<？/DTDD>   Dvorak配列風。<？/DD/DL>
<？DLDTinputstroke>  「[T(Τ)]」<？/DTDD>   Dvorak配列風。<？/DD/DL>
<？DLDTinputstroke>  「[Y(υ)]」<？/DTDD>   xvkbd-germanアレンジ(QWERTZ配列風)。<？/DD/DL>
<？DLDTinputstroke>  「[Y(Υ)]」<？/DTDD>   xvkbd-germanアレンジ(QWERTZ配列風)。<？/DD/DL>
<？DLDTinputstroke>  「[F(φ)]」<？/DTDD>   xvkbd-french1アレンジ(AZERTY配列風)。<？/DD/DL>
<？DLDTinputstroke>  「[F(Φ)]」<？/DTDD>   xvkbd-french1アレンジ(AZERTY配列風)。<？/DD/DL>
<？DLDTinputstroke>  「[X(χ)]」<？/DTDD>   xvkbd-RussianALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[X(Χ)]」<？/DTDD>   xvkbd-RussianALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[C(ψ)]」<？/DTDD>   xvkbd-latin1ALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[C(Ψ)]」<？/DTDD>   xvkbd-latin1ALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[V(ω)]」<？/DTDD>   xvkbd-french2ALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[V(Ω)]」<？/DTDD>   xvkbd-french2ALTアレンジ。<？/DD/DL>
<？DLDTinputstroke>  「[.(○)]」<？/DTDD>   base64風6点字(一般的な点字とは異なります)。「a⠁ b⠂ c⠃ d⠄ e⠅ f⠆ g⠇ h⠈ i⠉ j⠊ k⠋ l⠌ m⠍ n⠎ o⠏ p⠐ q⠑ r⠒ s⠓ t⠔ u⠕ v⠖ w⠗ x⠘ y⠙ z⠚ 0⠵ 1⠶ 2⠷ 3⠸ 4⠹ 5⠺ 6⠻ 7⠼ 8⠽ 9⠾ .⠿ _⠀」。<？/DD/DL>
<？DLDTinputstroke>  「[.(●)]」<？/DTDD>   base64風6点字(一般的な点字とは異なります)。「A⠛ B⠜ C⠝ D⠞ E⠟ F⠠ G⠡ H⠢ I⠣ J⠤ K⠥ L⠦ M⠧ N⠨ O⠩ P⠪ Q⠫ R⠬ S⠭ T⠮ U⠯ V⠰ W⠱ X⠲ Y⠳ Z⠴」。UTF-8点字変換「⑧⓪」コマンドも相席。<？BR>
                「⑧⓪」コマンドの詳細は「<？index/LTsv_glyph-4>」を参照。<？/DD/DL>
<？DLDTinputstroke>  「[/(△)]」<？/DTDD>   UTF-8点字(⡀〜⡮)。<？/DD/DL>
<？DLDTinputstroke>  「[/(▲)]」<？/DTDD>   UTF-8点字(⡰〜⢞)。<？/DD/DL>
<？DLDTinputstroke>  「[_(□)]」<？/DTDD>   UTF-8点字(⢠〜⣎)。<？/DD/DL>
<？DLDTinputstroke>  「[_(■)]」<？/DTDD>   UTF-8点字(⣐〜⣾)。<？/DD/DL>

<？DLDTfaq> Ｑ．α鍵盤の説明にあるxvkbdって何。<？/DTDD>
 Ａ．X Window System 用仮想キーボードというものがあります。 QWERTZやAZERTYなどキーボードのレイアウトはxvkbdを参考にしました。<？BR>
     JISキーボード(109キーボード)を想定してるので配置は多少アレンジしてます。<？BR>
<？/DD/DL>
<？https/kanedit_faq:xvkbd>

<？DLDTfaq> Ｑ．葛城と葛飾で「葛」が同じ字だ。<？/DTDD>
 Ａ．異体字セレクタで切り替えなのですが、サロゲートペアとか結合文字列とか１文字を１コードポイントで表現できない系は「<？https/LTsv_glyph.py>」で扱わない予定です。<？BR>
<？/DD/DL>
<？https/kanedit_faq:IVS>

<？https/kanedit_faq:MaxOSX>

<？DLDTinputstroke>     「[Y(ン)]」[Z(ツ)][X(サ)]<？/DTDD>             「葛飾(かつしか)」<？/DD/DL>
<？DLDTinputstroke>     「[D(シ)]」[/(メ)][_(ロ)]<？/DTDD>             「葛城(かつらぎ)」<？/DD/DL>

<？DLDTfaq> Ｑ．「咖」も２つあったよー。<？/DTDD>
 Ａ．コーヒー(珈琲/咖啡)が２通りあったので相席の都合でカレー(咖喱)と重複。<？BR>
<？/DD/DL>
<？DLDTinputstroke>     「[V(ひ)]」[1(ぬ)][2(ふ)]<？/DTDD>             「咖啡(コーヒー)」<？/DD/DL>
<？DLDTinputstroke>     「[V(ヒ)]」[1(ヌ)][2(フ)]<？/DTDD>             「珈琲(コーヒー)」<？/DD/DL>
<？DLDTinputstroke>     「[T(か)]」[_(ろ)][_(ロ)]<？/DTDD>             「咖喱(カレー)」<？/DD/DL>

<？DLDTfaq> Ｑ．「煉」はあるけど「練」と「錬」が見つからない。<？/DTDD>
 Ａ．「煉」は「火柬」なので「練」も「糸柬」だし「鍊」も「金柬」。古いフォントだと「煉」が「火東」になってる。<？BR>
     「練(糸東)」「錬(金東)」の入力は「異」で字引入力。
<？/DD/DL>
<？https/kanedit_faq:糸+柬>

<？https/kanedit_faq:魚+柬>

<？https/kanedit_faq:柬>

<？DLDTinputstroke>     「[,(ね)]」[P(せ):異]<？/DTDD>                 「異練⇔練」<？/DD/DL>
<？DLDTinputstroke>     「[,(ね)]」[L(り):異]<？/DTDD>                 「異鍊⇔錬」<？/DD/DL>
<？DLDTinputstroke>     「[,(ね)]」[;(れ)]<？/DTDD>                    「煉」<？/DD/DL>
<？DLDTinputstroke>     「E(イ)」[/(メ)]<？/DTDD>                      「諫」<？/DD/DL>
<？DLDTinputstroke>     「[I(ニ)]」[D(シ)]<？/DTDD>                    「鰊」<？/DD/DL>
|<＃contents/KEV_interpret-0>]

[<？https/kanedit_faq:IVS>*<？https/kanedit_faq:MaxOSX>*<？https/kanedit_faq:糸+柬>*<？https/kanedit_faq:魚+柬>*<？https/kanedit_faq:柬>*<？https/kanedit_faq:xvkbd>*<？https/kanedit_faq:TSF1KEV>|
:<＄web/kanedit_faq-0>	異体字セレクタ - Wikipedia
:<＄url/kanedit_faq-0>	https://ja.wikipedia.org/wiki/%E7%95%B0%E4%BD%93%E5%AD%97%E3%82%BB%E3%83%AC%E3%82%AF%E3%82%BF
:<＄web/kanedit_faq-1>	文字って何かね？ - Qiita
:<＄url/kanedit_faq-1>	http://qiita.com/matarillo/items/91b9656428bed7a1a797
:<＄web/kanedit_faq-2>	中国語「練」と「東」の違い 「练」と「东」 - 文字化けしてませんか？「练」と「东」は明朝体で書くと、「東」の字が違います。 - Yahoo!知恵袋(2004年のJIS改正で[火東]は[火柬]に戻されました。)
:<＄url/kanedit_faq-2>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1135243926
:<＄web/kanedit_faq-3>	「鰊」（魚+柬）と「鯟」（魚+東）ニシンという漢字ですが、どちらが正字ですか？ もしくは、別字ですか？ - Yahoo!知恵袋(「鯟」（魚+東） は別字です。音「トウ」、鯉に似た魚)
:<＄url/kanedit_faq-3>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1313900818
:<＄web/kanedit_faq-4>	漢字の成り立ち 柬: 風船あられの漢字ブログ
:<＄url/kanedit_faq-4>	http://huusennarare.cocolog-nifty.com/blog/2015/07/post-0eb0.html
:<＄web/kanedit_faq-5>	xvkbd - Virtual Keyboard for X Window System
:<＄url/kanedit_faq-5>	http://t-sato.in.coocan.jp/xvkbd/index-j.html
:<＄web/kanedit_faq-6>	プログラミング言語「TSF_Tab-Separated-Forth」開発予定。
:<＄url/kanedit_faq-6>	https://github.com/ooblog/TSF1KEV
.+\.html?	<dl class="faqlink"><dt><＄web/kanedit_faq-@c></dt><dd><a href="<＄url/kanedit_faq-@c>" title="<＄web/kanedit_faq-@c>"><＄url/kanedit_faq-@c></a></dd></dl>
.*	     <＄web/kanedit_faq-@c><？BR>@E     <＄url/kanedit_faq-@c><？BR>
|<？https/kanedit_faq:IVS>*<？https/kanedit_faq:MaxOSX>*<？https/kanedit_faq:糸+柬>*<？https/kanedit_faq:魚+柬>*<？https/kanedit_faq:柬>*<？https/kanedit_faq:xvkbd>*<？https/kanedit_faq:TSF1KEV>]

[<＃contents/KEV_interpret-1>|
<？P> 熟語は隣接してると便利で覚えやすいという理屈で音読み訓読みの枠を飛び地します。<？BR>
<？/P>
<？DLDTinputstroke>  「[2(ふ)]」[^(へ)][^(ヘ)]<？/DTDD>                「茯苓(ぶくりょう)」<？/DD/DL>
<？DLDTinputstroke>  「[2(ふ)]」[J(ま)][K(の)]<？/DTDD>                「福祉(ふくし)」<？/DD/DL>
<？DLDTinputstroke>  「[2(ふ)]」[G(き)][G(キ)]<？/DTDD>                「蕗薹(ふきのとう)」<？/DD/DL>
<？DLDTinputstroke>  「[2(ふ)]」[](む)][](ム)]<？/DTDD>                「踏鞴(たたら)」<？/DD/DL>
<？DLDTinputstroke>  「[2(ふ)]」[Z(つ)][X(さ)]<？/DTDD>                「仏陀(ブッダ)」<？/DD/DL>
<？DLDTinputstroke>  「[2(ふ)]」[V(ひ)][B(こ)]<？/DTDD>                「俯瞰(ふかん)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[3(ア)][3(あ)]<？/DTDD>                「瘋癲(ふうてん/フーテン)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[0(ワ)][-(ホ)]<？/DTDD>                「葡萄(ぶどう)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[A(チ)][S(ト)]<？/DTDD>                「坦懐(たんかい)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[Y(ン)][U(ナ)]<？/DTDD>                「憤慨(ふんがい)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[I(ニ)][O(ラ)]<？/DTDD>                「芙蓉(ふよう)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[@(｀)][[(プ)]<？/DTDD>                「夫婦(ふうふ)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[J(マ)][K(ノ)]<？/DTDD>                「復讐(ふくしゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[;(レ)][:(ケ)]<？/DTDD>                「含羞(がんしゅう/はにかむ含羞むの"はにか")」<？/DD/DL>
<？DLDTinputstroke>  「[2(フ)]」[/(メ)][_(ロ)]<？/DTDD>                「不憫(ふびん)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[9(よ)][9(ヨ)]<？/DTDD>                「曖昧(あいまい)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[-(ほ)][-(ホ)]<？/DTDD>                「躊躇(ちゅうちょ)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[E(い)][R(す)]<？/DTDD>                「愛宕(あたご)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[Y(ん)][Y(ン)]<？/DTDD>                「漉餡(こしあん)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[Y(ん)][Y(ン)]<？/DTDD>                「憧憬(しょうけい/どうけい)」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[_(ろ)][_(ロ)]<？/DTDD>                「蘆薈(ろかい/アロエ)」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[5(エ)][6(オ)]<？/DTDD>                「伽藍(伽藍とバザールの"がらん")」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[@(｀)][[(プ)]<？/DTDD>                「挨拶(あいさつ)」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[I(ニ)][O(ラ)]<？/DTDD>                「改竄(かいざん)」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[K(ノ)][K(の)]<？/DTDD>                「蒐集(しゅうしゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[:(ケ)][](ム)]<？/DTDD>                「昂揚(こうよう)」<？/DD/DL>
<？DLDTinputstroke>  「[3(ア)]」[C(ソ)][V(ヒ)]<？/DTDD>                「沐浴(もくよく)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[5(え)][6(お)]<？/DTDD>                「隈魚(クマノミ)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[-(ほ)][^(へ)]<？/DTDD>                「禰宜(ねぎ)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[H(く)][J(ま)]<？/DTDD>                「驢馬(ロバ)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[P(せ)][@(＠)]<？/DTDD>                「蝸牛(カタツムリ/でんでんむし)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[@(＠)][[(ぷ)]<？/DTDD>                「牛蒡(ごぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[S(と)][D(し)]<？/DTDD>                「饂飩(うどん)」<？/DD/DL>
<？DLDTinputstroke>  「[4(う)]」[N(み)][M(も)]<？/DTDD>                「海蘊(もずく)」<？/DD/DL>
<？DLDTinputstroke>  「[4(ウ)]」[8(ユ)][9(ヨ)]<？/DTDD>                「齲蝕(うしょく)」<？/DD/DL>
<？DLDTinputstroke>  「[4(ウ)]」[S(ト)][D(シ)]<？/DTDD>                「餺飥(ほうとう)」<？/DD/DL>
<？DLDTinputstroke>  「[4(ウ)]」[K(ノ)][L(リ)]<？/DTDD>                「杞憂(きゆう)」<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」[8(ゆ)][9(よ)]<？/DTDD>                「盈虧(えいき)」<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」[0(わ)][-(ほ)]<？/DTDD>                「冤枉(えんおう)」<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」[@(＠)][[(ぷ)]<？/DTDD>                「饗宴(きょうえん)」<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」[L(り)][;(れ)]<？/DTDD>                「襟裳(えりも)」<？/DD/DL>
<？DLDTinputstroke>  「[5(エ)]」[2(フ)][3(ア)]<？/DTDD>                「聾唖(ろうあ)」<？/DD/DL>
<？DLDTinputstroke>  「[5(エ)]」[X(サ)][C(ソ)]<？/DTDD>                「麻疹(はしか)」<？/DD/DL>
<？DLDTinputstroke>  「[5(エ)]」[X(サ)][C(ソ)]<？/DTDD>                「蝦蟇(がまあぶら蝦蟇油の"がま")」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[7(や)][8(ゆ)]<？/DTDD>                「親戚(しんせき)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[W(て)][W(テ)]<？/DTDD>                「男女(だんじょ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[E(い)][E(イ)]<？/DTDD>                「甥姪(せいてつ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[J(ま)][J(マ)]<？/DTDD>                「橄欖(かんらん/オリーブ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[S(と)][D(し)]<？/DTDD>                「驚愕(きょうがく)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[.(る)][/(め)]<？/DTDD>                「鸚鵡(オウム)」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[.(る)][.(ル)]<？/DTDD>                「鸚哥(インコ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「鴛鴦(おしどり)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[Q(タ)][W(テ)]<？/DTDD>                「乙女(おとめ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[R(ス)][R(す)]<？/DTDD>                「雌雄(しゆう)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[@(｀)][[(プ)]<？/DTDD>                「老獪(ろうかい)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[Z(ツ)][Z(つ)]<？/DTDD>                「凹凸(おうとつ)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[N(み)][M(も)]<？/DTDD>                「錘重(すいじゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[6(オ)]」[M(モ)][,(ネ)]<？/DTDD>                「重鎮(じゅうちん)」<？/DD/DL>
<？DLDTinputstroke>  「[7(や)]」[S(と)][S(ト)]<？/DTDD>                「宿泊(しゅくはく)」<？/DD/DL>
<？DLDTinputstroke>  「[7(や)]」[J(ま)][J(マ)]<？/DTDD>                「山車(だし)」<？/DD/DL>
<？DLDTinputstroke>  「[7(や)]」[@(＠)][[(ぷ)]<？/DTDD>                「安易(あんい)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[1(ヌ)][2(フ)]<？/DTDD>                「茉莉(まつり/茉莉花で"ジャスミン")」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[8(ユ)][9(ヨ)]<？/DTDD>                「揶揄(やゆ)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[0(ワ)][-(ホ)]<？/DTDD>                「矩尺(かねじゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[W(テ)][E(イ)]<？/DTDD>                「厩舎(きゅうしゃ)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[T(カ)][Y(ン)]<？/DTDD>                「釈迦(しゃか)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[[(プ)][[(ぷ)]<？/DTDD>                「辟易(へきえき)」<？/DD/DL>
<？DLDTinputstroke>  「[7(ヤ)]」[F(ハ)][G(キ)]<？/DTDD>                「伯爵(はくしゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ゆ)]」[6(お)][7(や)]<？/DTDD>                「綬褒(しじゅほうしょう紫綬褒章などの"じゅほう")」<？/DD/DL>
<？DLDTinputstroke>  「[8(ゆ)]」[Y(ん)][U(な)]<？/DTDD>                「優雅(ゆうが)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ゆ)]」[F(は)][G(き)]<？/DTDD>                「融雪(ゆうせつ)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」[2(フ)][3(ア)]<？/DTDD>                「主宰(しゅさい)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」[1(ヌ)][1(ぬ)]<？/DTDD>                「絨緞(じゅうたん)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」[3(ア)][3(あ)]<？/DTDD>                「醇醴(じゅんれい)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」[K(ノ)][L(リ)]<？/DTDD>                「蹂躙(じゅうりん)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ユ)]」[I(ニ)][I(に)]<？/DTDD>                「収穫(しゅうかく)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[2(ふ)][2(フ)]<？/DTDD>                「余瀝(よれき)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[4(う)][5(え)]<？/DTDD>                「涵養(かんよう)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[6(お)][7(や)]<？/DTDD>                「衒耀(げんよう)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[@(＠)][@(｀)]<？/DTDD>                「羊羹(ようかん)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[](む)][](ム)]<？/DTDD>                「読書(どくしょ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[Z(つ)][X(さ)]<？/DTDD>                「窈窕(ようちょう)」<？/DD/DL>
<？DLDTinputstroke>  「[9(よ)]」[C(そ)][C(ソ)]<？/DTDD>                「醞醸(うんじょう)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[Y(ン)][Y(ん)]<？/DTDD>                「嗚呼(ああ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「醤油(しょうゆ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「情緒(じょうちょ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[F(ハ)][G(キ)]<？/DTDD>                「秩序(ちつじょ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[J(マ)][K(ノ)]<？/DTDD>                「状況(じょうきょう)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[:(ケ)][](ム)]<？/DTDD>                「辞書(じしょ)」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[M(モ)][,(ネ)]<？/DTDD>                「食戟(食戟のソーマの"しょくげき")」<？/DD/DL>
<？DLDTinputstroke>  「[9(ヨ)]」[.(ル)][.(る)]<？/DTDD>                「赫夜(かぐやひめ赫夜姫の"かぐや")」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[J(ま)][K(の)]<？/DTDD>                「我儘(わがまま)」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[J(ま)][J(マ)]<？/DTDD>                「我侭(わがまま)」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[L(り)][;(れ)]<？/DTDD>                「餞別(せんべつ)」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[Z(つ)][Z(ツ)]<？/DTDD>                「猥褻(わいせつ)」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[M(も)][,(ね)]<？/DTDD>                「沸騰(ふっとう)」<？/DD/DL>
<？DLDTinputstroke>  「[0(ワ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「就職(しゅうしょく)」<？/DD/DL>
<？DLDTinputstroke>  「[0(ワ)]」[^(ヘ)][^(へ)]<？/DTDD>                「昭和(しょうわ)」<？/DD/DL>
<？DLDTinputstroke>  「[0(ワ)]」[Y(ン)][U(ナ)]<？/DTDD>                「芭蕉(ばしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[0(ワ)]」[:(ケ)][](ム)]<？/DTDD>                「化粧(けしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[3(あ)][4(う)]<？/DTDD>                「報酬(ほうしゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[7(や)][8(ゆ)]<？/DTDD>                「菠薐(じょうれんそう菠薐草の"ほうれん")」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[0(わ)][0(ワ)]<？/DTDD>                「菩薩(ぼさつ)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[^(ヘ)][^(へ)]<？/DTDD>                「蓬莱(ほうらい)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[E(い)][E(イ)]<？/DTDD>                「匍匐(ほふくぜんしん匍匐前進の"ほふく")」<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[I(に)][O(ら)]<？/DTDD>                「彷彿(ほうふつ)」※髣髴は「[-(ホ)]」｛異:[^(ヘ)]｝｛異:[|(￥)]｝<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[I(に)][I(ニ)]<？/DTDD>                「彷徨(ほうこう/彷徨うの"さまよ")」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[@(＠)][[(ぷ)]<？/DTDD>                「放牧(ほうぼく)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[D(し)][F(は)]<？/DTDD>                「彗星(すいせい)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[J(ま)][J(マ)]<？/DTDD>                「孑孒(ぼうふら)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[;(れ)][;(レ)]<？/DTDD>                「鳳凰(ほうおう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[:(け)][:(ケ)]<？/DTDD>                「冒涜(ぼうとく)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[Z(つ)][X(さ)]<？/DTDD>                「拿捕(だほ)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[X(さ)][X(サ)]<？/DTDD>                「捕捉(ほそく)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[C(そ)][V(ひ)]<？/DTDD>                「細胞(さいぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[N(み)][N(ミ)]<？/DTDD>                「膀胱(ぼうこう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[M(も)][M(モ)]<？/DTDD>                「砲熕(ほうこう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ほ)]」[,(ね)][,(ネ)]<？/DTDD>                「骨董(こっとう)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[1(ヌ)][2(フ)]<？/DTDD>                「炮烙(ほうらく)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[6(お)][7(や)]<？/DTDD>                「朴訥(ぼくとつ)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[8(ゆ)][9(よ)]<？/DTDD>                「紡績(ぼうせき)」<？/DD/DL>
<？DLDTinputstroke>  「[-(ホ)]」[Y(ン)][U(ナ)]<？/DTDD>                「翻弄(ほんろう)」<？/DD/DL>
<？DLDTinputstroke>  「[^(へ)]」[;(れ)][:(け)]<？/DTDD>                「兵站(へいたん)」<？/DD/DL>
<？DLDTinputstroke>  「[^(へ)]」[.(る)][/(め)]<？/DTDD>                「弁慶(べんけい)」<？/DD/DL>
<？DLDTinputstroke>  「[^(ヘ)]」[D(シ)][F(ハ)]<？/DTDD>                「弾劾(だんがいさいばん弾劾裁判の"だんがい")」<？/DD/DL>
<？DLDTinputstroke>  「[^(ヘ)]」[.(ル)][/(メ)]<？/DTDD>                「瀦溜(ちょりゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[Q(た)]」[2(ふ)][3(あ)]<？/DTDD>                「瓢箪(ひょうたん)」<？/DD/DL>
<？DLDTinputstroke>  「[Q(た)]」[3(あ)][4(う)]<？/DTDD>                「箪笥(たんす)」<？/DD/DL>
<？DLDTinputstroke>  「[Q(た)]」[-(ほ)][^(へ)]<？/DTDD>                「田圃(たんぼ)」<？/DD/DL>
<？DLDTinputstroke>  「[Q(た)]」[C(そ)][C(ソ)]<？/DTDD>                「胼胝(たこ/べんち)」<？/DD/DL>
<？DLDTinputstroke>  「[Q(タ)]」<？BR>[2(フ)][3(ア)][4(ウ)]<？/DTDD>         「卓袱台(ちゃぶだい)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[Q(タ)]」[Y(ン)][U(ナ)]<？/DTDD>                「団欒(だんらん)」<？/DD/DL>
<？DLDTinputstroke>  「[W(て)]」[8(ゆ)][9(よ)]<？/DTDD>                「停電(ていでん)」<？/DD/DL>
<？DLDTinputstroke>  「[W(テ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「嘱託(しょくたく)」<？/DD/DL>
<？DLDTinputstroke>  「[W(テ)]」[B(コ)][N(ミ)]<？/DTDD>                「槓杆(こうかん)」<？/DD/DL>
<？DLDTinputstroke>  「[W(テ)]」[,(ネ)][,(ね)]<？/DTDD>                「探偵(たんてい)」<？/DD/DL>
<？DLDTinputstroke>  「[E(い)]」[D(し)][F(は)]<？/DTDD>                「石鹸(せっけん)」<？/DD/DL>
<？DLDTinputstroke>  「[E(い)]」[V(ひ)][B(こ)]<？/DTDD>                「医院(いいん)」<？/DD/DL>
<？DLDTinputstroke>  「[E(イ)]」[3(ア)][4(ウ)]<？/DTDD>                「遺憾(いかん)」<？/DD/DL>
<？DLDTinputstroke>  「[E(イ)]」[;(レ)][:(ケ)]<？/DTDD>                「威嚇(いかく)」<？/DD/DL>
<？DLDTinputstroke>  「[R(す)]」[U(な)][I(に)]<？/DTDD>                「砂漠(さばく)」<？/DD/DL>
<？DLDTinputstroke>  「[R(す)]」[O(ら)][P(せ)]<？/DTDD>                「推敲(すいこう)」<？/DD/DL>
<？DLDTinputstroke>  「[R(す)]」[A(ち)][S(と)]<？/DTDD>                「垂綸(すいりん)」<？/DD/DL>
<？DLDTinputstroke>  「[R(す)]」[J(ま)][J(マ)]<？/DTDD>                「韈雀(エナガ)」<？/DD/DL>
<？DLDTinputstroke>  「[R(す)]」[V(ひ)][V(ヒ)]<？/DTDD>                「昏睡(こんすい)」<？/DD/DL>
<？DLDTinputstroke>  「[R(ス)]」[0(ワ)][-(ホ)]<？/DTDD>                「諏訪(すわ)」<？/DD/DL>
<？DLDTinputstroke>  「[R(ス)]」[7(ヤ)][8(ユ)]<？/DTDD>                「炭坑(たんこう)」<？/DD/DL>
<？DLDTinputstroke>  「[R(ス)]」[O(ラ)][P(セ)]<？/DTDD>                「賚錫(らいせき)」<？/DD/DL>
<？DLDTinputstroke>  「[R(ス)]」[S(ト)][D(シ)]<？/DTDD>                「鮒鮨(ふなずし)」<？/DD/DL>
<？DLDTinputstroke>  「[T(か)]」[V(ひ)][V(ヒ)]<？/DTDD>                「瑕疵(かし)」<？/DD/DL>
<？DLDTinputstroke>  「[T(か)]」[9(よ)][0(わ)]<？/DTDD>                「河川(かせん)」<？/DD/DL>
<？DLDTinputstroke>  「[T(か)]」[_(ろ)][_(ロ)]<？/DTDD>                「咖喱(カレー)」<？/DD/DL>
<？DLDTinputstroke>  「[T(カ)]」[A(オ)][S(ヤ)]<？/DTDD>                「薫蕕(くんゆう)」<？/DD/DL>
<？DLDTinputstroke>  「[T(カ)]」[P(セ)][@(｀)]<？/DTDD>                「風貌(ふうぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[T(カ)]」[A(チ)][S(ト)]<？/DTDD>                「価格(かかく)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[1(ぬ)][2(ふ)]<？/DTDD>                「萱葺(かやぶき)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[-(ほ)][^(へ)]<？/DTDD>                「解剖(かいぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[R(す)][T(か)]<？/DTDD>                「敦賀(するが)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[K(の)][L(り)]<？/DTDD>                「玄関(げんかん)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[F(は)][F(ハ)]<？/DTDD>                「見做(みなす見做すの"みな")」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[C(そ)][V(ひ)]<？/DTDD>                「画鋲(がびょう)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[/(め)][_(ろ)]<？/DTDD>                「駕籠(かご)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」[3(ア)][4(ウ)]<？/DTDD>                「灌漑(かんがい)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」[9(ヨ)][0(ワ)]<？/DTDD>                「乾杯(かんぱい)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」[Z(ツ)][X(サ)]<？/DTDD>                「葛飾(かつしか)」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」[.(る)][/(め)]<？/DTDD>                「柑橘(かんきつるい柑橘類の"かんきつ")」<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」[6(お)][6(オ)]<？/DTDD>                「直弼(いいなおすけ井伊直弼の"なおすけ")」<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」[_(ろ)][_(ロ)]<？/DTDD>                「尚且(なおかつ尚且つの"なおか")」<？/DD/DL>
<？DLDTinputstroke>  「[U(ナ)]」<？BR>[7(ヤ)][8(ユ)][9(ヨ)]<？/DTDD>         「柬埔寨(カンボジア)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[U(ナ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「癇癪(かんしゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[U(ナ)]」[H(ク)][J(マ)]<？/DTDD>                「恫喝(どうかつ)」<？/DD/DL>
<？DLDTinputstroke>  「[U(ナ)]」[J(マ)][K(ノ)]<？/DTDD>                「喝采(かっさい)」<？/DD/DL>
<？DLDTinputstroke>  「[U(ナ)]」[/(メ)][_(ロ)]<？/DTDD>                「苟且(かりそめ/いんじゅんこうしょ因循苟且の"こうしょ")」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[3(あ)][4(う)]<？/DTDD>                「虹霓(こうげい)」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[7(や)][8(ゆ)]<？/DTDD>                「螮蝀(たいとうせん螮蝀泉の"たいとう")」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[-(ほ)][^(へ)]<？/DTDD>                「哺乳(哺乳類ほにゅうるいの"ほにゅう")」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[O(ら)][P(せ)]<？/DTDD>                「辣韮(らっきょう)」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[A(ち)][S(と)]<？/DTDD>                「廿日(はつか)」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」[J(ま)][K(の)]<？/DTDD>                「任侠(にんきょう)」<？/DD/DL>
<？DLDTinputstroke>  「[I(に)]」<？BR>[X(さ)][C(そ)][V(ひ)][B(こ)]<？/DTDD>  「弖爾乎波(てにをは)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[I(に)]」[/(め)][_(ろ)]<？/DTDD>                「妊娠(にんしん)」<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[1(ヌ)][2(フ)]<？/DTDD>                「貴賎(きせん)」<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[R(ス)][T(カ)]<？/DTDD>                「刁斗(ちょうと)」<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[Z(ツ)][X(サ)]<？/DTDD>                「窰洞(ようどう)」<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[X(サ)][C(ソ)]<？/DTDD>                「洞窟(どうくつ)」<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[,(ネ)][.(ル)]<？/DTDD>                「淘汰(とうた)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[-(ほ)][^(へ)]<？/DTDD>                「駱駝(ラクダ)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[E(い)][R(す)]<？/DTDD>                「雷汞(らいこう)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[B(こ)][N(み)]<？/DTDD>                「杮落(こけらおとし杮落しの"こけらおと")」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」<？BR>[A(ち)][S(と)][D(し)]<？/DTDD>         「曼荼羅(まんだら)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[O(ら)]」[D(し)][F(は)]<？/DTDD>                「羅甸(ラテン)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[;(れ)][;(け)]<？/DTDD>                「攪乱(ないぶんぴかくらんぶっしつ内分泌攪乱物質の"かくらん")」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[;(れ)][;(レ)]<？/DTDD>                「攪拌(かくはん)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[X(さ)][C(そ)]<？/DTDD>                「氾濫(はんらん)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ら)]」[C(そ)][V(ひ)]<？/DTDD>                「濫觴(らんしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」[W(テ)][E(イ)]<？/DTDD>                「身体(しんたい)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」[A(チ)][S(ト)]<？/DTDD>                「字喃(チュノム)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」[K(ノ)][L(リ)]<？/DTDD>                「脂肪(しぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」[V(ヒ)][B(コ)]<？/DTDD>                「疢疾(ちんしつ)」<？/DD/DL>
<？DLDTinputstroke>  「[O(ラ)]」[N(ミ)][M(モ)]<？/DTDD>                「死屍累々(ししるいるい死屍累々の"しし")」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[2(ふ)][3(あ)]<？/DTDD>                「節榑(ふしくれ)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[2(ふ)][3(あ)]<？/DTDD>                「頽勢(たいせい)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[H(く)][J(ま)]<？/DTDD>                「逼迫(ひっぱく)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[K(の)][L(り)]<？/DTDD>                「凱旋(がいせん)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[X(さ)][C(そ)]<？/DTDD>                「先制(せんせい)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[L(れ)][L(レ)]<？/DTDD>                「鶺鴒(セキレイ)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[V(ひ)][B(こ)]<？/DTDD>                「是正(ぜせい)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[1(ヌ)][2(フ)]<？/DTDD>                「征服(せいふく)」<？/DD/DL>
<？DLDTinputstroke>  「[P(せ)]」[3(ア)][4(ウ)]<？/DTDD>                「善哉(ぜんざい)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[6(オ)][7(ヤ)]<？/DTDD>                「世代(せだい)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[0(ワ)][-(ホ)]<？/DTDD>                「忽然(こつぜん)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[J(マ)][K(ノ)]<？/DTDD>                「狭窄(きょうさく)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[](ム)][](む)]<？/DTDD>                「呵責(かしゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[P(セ)]」[,(ネ)][.(ル)]<？/DTDD>                「脊椎(せきつい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[4(う)][5(え)]<？/DTDD>                「中庸(ちゅうよう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[7(や)][8(ゆ)]<？/DTDD>                「宇宙(うちゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[S(と)][D(し)]<？/DTDD>                「撞着(どうちゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[G(き)][H(く)]<？/DTDD>                「貯蓄(ちょちく)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[Q(た)][W(て)]<？/DTDD>                「轟沈(ごうちん)」<？/DD/DL>
<？DLDTinputstroke>  「[A(チ)]」[X(さ)][X(サ)]<？/DTDD>                「著莪(シャガ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[/(め)][_(ろ)]<？/DTDD>                「丁寧(ていねい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(チ)]」[D(シ)][D(し)]<？/DTDD>                「纔着(さいじゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[A(チ)]」<？BR>[N(ミ)][M(モ)][,(ネ)][.(ル)]<？/DTDD>  「魑魅魍魎(ちみもうりょう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[S(と)]」[6(お)][7(や)]<？/DTDD>                「遠投(えんとう)」<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[8(ゆ)][8(ユ)]<？/DTDD>                「螟蛉(めいれい)」<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[9(よ)][0(わ)]<？/DTDD>                「豊穣(ほうじょう)」<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[Q(た)][W(て)]<？/DTDD>                「土壌(どじょう)」<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[Q(れ)][W(レ)]<？/DTDD>                「恍惚(こうこつ)」<？/DD/DL>
<？DLDTinputstroke>  「[S(ト)]」[7(ヤ)][8(ユ)]<？/DTDD>                「蜻蛉(とんぼ)」<？/DD/DL>
<？DLDTinputstroke>  「[S(ト)]」[X(サ)][C(ソ)]<？/DTDD>                「咄嗟(とっさ)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[Q(た)][W(て)]<？/DTDD>                「下支(したざさえ下支えの"したざさ")」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[@(＠)][[(ぷ)]<？/DTDD>                「資質(ししつ)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[A(ち)][A(チ)]<？/DTDD>                「刺繍(ししゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[;(れ)][;(レ)]<？/DTDD>                「痔瘻(じろう)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[](む)][](ム)]<？/DTDD>                「嫉妬(しっと)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[B(こ)][N(み)]<？/DTDD>                「仕事(しごと)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[N(み)][M(も)]<？/DTDD>                「事件(じけん)」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[3(ア)][4(ウ)]<？/DTDD>                「諮詢(しじゅん)」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[P(セ)][@(｀)]<？/DTDD>                「果実(かじつ)」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[@(｀)][[(プ)]<？/DTDD>                「実践(じっせん)」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[/(メ)][_(ロ)]<？/DTDD>                「葛城(かつらぎ)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[1(ぬ)][2(ふ)]<？/DTDD>                「花魁(おいらん)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[@(＠)][[(ぷ)]<？/DTDD>                「計測(けいそく)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[R(す)][R(ス)]<？/DTDD>                「蓮托(いちれんたくしょう一蓮托生の"たくしょう")」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[B(こ)][N(み)]<？/DTDD>                「函渠(かんきょ/ボックスカルバート)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[/(め)][_(ろ)]<？/DTDD>                「初詣(はつもうで)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[M(も)][,(ね)]<？/DTDD>                「下支(はばたき羽搏き、はばたく羽搏くの"はばた")」<？/DD/DL>
<？DLDTinputstroke>  「[F(ハ)]」[9(ヨ)][0(ワ)]<？/DTDD>                「抜擢(ばってき)」<？/DD/DL>
<？DLDTinputstroke>  「[F(ハ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「棕櫚(パーム)」<？/DD/DL>
<？DLDTinputstroke>  「[F(ハ)]」[@(｀)][[(プ)]<？/DTDD>                「売買(ばいばい)」<？/DD/DL>
<？DLDTinputstroke>  「[F(ハ)]」[N(ミ)][M(モ)]<？/DTDD>                「醗酵(はっこう)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[2(ふ)][2(フ)]<？/DTDD>                「伎癢(ぎよう)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[3(あ)][4(う)]<？/DTDD>                「佳境(かきょう)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[0(わ)][0(ワ)]<？/DTDD>                「究極(きゅうきょく)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[T(か)][Y(ん)]<？/DTDD>                「鍍金(メッキ)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[Y(ん)][U(な)]<？/DTDD>                「金券(きんけん)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[C(そ)][V(ひ)]<？/DTDD>                「蜀黍(もろこし/しょくしょ)」<？/DD/DL>
<？DLDTinputstroke>  「[G(き)]」[/(め)][_(ろ)]<？/DTDD>                「聶記(アシタカ聶記の"せっき")」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[3(ア)][4(ウ)]<？/DTDD>                「桔梗(ききょう)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[4(ウ)][5(エ)]<？/DTDD>                「梗塞(こうそく)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[W(テ)][E(イ)]<？/DTDD>                「基礎(きそ)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[U(ナ)][I(ニ)]<？/DTDD>                「逆算(ぎやくさん)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[U(セ)][@(｀)]<？/DTDD>                「犠牲(ぎせい)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[J(マ)][K(ノ)]<？/DTDD>                「麒麟(きりん)」<？/DD/DL>
<？DLDTinputstroke>  「[G(キ)]」[,(ネ)][.(ル)]<？/DTDD>                「切磋(せっさたくま切磋琢磨の"せっさ")」<？/DD/DL>
<？DLDTinputstroke>  「[H(く)]」[J(ま)][J(マ)]<？/DTDD>                「熊羆(ゆうひ)」<？/DD/DL>
<？DLDTinputstroke>  「[H(く)]」[R(す)][T(か)]<？/DTDD>                「薬罐(やかん)」<？/DD/DL>
<？DLDTinputstroke>  「[H(く)]」[:(け)][](む)]<？/DTDD>                「狂狷(きょうけん)」<？/DD/DL>
<？DLDTinputstroke>  「[H(ク)]」[@(｀)][[(プ)]<？/DTDD>                「懺悔(ざんげ)」<？/DD/DL>
<？DLDTinputstroke>  「[H(ク)]」[:(ケ)][](ム)]<？/DTDD>                「蜘蛛(クモ)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[2(ふ)][3(あ)]<？/DTDD>                「眩暈(めまい)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[O(ら)][P(せ)]<？/DTDD>                「混沌(こんとん)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[D(し)][F(は)]<？/DTDD>                「交渉(こうしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[C(そ)][V(ひ)]<？/DTDD>                「痳痺(まひ)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[B(こ)][N(み)]<？/DTDD>                「真鍮(しんちゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[/(め)][/(メ)]<？/DTDD>                「籩豆(たかつき)」<？/DD/DL>
<？DLDTinputstroke>  「[J(マ)]」[6(オ)][7(ヤ)]<？/DTDD>                「舞妓(まいこ)」<？/DD/DL>
<？DLDTinputstroke>  「[J(マ)]」[^(ヘ)][^(へ)]<？/DTDD>                「賄賂(わいろ)」<？/DD/DL>
<？DLDTinputstroke>  「[J(マ)]」[O(ラ)][P(セ)]<？/DTDD>                「傲慢(ごうまん)」<？/DD/DL>
<？DLDTinputstroke>  「[J(マ)]」[X(サ)][C(ソ)]<？/DTDD>                「摩擦(まさつ)」<？/DD/DL>
<？DLDTinputstroke>  「[J(マ)]」[.(ル)][/(メ)]<？/DTDD>                「豌豆(えんどうまめ豌豆豆の"えんどう")」<？/DD/DL>
<？DLDTinputstroke>  「[K(の)]」[1(ぬ)][2(ふ)]<？/DTDD>                「嘉納(かのう)」<？/DD/DL>
<？DLDTinputstroke>  「[K(の)]」[R(す)][R(ス)]<？/DTDD>                「觝触(ていしょく)」<？/DD/DL>
<？DLDTinputstroke>  「[K(の)]」[A(ち)][S(と)]<？/DTDD>                「咽喉(いんこう)」<？/DD/DL>
<？DLDTinputstroke>  「[K(の)]」[X(さ)][C(そ)]<？/DTDD>                「残滓(ざんし/ざんさい)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[4(ウ)][5(エ)]<？/DTDD>                「範疇(はんちゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[6(オ)][7(ヤ)]<？/DTDD>                「嘔吐(おうと)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「薔薇(ばら)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[R(ス)][T(カ)]<？/DTDD>                「触媒(しょくばい)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[P(セ)][@(｀)]<？/DTDD>                「齧歯(げっしるい齧歯類の"げっし")」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[A(チ)][S(ト)]<？/DTDD>                「馳走(ごちそう御馳走の"ちそう")」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[F(ハ)][G(キ)]<？/DTDD>                「母趾(がいはんぼし外反母趾の"ぼし")」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[K(リ)][;(レ)]<？/DTDD>                「配慮(はいりょ)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[N(ミ)][M(モ)]<？/DTDD>                「伐採(ばっさい)」<？/DD/DL>
<？DLDTinputstroke>  「[K(ノ)]」[,(ネ)][.(ル)]<？/DTDD>                「晩餐(ばんさん)」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[0(わ)][0(ワ)]<？/DTDD>                「鍉鍼(ていしん)」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[I(に)][I(ニ)]<？/DTDD>                「鴻離(ぎょもうこうり魚網鴻離の"こうり")」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[C(そ)][V(ひ)]<？/DTDD>                「淋巴(リンパ)」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[B(こ)][N(み)]<？/DTDD>                「翰林(かんりん)」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[:(け)][](む)]<？/DTDD>                「吝嗇(りんしょく/けち/吝さかで"やぶさか")」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[N(み)][M(も)]<？/DTDD>                「林檎(りんご)」<？/DD/DL>
<？DLDTinputstroke>  「[L(り)]」[.(る)][/(め)]<？/DTDD>                「流暢(りゅうちょう)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[4(ウ)][5(エ)]<？/DTDD>                「伴侶(はんりょ)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「吾輩(わがはい)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[9(ヨ)][0(ワ)]<？/DTDD>                「鑱鍼(ざんしん)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「徘徊(はいかい)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[W(テ)][E(イ)]<？/DTDD>                「派閥(はばつ)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[U(ナ)][I(ニ)]<？/DTDD>                「乖離(かいり)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[P(セ)][@(｀)]<？/DTDD>                「逍遥(しょうよう)」<？/DD/DL>
<？DLDTinputstroke>  「[L(リ)]」[V(ヒ)][B(コ)]<？/DTDD>                「梯梧(でいこ/でいご)」<？/DD/DL>
<？DLDTinputstroke>  「[;(れ)]」[P(せ)][@(＠)]<？/DTDD>                「熾烈(しれつ)」<？/DD/DL>
<？DLDTinputstroke>  「[;(れ)]」[D(し)][F(は)]<？/DTDD>                「玲瓏(れいろう)」<？/DD/DL>
<？DLDTinputstroke>  「[;(れ)]」[M(も)][,(ね)]<？/DTDD>                「檸檬(レモン)」<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」[3(ア)][4(ウ)]<？/DTDD>                「岐阜(ぎふ)」<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」<？BR>[R(ス)][T(カ)][Y(ン)]<？/DTDD>         「枢機卿(すうききょう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[;(レ)]」[T(カ)][T(か)]<？/DTDD>                「機械(きかい)」<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」[I(ニ)][O(ラ)]<？/DTDD>                「僥倖(ぎょうこう)」<？/DD/DL>
<？DLDTinputstroke>  「[:(レ)]」[S(ト)][D(シ)]<？/DTDD>                「謹慎(きんしん)」<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」[G(キ)][H(ク)]<？/DTDD>                「近畿(きんき)」<？/DD/DL>
<？DLDTinputstroke>  「[:(レ)]」[:(ケ)][](ム)]<？/DTDD>                「虚業(きょぎょう)」<？/DD/DL>
<？DLDTinputstroke>  「[:(レ)]」[C(ソ)][V(ヒ)]<？/DTDD>                「蜷局(とぐろ)」<？/DD/DL>
<？DLDTinputstroke>  「[:(レ)]」[N(ミ)][M(モ)]<？/DTDD>                「軋轢(あつれき)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[1(ぬ)][2(ふ)]<？/DTDD>                「健康(けんこう)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[3(あ)][4(う)]<？/DTDD>                「遣隋(遣隋使の"けんずい")」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[5(え)][6(お)]<？/DTDD>                「謙遜(けんそん)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[Q(た)][W(て)]<？/DTDD>                「献血(けんけつ)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[W(て)][E(い)]<？/DTDD>                「血漿(けっしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[I(に)][O(ら)]<？/DTDD>                「迎賓(げいひん)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[A(ち)][S(と)]<？/DTDD>                「検索(けんさく)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[Z(つ)][X(さ)]<？/DTDD>                「怪傑(かいけつ)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[H(く)][H(く)][H(ク)][H(ク)]<？/DTDD>  「侃侃諤諤(かんかんがくがく)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[:(け)]」[;(れ)][;(レ)]<？/DTDD>                「痙攣(けいれん)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」[,(ね)][,(ネ)]<？/DTDD>                「喧嘩(けんか)」<？/DD/DL>
<？DLDTinputstroke>  「[:(け)]」<？BR>[,(ね)][,(ね)][.(る)][.(る)]<？/DTDD>  「喧喧囂囂(けんけんごうごう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[:(ケ)]」[1(ヌ)][2(フ)]<？/DTDD>                「原稿(げんこう)」<？/DD/DL>
<？DLDTinputstroke>  「[:(ケ)]」[3(ア)][4(ウ)]<？/DTDD>                「袈裟(けさ)」<？/DD/DL>
<？DLDTinputstroke>  「[:(ケ)]」[^(ヘ)][^(へ)]<？/DTDD>                「畦畔(けいはん)」<？/DD/DL>
<？DLDTinputstroke>  「[:(ケ)]」[I(ニ)][O(ラ)]<？/DTDD>                「経緯(けいい)」<？/DD/DL>
<？DLDTinputstroke>  「[:(ケ)]」[N(ミ)][M(モ)]<？/DTDD>                「啓蟄(けいちつ)」<？/DD/DL>
<？DLDTinputstroke>  「[](む)]」[3(あ)][4(う)]<？/DTDD>                「爬虫(爬虫類はちゅうるいの"はちゅう")」<？/DD/DL>
<？DLDTinputstroke>  「[](む)]」[5(え)][6(お)]<？/DTDD>                「娘婿(むすめむこ)」<？/DD/DL>
<？DLDTinputstroke>  「[Z(つ)]」[V(ひ)][B(こ)]<？/DTDD>                「韜晦(とうかい)」<？/DD/DL>
<？DLDTinputstroke>  「[Z(つ)]」[M(も)][,(ね)]<？/DTDD>                「常套(じょうとう)」<？/DD/DL>
<？DLDTinputstroke>  「[Z(つ)]」[D(し)][D(シ)]<？/DTDD>                「辻褄(つじつま)」<？/DD/DL>
<？DLDTinputstroke>  「[Z(ツ)]」[C(ソ)][V(ヒ)]<？/DTDD>                「躑躅(つつじ)」<？/DD/DL>
<？DLDTinputstroke>  「[X(さ)]」[0(わ)][-(ほ)]<？/DTDD>                「沢岻(沖縄県浦添市沢岻の"たくし")」<？/DD/DL>
<？DLDTinputstroke>  「[X(さ)]」[C(そ)][C(ソ)]<？/DTDD>                「誘拐(ゆうかい)」<？/DD/DL>
<？DLDTinputstroke>  「[X(サ)]」[3(ア)][4(ウ)]<？/DTDD>                「柘榴(ざくろ)」<？/DD/DL>
<？DLDTinputstroke>  「[X(サ)]」[I(ニ)][O(ラ)]<？/DTDD>                「錯綜(さくそう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[2(ふ)][3(あ)]<？/DTDD>                「想像(そうぞう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[8(ゆ)][9(よ)]<？/DTDD>                「祇園(ぎおん)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[@(＠)][[(ぷ)]<？/DTDD>                「齟齬(そご)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[Z(つ)][Z(ツ)]<？/DTDD>                「疎外(そがい)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[G(き)][G(キ)]<？/DTDD>                「毀損(きそん)」<？/DD/DL>
<？DLDTinputstroke>  「[C(そ)]」[Z(つ)][Z(ツ)]<？/DTDD>                「疏通(そつう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[1(ヌ)][1(ぬ)]<？/DTDD>                「艤装(ぎそう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[9(ヨ)][0(ワ)]<？/DTDD>                「訴訟(そしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[R(ス)][T(カ)]<？/DTDD>                「相続(そうぞく)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[K(ノ)][L(リ)]<？/DTDD>                「苑囿(えんゆう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[;(レ)][:(ケ)]<？/DTDD>                「蔚蒼(うっそう)」<？/DD/DL>
<？DLDTinputstroke>  「[C(ソ)]」[V(ヒ)][V(ひ)]<？/DTDD>                「脾臓(ひぞう)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[1(ぬ)][2(ふ)]<？/DTDD>                「咖啡(コーヒー)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[1(ぬ)][2(ふ)][3(あ)]<？/DTDD>         「咖啡涅(カフェイン)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[V(ひ)]」[3(あ)][3(ア)]<？/DTDD>                「涅槃(ねはんじゃくじょう涅槃寂静の"ねはん")」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[0(わ)][0(ワ)]<？/DTDD>                「枇杷(果物のビワ)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[P(せ)][@(＠)]<？/DTDD>                「燧火(すいか)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[S(と)][S(ト)]<？/DTDD>                「人蔘(にんじん)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[1(ヌ)][2(フ)]<？/DTDD>                「珈琲(コーヒー)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[7(ヤ)][8(ユ)]<？/DTDD>                「比較(ひかく)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[F(ハ)][G(キ)]<？/DTDD>                「批准(ひじゅん)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[K(ノ)][L(リ)]<？/DTDD>                「檳榔(びんろう)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[B(コ)][B(こ)]<？/DTDD>                「琵琶(楽器のビワ)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」<？BR>[N(ミ)][N(ミ)][M(モ)][,(ネ)]<？/DTDD>  「蹇蹇匪躬(けんけんひきゅう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[B(こ)]」[3(あ)][3(ア)]<？/DTDD>                「頃合(ころあい)」<？/DD/DL>
<？DLDTinputstroke>  「[B(こ)]」[](む)][](ム)]<？/DTDD>                「蒟蒻(こんにゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[B(こ)]」[K(の)][L(り)]<？/DTDD>                「碓氷(碓氷峠の"うすい")」<？/DD/DL>
<？DLDTinputstroke>  「[B(こ)]」[Z(つ)][Z(ツ)]<？/DTDD>                「胡椒(こしょう)」<？/DD/DL>
<？DLDTinputstroke>  「[B(こ)]」[N(み)][N(ミ)]<？/DTDD>                「蝙蝠(こうもり)」<？/DD/DL>
<？DLDTinputstroke>  「[B(こ)]」[,(ね)][.(る)]<？/DTDD>                「狡猾(こうかつ)」<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[6(オ)][7(ヤ)]<？/DTDD>                「甲斐(生き甲斐の"かい")」<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[I(ニ)][O(ラ)]<？/DTDD>                「殊更(ことさら)」<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[@(｀)][[(プ)]<？/DTDD>                「鱣子(キャビア)」<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[G(キ)][G(き)]<？/DTDD>                「拮抗(きっこう)」<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[,(ネ)][.(ル)]<？/DTDD>                「誤謬(ごびゅう)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[8(ゆ)][9(よ)]<？/DTDD>                「御輿(みこし)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[W(て)][E(い)]<？/DTDD>                「蚯蚓(みみず)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[R(す)][R(ス)]<？/DTDD>                「水黽(あめんぼ)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[R(す)][T(か)]<？/DTDD>                「水脈(すいみゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[@(＠)][[(ぷ)]<？/DTDD>                「味噌(みそ)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[L(り)][L(リ)]<？/DTDD>                「緑礬(リョクバン/ろくばん)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[/(め)][_(ろ)]<？/DTDD>                「琢磨(せっさたくま切磋琢磨の"たくま")」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[1(ヌ)][1(ぬ)]<？/DTDD>                「嵯峨(さが)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[3(あ)][3(ア)]<？/DTDD>                「湘南(しょうなん)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「毘沙(びしゃもん毘沙門の"びしゃ")」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[Q(タ)][W(テ)]<？/DTDD>                「燦爛(さんらん)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[U(ナ)][I(ニ)]<？/DTDD>                「鏖殺(おうさつ)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[Z(ツ)][Z(つ)]<？/DTDD>                「稠密(ちゅうみつ/ちょうみつ)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」<？BR>[.(ル)][/(メ)][_(ロ)]<？/DTDD>         「珊瑚礁(さんごしょう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[M(も)]」[X(さ)][C(そ)]<？/DTDD>                「譫妄(せんもう)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」[I(ニ)][O(ラ)]<？/DTDD>                「咀嚼(そしゃく)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」[E(イ)][R(ス)]<？/DTDD>                「総帥(そうすい)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」[Z(ツ)][Z(つ)]<？/DTDD>                「矜持(きょうじ/きんじ)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」[A(チ)][S(ト)]<？/DTDD>                「黙祷(もくとう)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」[L(リ)][;(レ)]<？/DTDD>                「朦朧(もうろう)」<？/DD/DL>
<？DLDTinputstroke>  「[M(モ)]」<？BR>[,(ネ)][.(ル)][/(メ)]<？/DTDD>         「絆創膏(ばんそうこう)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[,(ね)]」[-(ほ)][^(へ)]<？/DTDD>                「年俸(ねんぽう)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ね)]」[E(い)][R(す)]<？/DTDD>                「窮鼠(きゅうそねこをかむ窮鼠猫を噛むの"きゅうそ")」<？/DD/DL>
<？DLDTinputstroke>  「[,(ね)]」[N(み)][M(も)]<？/DTDD>                「根拠(こんきょ)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ね)]」[/(め)][_(ろ)]<？/DTDD>                「音叉(おんさ)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[-(ホ)][^(ヘ)]<？/DTDD>                「誹謗(ひぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[:(ケ)][](ム)]<？/DTDD>                「秘訣(ひけつ)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[:(ケ)][:(け)]<？/DTDD>                「秘鑰(ひやく)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[U(な)][I(ニ)]<？/DTDD>                「俊敏(しゅんびん)」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[K(ノ)][K(の)]<？/DTDD>                「嗶哩(ビリビリどうが嗶哩嗶哩動画の"ビリ")」<？/DD/DL>
<？DLDTinputstroke>  「[,(ネ)]」[C(ソ)][V(ヒ)]<？/DTDD>                「贔屓(ひいき)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[8(ユ)][9(ヨ)]<？/DTDD>                「皇后(こうごう)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[Y(ン)][U(ナ)]<？/DTDD>                「琥珀(こはく)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[I(ニ)][O(ラ)]<？/DTDD>                「宏闊(こうかつ)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[K(ノ)][L(リ)]<？/DTDD>                「孝行(こうこう)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[;(レ)][:(ケ)]<？/DTDD>                「豪語(ごうご)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[:(ケ)][](ム)]<？/DTDD>                「語彙(ごい)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[B(コ)][N(ミ)]<？/DTDD>                「醍醐(だいご)」<？/DD/DL>
<？DLDTinputstroke>  「[.(ル)]」[/(メ)][_(ロ)]<？/DTDD>                「竣工(しゅんこう)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[1(ぬ)][2(ふ)]<？/DTDD>                「拉麺(ラーメン)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[2(ふ)][3(あ)]<？/DTDD>                「麺麭(パン)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[5(ふ)][5(あ)]<？/DTDD>                「五芒(五芒星の"ごぼう")」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[Q(た)][W(て)]<？/DTDD>                「酩酊(めいてい)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[Q(た)][W(て)]<？/DTDD>                「牝牡(ひんぼ)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[S(と)][D(し)]<？/DTDD>                「炊飯(すいはん)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[U(な)][I(に)]<？/DTDD>                「氏名(しめい)」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[P(せ)][P(セ)]<？/DTDD>                「億劫(おっくう)」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[;(れ)][:(け)]<？/DTDD>                「明晰(めいせきむ明晰夢の"めいせき")」<？/DD/DL>
<？DLDTinputstroke>  「[/(め)]」[N(み)][M(も)]<？/DTDD>                「瑠璃(るり/ラピスラズリ)」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[8(ユ)][8(ゆ)]<？/DTDD>                「八紘(はっこういちう八紘一宇の"はっこう")」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[-(ホ)][-(ほ)]<？/DTDD>                「百閒(うちだひゃっけん内田百閒の"ひゃっけん")」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[^(ヘ)][^(へ)]<？/DTDD>                「千穐(せんしゅうばんざいだいだいかのう千穐万歳大々叶の"せんしゅう")」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[F(ハ)][F(は)]<？/DTDD>                「瓦礫(がれき)」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[L(リ)][L(り)]<？/DTDD>                「割烹(かっぽうぎ割烹着の"かっぽう")」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[](ム)][](む)]<？/DTDD>                「毛氈(もうせん/フェルト)」<？/DD/DL>
<？DLDTinputstroke>  「[_(ろ)]」[@(＠)][[(ぷ)]<？/DTDD>                「耄碌(もうろく)」<？/DD/DL>
<？DLDTinputstroke>  「[_(ロ)]」[@(｀)][[(プ)]<？/DTDD>                「狼狽(ろうばい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[1(ぬ)][2(ふ)]<？/DTDD>                 「禺彊(ぐうきょう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[3(あ)][4(う)]<？/DTDD>                 「鞦韆(しゅうせん/ブランコ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[5(え)][6(お)]<？/DTDD>                 「羌瘣(きょうかい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[7(や)][8(ゆ)]<？/DTDD>                 「宥恕(ゆうじょ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[9(よ)][0(わ)]<？/DTDD>                 「𠌃謨(カリウム加𠌃謨、ナトリウム那篤𠌃謨などの"リウム")」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[-(ほ)][^(へ)]<？/DTDD>                 「吶喊(とっかん)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[Q(た)][W(て)]<？/DTDD>                 「耆碩(きせき)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[E(い)][R(す)]<？/DTDD>                 「囐噠(エフタル)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[T(か)][Y(ん)]<？/DTDD>                 「挹怛(エフタル)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[U(な)][I(に)]<？/DTDD>                 「鑣轡(ひょうぐつわ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[O(ら)][P(せ)]<？/DTDD>                 「呿呻(あくび)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[@(＠)][[(ぷ)]<？/DTDD>                 「顑頷(かんがん)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[A(ち)][S(と)]<？/DTDD>                 「磊磈(らいかい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[D(し)][F(は)]<？/DTDD>                 「潑溂(はつらつ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[G(き)][H(く)]<？/DTDD>                 「緂縅(だんおどし)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[J(ま)][K(の)]<？/DTDD>                 「惝怳(しょうきょう/しょうこう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[L(り)][;(れ)]<？/DTDD>                 「憔悴(しょうすい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[:(け)][](む)]<？/DTDD>                 「狴犴(へいかん)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[Z(つ)][X(さ)]<？/DTDD>                 「薜荔(オオイタビ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[C(そ)][V(ひ)]<？/DTDD>                 「瑙魯(ナウル)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[B(こ)][N(み)]<？/DTDD>                 「艨艟(もうどう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[M(も)][,(ね)]<？/DTDD>                 「枸櫞(クエンサン枸櫞酸の"クエン")」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[.(る)][/(め)]<？/DTDD>                 「邂逅(かいこう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(α)]」[_(ろ)][_(ロ)]<？/DTDD>                 「曱甴(ゴキブリ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[1(ヌ)][2(フ)]<？/DTDD>                 「拜疆(アゼルバイジャン阿塞拜疆/亞塞拜疆の"バイジャン")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[3(ア)][4(ウ)]<？/DTDD>                 「鷸蚌(鷸蚌の争いの"いつぼう")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[5(エ)][6(オ)]<？/DTDD>                 「彌猴(キウイ彌猴桃の"彌猴")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[7(ヤ)][8(ユ)]<？/DTDD>                 「胤裔(いんえい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[9(ヨ)][0(ワ)]<？/DTDD>                 「孩嬰(がいえい)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[-(ホ)][^(ヘ)]<？/DTDD>                 「舜瞥(とくしゅんべつ徳舜瞥の"しゅんべつ")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[Q(タ)][W(テ)]<？/DTDD>                 「螻蟈(ろうこくなく螻蟈鳴の"ろうこく")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[E(イ)][R(ス)]<？/DTDD>                 「蟋蟀(コオロギ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[T(カ)][Y(ン)]<？/DTDD>                 「螽蟖(キリギリス)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[U(ナ)][I(ニ)]<？/DTDD>                 「旱魃(かんばつ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[O(ラ)][P(セ)]<？/DTDD>                 「蜥蜴(トカゲ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[@(｀)][[(プ)]<？/DTDD>                 「閨閤(けいこう)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[A(チ)][S(ト)]<？/DTDD>                 「茱萸(グミ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[D(シ)][F(ハ)]<？/DTDD>                 「鮟鱇(アンコウ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[G(キ)][H(ク)]<？/DTDD>                 「鎔笵(ようはん)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[J(マ)][K(ノ)]<？/DTDD>                 「喇叭(ラッパ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[L(リ)][;(レ)]<？/DTDD>                 「榠樝(カリン)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[:(ケ)][](ム)]<？/DTDD>                 「顰蹙(ひんしゅく)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[Z(ツ)][X(サ)]<？/DTDD>                 「邯鄲(かんたんのゆめ邯鄲の夢の"かんたん")」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[C(ソ)][V(ヒ)]<？/DTDD>                 「轆轤(ろくろ)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[B(コ)][N(ミ)]<？/DTDD>                 「纐纈(こうけつ/こうけち)」<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[M(モ)][,(ネ)]<？/DTDD>                 「螳螂(かまきり)」※蟷螂は辞書使用<？/DD/DL>
<？DLDTinputstroke>  「[A(Α)]」[.(ル)][/(メ)]<？/DTDD>                 「霹靂(へきれき)」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[1(ぬ)][2(ふ)]<？/DTDD>                 「抛擲(ほうてき)」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[3(あ)][4(う)]<？/DTDD>                 「慇懃(いんぎんぶれい慇懃無礼の"いんきん")」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[5(あ)][6(う)]<？/DTDD>                 「慟哭(どうこく)」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[7(や)][8(ゆ)]<？/DTDD>                 「渺茫(びょうぼう)」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[9(よ)][0(わ)]<？/DTDD>                 「跋扈(ちょうりょうばっこ跳梁跋扈の"ばっこ")」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[-(ほ)][^(へ)]<？/DTDD>                 「匝瑳(そうさし匝瑳市の"そうさ")」<？/DD/DL>
<？DLDTinputstroke>  「[B(β)]」[_(ろ)][_(ロ)]<？/DTDD>                 「蟑螂(ゴキブリ)」<？/DD/DL>
<？DLDTinputstroke>  「[G(γ)]」[_(ろ)][_(ロ)]<？/DTDD>                 「蜚蠊(ゴキブリ)」<？/DD/DL>
<？DLDTinputstroke>  「[D(δ)]」[_(ろ)][_(ロ)]<？/DTDD>                 「癤癰(せつよう)」<？/DD/DL>
<？DLDTinputstroke>  「[E(ε)]」<？BR>[1(ぬ)][2(ふ)][3(あ)]<？/DTDD>          「珸瑶瑁(ごようまい)」<？/DD/DLclearboth>
<？DLDTinputstroke>  「[E(ε)]」[_(ろ)][_(ロ)]<？/DTDD>                 「疔瘡(ちょうそう)」<？/DD/DL>
|<＃contents/KEV_interpret-1>]

[<＃contents/KEV_interpret-2>|
<？P> 厳密には相席ではないのですが字引入力を使ったショートカット事例。<？BR>
<？/P>
<？DLDTinputstroke>  「[4(う)]」[3(あ)][3(あ):逆]<？/DTDD>            「上下(じょうげ)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[Q(タ)][Q(タ):逆]<？/DTDD>            「左右(さゆう)」<？/DD/DL>
<？DLDTinputstroke>  「[J(ま)]」[5(え)][5(え):逆]<？/DTDD>            「前後(ぜんご)」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[T(カ)][T(カ):逆]<？/DTDD>            「東西(とうざい)」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[4(う)][4(う):逆]<？/DTDD>            「南北(なんぼく)」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[_(ろ)][_(ろ):逆]<？/DTDD>            「白黒(しろくろ)」<？/DD/DL>
<？DLDTinputstroke>  「[8(ゆ)]」[F(は)][F(は):逆]<？/DTDD>            「融解(ゆうかい)」※接着剤(融着)と剥がし液(解凍)のニュアンスなので逆扱い<？/DD/DL>
<？DLDTinputstroke>  「[T(カ)]」[A(チ)][A(チ):非]<？/DTDD>            「価値(かち)」<？/DD/DL>
<？DLDTinputstroke>  「[F(は)]」[.(る)][.(る):非]<？/DTDD>            「春夏(しゅんかしゅうとう春夏秋冬の"しゅんか")」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[G(き)][G(き):非]<？/DTDD>            「秋冬(しゅんかしゅうとう春夏秋冬の"しゅうとう")」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[Y(ん)][Y(ん):非]<？/DTDD>            「温暖(おんだん)」<？/DD/DL>
<？DLDTinputstroke>  「[N(ミ)]」[](ム)][](ム):非]<？/DTDD>            「寒冷(かんれい)」<？/DD/DL>
|<＃contents/KEV_interpret-2>]

[<＃contents/KEV_interpret-3>|
<？P> 地名など漢字一字で圧縮表現できる場合、逆に字引入力で解凍(伸張)できるはず。<？BR>
<？/P>
<？index/kanedit_faq:prefectures>

<？DLDTinputstroke>  「[G(き)]」[Q(た):地]<？/DTDD>                   「地北⇔北海道」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[6(お):地]<？/DTDD>                   「地青⇔青森」<？/DD/DL>
<？DLDTinputstroke>  「[E(い)]」[0(わ):地]<？/DTDD>                   「地岩⇔岩手」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[_(ロ):地]<？/DTDD>                   「地城⇔宮城」<？/DD/DL>
<？DLDTinputstroke>  「[3(あ)]」[G(き):地]<？/DTDD>                   「地秋⇔秋田」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ン)]」[Q(タ):地]<？/DTDD>                   「地形⇔山形」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[J(ま):地]<？/DTDD>                   「地島⇔福島」<？/DD/DL>
<？DLDTinputstroke>  「[E(イ)]」[F(ハ):地]<？/DTDD>                   「地茨⇔茨城」<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[A(ち):地]<？/DTDD>                   「地栃⇔栃木」<？/DD/DL>
<？DLDTinputstroke>  「[H(ク)]」[F(ハ):地]<？/DTDD>                   「地群⇔群馬」<？/DD/DL>
<？DLDTinputstroke>  「[X(さ)]」[Q(た):地]<？/DTDD>                   「地埼⇔埼玉」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[^(ヘ):地]<？/DTDD>                   「地千⇔千葉」<？/DD/DL>
<？DLDTinputstroke>  「[V(ヒ)]」[T(カ):地]<？/DTDD>                   「地東⇔東京」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[N(み):地]<？/DTDD>                   「地神⇔神奈川」<？/DD/DL>
<？DLDTinputstroke>  「[Y(ん)]」[Q(た):地]<？/DTDD>                   「地潟⇔新潟」(「地新⇔新加坡/新西蘭/新潟」「地星⇔新加坡」「地乳⇔新西蘭」)<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[N(み):地]<？/DTDD>                   「地富⇔富山」<？/DD/DL>
<？DLDTinputstroke>  「[E(い)]」[D(し):地]<？/DTDD>                   「地石⇔石川」<？/DD/DL>
<？DLDTinputstroke>  「[E(イ)]」[S(ト):地]<？/DTDD>                   「地井⇔福井」<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」[D(し):地]<？/DTDD>                   「地梨⇔山梨」<？/DD/DL>
<？DLDTinputstroke>  「[K(の)]」[7(や):地]<？/DTDD>                   「地野⇔長野」<？/DD/DL>
<？DLDTinputstroke>  「[;(レ)]」[1(ヌ):地]<？/DTDD>                   「地岐⇔岐阜」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[R(す):地]<？/DTDD>                   「地静⇔静岡」<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[@(゛):地]<？/DTDD>                   「地知⇔愛知」(「地愛⇔愛知/愛蘭」)<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[3(ア):地]<？/DTDD>                   「地三⇔三重」<？/DD/DL>
<？DLDTinputstroke>  「[D(シ)]」[9(ヨ):地]<？/DTDD>                   「地滋⇔滋賀」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[}(ﾟ ):地]<？/DTDD>                   「地京⇔京都」<？/DD/DL>
<？DLDTinputstroke>  「[F(ハ)]」[Y(ン):地]<？/DTDD>                   「地阪⇔大阪」(「地大⇔大阪/大分」)<？/DD/DL>
<？DLDTinputstroke>  「[^(へ)]」[M(も):地]<？/DTDD>                   「地兵⇔兵庫」<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」[O(ら):地]<？/DTDD>                   「地奈⇔奈良」<？/DD/DL>
<？DLDTinputstroke>  「[0(わ)]」[^(へ):地]<？/DTDD>                   「地和⇔和歌山」(「地歌⇔和歌山」)<？/DD/DL>
<？DLDTinputstroke>  「[S(と)]」[L(り):地]<？/DTDD>                   「地鳥⇔鳥取」(「地取⇔鳥取」)<？/DD/DL>
<？DLDTinputstroke>  「[.(ね)]」[M(も):地]<？/DTDD>                   「地根⇔島根」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[T(か):地]<？/DTDD>                   「地岡⇔岡山」<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[_(ろ):地]<？/DTDD>                   「地広⇔広島」<？/DD/DL>
<？DLDTinputstroke>  「[H(く)]」[A(ち):地]<？/DTDD>                   「地口⇔山口」(「地山⇔山美亜/山形/富山/山梨/和歌山/岡山/山口」)<？/DD/DL>
<？DLDTinputstroke>  「[I(ニ)]」[H(ク):地]<？/DTDD>                   「地徳⇔徳島」<？/DD/DL>
<？DLDTinputstroke>  「[T(か)]」[0(わ):地]<？/DTDD>                   「地川⇔香川」(「地香⇔香港/香川」)<？/DD/DL>
<？DLDTinputstroke>  「[V(ひ)]」[/(め):地]<？/DTDD>                   「地媛⇔愛媛」<？/DD/DL>
<？DLDTinputstroke>  「[Q(た)]」[T(か):地]<？/DTDD>                   「地高⇔高知」<？/DD/DL>
<？DLDTinputstroke>  「[Q(ふ)]」[J(ま):地]<？/DTDD>                   「地福⇔福岡」<？/DD/DL>
<？DLDTinputstroke>  「[X(サ)]」[T(カ):地]<？/DTDD>                   「地佐⇔佐賀」<？/DD/DL>
<？DLDTinputstroke>  「[U(な)]」[E(い):地]<？/DTDD>                   「地長⇔長崎」<？/DD/DL>
<？DLDTinputstroke>  「[H(く)]」[J(ま):地]<？/DTDD>                   「地熊⇔熊本」<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[L(レ):地]<？/DTDD>                   「地分⇔大分」<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[7(や):地]<？/DTDD>                   「地宮⇔宮崎」<？/DD/DL>
<？DLDTinputstroke>  「[D(し)]」[T(か):地]<？/DTDD>                   「地鹿⇔鹿児島」<？/DD/DL>
<？DLDTinputstroke>  「[6(お)]」[G(き):地]<？/DTDD>                   「地沖⇔沖縄」<？/DD/DL>

<？index/kanedit_faq:country>

<？DLDTinputstroke>  「[I(に)]」[S(と):地]<？/DTDD>                   「地日⇔日本」(にっぽん)<？/DD/DL>
<？DLDTinputstroke>  「[A(ち)]」[E(い):地]<？/DTDD>                   「地中⇔中華人民共和国」(ちゅうかじんみんきょうわこく)<？/DD/DL>
<？DLDTinputstroke>  「[Q(タ)]」[4(ウ):地]<？/DTDD>                   「地台⇔台湾」(たいわん)<？/DD/DL>
<？DLDTinputstroke>  「[N(み)]」[S(と):地]<？/DTDD>                   「地港⇔香港」(ほんこん)<？/DD/DL>
<？DLDTinputstroke>  「[B(コ)]」[^(ヘ):地]<？/DTDD>                   「地越⇔越南」(べとなむ)<？/DD/DL>
<？DLDTinputstroke>  「[H(ク)]」[O(ラ):地]<？/DTDD>                   「地蔵⇔西蔵」(ちべっと)<？/DD/DL>
<？DLDTinputstroke>  「[M(も)]」[B(こ):地]<？/DTDD>                   「地蒙⇔蒙古」(もんごる)<？/DD/DL>
<？DLDTinputstroke>  「[5(え)]」[E(い):地]<？/DTDD>                   「地英⇔英吉利西」(イギリス)<？/DD/DL>
<？DLDTinputstroke>  「[/(メ)]」[T(カ):地]<？/DTDD>                   「地米⇔亜米利加」(アメリカ)<？/DD/DL>
|<＃contents/KEV_interpret-3>]

[<？index/kanedit_faq:prefectures>*<？index/kanedit_faq:country>|
:<＄title/kanedit_faq-0>	都道府県の字引入力
:<＄title/kanedit_faq-1>	国名の字引入力
.+\.html?	<h4><＄title/kanedit_faq-@c></h4>
.*	 <＄title/kanedit_faq-@c>
|<？index/kanedit_faq:prefectures>*<？index/kanedit_faq:country>]

[<＃contents/KEV_interpret-4>|
<？DLDTfaq> Ｑ．辞書作成の際に参考になったサイトとか教えていただけますか？<？/DTDD>
 Ａ．全部は無理ですが覚えがある範囲の一部なら。Yahoo!知恵袋やWeblioやgoo辞書やWikipediaやニコニコ大百科など様々なサイトを参考にしてます。<？BR><？/DD/DL>
<？https/ref:radical>
<？https/ref:木>
<？https/ref:魚>
<？https/ref:草>
<？https/ref:Fish!>
<？https/ref:Bird!>
<？https/ref:flesh>
<？https/ref:ネ示>
<？https/ref:攪拌>
<？https/ref:鶯鴬>
<？https/ref:囯国>
<？https/ref:団欒>
<？https/ref:噛嚙>
<？https/ref:脹張>
<？https/ref:舗鋪>
<？https/ref:檞>
<？https/ref:㓛>
<？https/ref:ghost>
<？https/ref:gundam>
<？https/ref:閄>
<？https/ref:‎samesound>
<？https/ref:country>
<？https/ref:rareplace>
<？https/ref:72pentads>
<？https/ref:28lunarmansions>
<？https/ref:24seasons>
<？https/ref:Japanesecolors>
<？https/ref:element>
<？https/ref:chemical>
<？https/ref:10^68>
<？https/ref:longreadingchar>
<？https/ref:surname1char>
<？https/ref:Kanjinames>
<？https/ref:zinmei1>
<？https/ref:zinmei2>
<？https/ref:animal>
<？https/ref:baseball>
<？https/ref:prefectures>
<？https/ref:sports>
<？https/ref:梅龱>
<？https/ref:BA-90>
<？https/ref:Tomato>
<？https/ref:braille>
<？https/ref:Mahjong>
<？https/ref:tkinter>
<？https/ref:BMP>
|<＃contents/KEV_interpret-4>]
[<？https/ref:radical>*<？https/ref:木>*<？https/ref:魚>*<？https/ref:草>*<？https/ref:Fish!>*<？https/ref:Bird!>*<？https/ref:flesh>*<？https/ref:ネ示>*<？https/ref:攪拌>*<？https/ref:鶯鴬>*<？https/ref:囯国>*<？https/ref:団欒>*<？https/ref:噛嚙>*<？https/ref:脹張>*<？https/ref:舗鋪>*<？https/ref:檞>*<？https/ref:㓛>*<？https/ref:ghost>*<？https/ref:gundam>*<？https/ref:閄>*<？https/ref:‎samesound>*<？https/ref:country>*<？https/ref:rareplace>*<？https/ref:72pentads>*<？https/ref:28lunarmansions>*<？https/ref:24seasons>*<？https/ref:Japanesecolors>*<？https/ref:element>*<？https/ref:chemical>*<？https/ref:10^68>*<？https/ref:longreadingchar>*<？https/ref:surname1char>*<？https/ref:Kanjinames>*<？https/ref:zinmei1>*<？https/ref:zinmei2>*<？https/ref:animal>*<？https/ref:baseball>*<？https/ref:prefectures>*<？https/ref:sports>*<？https/ref:梅龱>*<？https/ref:BA-90>*<？https/ref:Tomato>*<？https/ref:braille>*<？https/ref:Mahjong>*<？https/ref:tkinter>*<？https/ref:BMP>|
:<＄web/ref-00>	部首 - Wikipedia
:<＄url/ref-00>	https://ja.wikipedia.org/wiki/%E9%83%A8%E9%A6%96
:<＄web/ref-01>	「木」へんの漢字 「季節の花300」
:<＄url/ref-01>	http://www.hana300.com/aakanji1.html
:<＄web/ref-02>	「魚」へん の漢字 「季節の花300」
:<＄url/ref-02>	http://www.hana300.com/sakana.html
:<＄web/ref-03>	「草かんむり」の漢字 「季節の花300」
:<＄url/ref-03>	http://www.hana300.com/aakanji2.html
:<＄web/ref-04>	魚偏の漢字（さかなへんのかんじ）Mitsu Kono
:<＄url/ref-04>	http://people.physics.anu.edu.au/~mxk121/research/data/sakana.html
:<＄web/ref-05>	鳥偏旁の漢字（とりへんぼうのかんじ）Mitsu Kono
:<＄url/ref-05>	http://people.physics.anu.edu.au/~mxk121/research/data/tori.html
:<＄web/ref-06>	Wiktionary:漢字索引 部首 肉 - ウィクショナリー日本語版(部首：⾁（⺼）)
:<＄url/ref-06>	https://ja.wiktionary.org/wiki/Wiktionary:%E6%BC%A2%E5%AD%97%E7%B4%A2%E5%BC%95_%E9%83%A8%E9%A6%96_%E8%82%89
:<＄web/ref-07>	しめすへん 【示偏】は、「ネ」と「示」と両方ありますが、単純に新字と旧字の違いではないようですね。 なぜ、このような違いが生じてしまったのでしょうか？ - Yahoo!知恵袋
:<＄url/ref-07>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1470818294
:<＄web/ref-08>	てへんに覚と、絆の左がわをなくし、てへんで ２文字なんて読むんでしょうか？ - 日本語 | Yahoo!知恵袋
:<＄url/ref-08>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1311776823
:<＄web/ref-09>	鶯 鴬 の違い ？ - 「鶯」が正しい字です。「鴬」などという略字は使わないようにして下さい。 - Yahoo!知恵袋(「鴬」では、「鶯」の略字なのか、「鷽」の略字なのか分かりません。)
:<＄url/ref-09>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1422142054
:<＄web/ref-10>	徳川光圀の｢圀｣という字は、なぜこんな字？(｢囯｣も候補に挙がりましたが、日本に王はいないということで、｢丶｣を加えて、今の｢国｣という字が一般的になりました。)
:<＄url/ref-10>	http://増殖難読漢字辞典.com/kanyawa/kanyawa-002.html
:<＄web/ref-11>	楽 ←この漢字の白の左右の点々が「糸」になった漢字ってなんて読むんでしょうか？ - Yahoo!知恵袋
:<＄url/ref-11>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1169119381
:<＄web/ref-12>	「かむ」の漢字は「噛む」が正しいのでしょうか。それとも「嚙む」が正しいのでしょうか。 - Yahoo!知恵袋
:<＄url/ref-12>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q12108518122
:<＄web/ref-13>	「膨脹」と「膨張」って何が違うんですか?? - 日本語 | Yahoo!知恵袋
:<＄url/ref-13>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1133514731
:<＄web/ref-14>	店舗と店鋪の違い - 国語 解決済 | 教えて！goo(「舗」には別に『品物を売るところ』『店』の意味がありますが、「鋪」にはその意味がありません。)
:<＄url/ref-14>	http://oshiete.goo.ne.jp/qa/1185390.html
:<＄web/ref-15>	木へんに解で何と読みますか？ - Yahoo!知恵袋
:<＄url/ref-15>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1456495174
:<＄web/ref-16>	お寺で見た第3水準漢字 - yanok.net(「㓛」一文字だけでも「くぬぎ」というようです。)
:<＄url/ref-16>	http://yanok.net/2011/06/3-18.html
:<＄web/ref-17>	同音の漢字による書きかえ - Wikipedia
:<＄url/ref-17>	https://ja.wikipedia.org/wiki/%E5%90%8C%E9%9F%B3%E3%81%AE%E6%BC%A2%E5%AD%97%E3%81%AB%E3%82%88%E3%82%8B%E6%9B%B8%E3%81%8D%E3%81%8B%E3%81%88
:<＄web/ref-18>	幽霊文字 ‐ 通信用語の基礎知識
:<＄url/ref-18>	http://www.wdic.org/w/WDIC/%E5%B9%BD%E9%9C%8A%E6%96%87%E5%AD%97
:<＄web/ref-19>	sayunu_gundam - GlyphWiki
:<＄url/ref-19>	http://glyphwiki.org/wiki/sayunu_gundam
:<＄web/ref-20>	なんだかとっても！いいかんじとは (ナンダカトッテモイイカンジとは) [単語記事] - ニコニコ大百科
:<＄url/ref-20>	http://dic.nicovideo.jp/a/%E3%81%AA%E3%82%93%E3%81%A0%E3%81%8B%E3%81%A8%E3%81%A3%E3%81%A6%E3%82%82!%E3%81%84%E3%81%84%E3%81%8B%E3%82%93%E3%81%98
:<＄web/ref-21>	稀少地名漢字リスト
:<＄url/ref-21>	http://pyrite.s54.xrea.com/timei/index.html
:<＄web/ref-22>	国名の漢字表記一覧 - Wikipedia
:<＄url/ref-22>	https://ja.wikipedia.org/wiki/%E5%9B%BD%E5%90%8D%E3%81%AE%E6%BC%A2%E5%AD%97%E8%A1%A8%E8%A8%98%E4%B8%80%E8%A6%A7
:<＄web/ref-23>	七十二候 - Wikipedia
:<＄url/ref-23>	https://ja.wikipedia.org/wiki/%E4%B8%83%E5%8D%81%E4%BA%8C%E5%80%99
:<＄web/ref-24>	二十八宿 - Wikipedia
:<＄url/ref-24>	https://ja.wikipedia.org/wiki/%E4%BA%8C%E5%8D%81%E5%85%AB%E5%AE%BF
:<＄web/ref-25>	二十四節気 - Wikipedia
:<＄url/ref-25>	https://ja.wikipedia.org/wiki/%E4%BA%8C%E5%8D%81%E5%9B%9B%E7%AF%80%E6%B0%97
:<＄web/ref-26>	日本の伝統色 和色大辞典
:<＄url/ref-26>	http://www.colordic.org/w/
:<＄web/ref-27>	化学物質の和名 - Wikipedia
:<＄url/ref-27>	https://ja.wikipedia.org/wiki/%E5%85%83%E7%B4%A0%E3%81%AE%E4%B8%AD%E5%9B%BD%E8%AA%9E%E5%90%8D%E7%A7%B0
:<＄web/ref-28>	元素の中国語名称 - Wikipedia
:<＄url/ref-28>	https://ja.wikipedia.org/wiki/%E5%8C%96%E5%AD%A6%E7%89%A9%E8%B3%AA%E3%81%AE%E5%92%8C%E5%90%8D
:<＄web/ref-29>	無量大数の彼方へとは (ムリョウタイスウノカナタヘとは) [単語記事] - ニコニコ大百科
:<＄url/ref-29>	http://dic.nicovideo.jp/a/%E7%84%A1%E9%87%8F%E5%A4%A7%E6%95%B0%E3%81%AE%E5%BD%BC%E6%96%B9%E3%81%B8
:<＄web/ref-30>	訓読みが長い漢字 - Enpedia
:<＄url/ref-30>	http://enpedia.rxy.jp/wiki/%E8%A8%93%E8%AA%AD%E3%81%BF%E3%81%8C%E9%95%B7%E3%81%84%E6%BC%A2%E5%AD%97
:<＄web/ref-31>	一文字で珍しい名字(苗字)を教えてください。 哘(さそう)、杠(ゆずりは)など  - Yahoo!知恵袋
:<＄url/ref-31>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1425563724
:<＄web/ref-32>	人名用漢字一覧 - Wikipedia
:<＄url/ref-32>	https://ja.wikipedia.org/wiki/%E4%BA%BA%E5%90%8D%E7%94%A8%E6%BC%A2%E5%AD%97%E4%B8%80%E8%A6%A7
:<＄web/ref-33>	人名用漢字（表一）漢字辞典
:<＄url/ref-33>	http://kanjitisiki.com/zinmei/
:<＄web/ref-34>	人名用漢字一覧表（表二）漢字辞典
:<＄url/ref-34>	http://kanjitisiki.com/zinmei02/
:<＄web/ref-35>	難しすぎて読めない動物の名前ランキング - gooランキング
:<＄url/ref-35>	http://ranking.goo.ne.jp/ranking/category/999/nhMmHOggHfeF/
:<＄web/ref-36>	なんJでよく見る鷲鴎檻鷹鯉猫公兎虎竜燕星についてどれがどの球団ですか？ - Yahoo!知恵袋
:<＄url/ref-36>	http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11110526351
:<＄web/ref-37>	[都道府県を漢字１文字で 表すと？] by 何カト見聞録
:<＄url/ref-37>	http://vicroad.blog31.fc2.com/blog-entry-405.html
:<＄web/ref-38>	「十柱戯」これ読める？漢字で書くと読めなくなる球技ランキング:哲学ニュースnwk
:<＄url/ref-38>	http://blog.livedoor.jp/nwknews/archives/5110539.html
:<＄web/ref-39>	大阪人しか読めない「謎の漢字」があるらしい - ニュース - Jタウンネット　東京都(阪急の梅田の龱)
:<＄url/ref-39>	http://j-town.net/tokyo/news/localnews/208767.html
:<＄web/ref-40>	ユニコード6.0以降で使用できる絵文字(自然編) - 世界の特殊文字ウィキ（約物記号BA-90<？contents/BA-90>）
:<＄url/ref-40>	http://seesaawiki.jp/w/qvarie/d/%A5%E6%A5%CB%A5%B3%A1%BC%A5%C96.0%B0%CA%B9%DF%A4%C7%BB%C8%CD%D1%A4%C7%A4%AD%A4%EB%B3%A8%CA%B8%BB%FA(%BC%AB%C1%B3%CA%D4)
:<＄web/ref-41>	<？contents/Tomato> Tomato Emoji
:<＄url/ref-41>	http://emojipedia.org/tomato/
:<＄web/ref-42>	点字 - Wikipedia
:<＄url/ref-42>	https://ja.wikipedia.org/wiki/%E7%82%B9%E5%AD%97
:<＄web/ref-43>	麻雀牌 - Wikipedia
:<＄url/ref-43>	https://ja.wikipedia.org/wiki/%E9%BA%BB%E9%9B%80%E7%89%8C
:<＄web/ref-44>	tkinterでは基本多言語面しか使えない - かせきのうさぎさん
:<＄url/ref-44>	http://d.hatena.ne.jp/itasuke/20141110/p1
:<＄web/ref-45>	基本多言語面 ‐ 通信用語の基礎知識
:<＄url/ref-45>	http://www.wdic.org/w/WDIC/%E5%9F%BA%E6%9C%AC%E5%A4%9A%E8%A8%80%E8%AA%9E%E9%9D%A2
.+\.html?	<dl><dt><＄web/ref-@0c></dt><dd><a href="<＄url/ref-@0c>" title="<＄web/ref-@0c>"><＄url/ref-@0c></a></dd></dl>
.*	@E   <＄web/ref-@0c><？BR>@E   <＄url/ref-@0c><？BR>
|<？https/ref:radical>*<？https/ref:木>*<？https/ref:魚>*<？https/ref:草>*<？https/ref:Fish!>*<？https/ref:Bird!>*<？https/ref:flesh>*<？https/ref:ネ示>*<？https/ref:攪拌>*<？https/ref:鶯鴬>*<？https/ref:囯国>*<？https/ref:団欒>*<？https/ref:噛嚙>*<？https/ref:脹張>*<？https/ref:舗鋪>*<？https/ref:檞>*<？https/ref:㓛>*<？https/ref:ghost>*<？https/ref:gundam>*<？https/ref:閄>*<？https/ref:‎samesound>*<？https/ref:country>*<？https/ref:rareplace>*<？https/ref:72pentads>*<？https/ref:28lunarmansions>*<？https/ref:24seasons>*<？https/ref:Japanesecolors>*<？https/ref:element>*<？https/ref:chemical>*<？https/ref:10^68>*<？https/ref:longreadingchar>*<？https/ref:surname1char>*<？https/ref:Kanjinames>*<？https/ref:zinmei1>*<？https/ref:zinmei2>*<？https/ref:animal>*<？https/ref:baseball>*<？https/ref:prefectures>*<？https/ref:sports>*<？https/ref:梅龱>*<？https/ref:BA-90>*<？https/ref:Tomato>*<？https/ref:braille>*<？https/ref:Mahjong>*<？https/ref:tkinter>*<？https/ref:BMP>]
[<？https/kanedit.py>*<？https/kanedit.tsv>*<？https/kanedit.vim>|
:<＄path/kanedit-0>	kanedit.py
:<＄path/kanedit-1>	kanedit.tsv
:<＄path/kanedit-2>	LTsv/kanedit.vim
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/kanedit-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/kanedit-@c>"><＄path/kanedit-@c></a>
.*	<＄path/kanedit-@c>
|<？https/kanedit.py>*<？https/kanedit.tsv>*<？https/kanedit.vim>]
[<？contents/BA-90>*<？contents/Tomato>|
:<＄icon-0>	&#127773;
:<＄icon-1>	&#127813;
.+\.html?	<span class="kan5x5comic"><＄icon-@c></span>
.*	<＄icon-@c>
|<？contents/BA-90>*<？contents/Tomato>]
[BA-90<span class="kan5x5comic">&#127773;</span>）"*title="<span class="kan5x5comic">&#127813;</span>|
:<＄html-0>	BA-90&#127773;）"
:<＄html-1>	title="&#127813;
.+\.html?	<＄html-@c>
|BA-90<span class="kan5x5comic">&#127773;</span>）"*title="<span class="kan5x5comic">&#127813;</span>]

[<？section/address-0>|
.+\.html?	<section>@E <h3 id="address-@c"><？title/address-@c></h3>@E<＃contents/address-@c>@E</section>@E
.*	@E<？title/address-@c>@E<＃contents/address-@c>@E
|<？section/address-0>]

[<＃contents/address-0>|

<？P> 更新情報はGitHubやブログを確認してください。<？BR><？/P>
<？https12:github_ooblog>
<？https12:hatena_ooblog>

|<＃contents/address-0>]

[<？DICmap>|
.*	漢字配列「<？https/kanmap.tsv>」
|<？DICmap>]
[<？DICchar>|
.*	単漢字辞書「<？https/kanchar.tsv>」
|<？DICchar>]
[<？DICword>|
.*	汎用辞書「<？https/kanword.tsv>」
|<？DICword>]
[<？DICzip>|
.*	郵便番号辞書「kanzip.tsv」
|<？DICzip>]

[<？list/License-0>*<？list/License-1>*<？list/License-2>|
.+\.html?	 <li><？index/License-@c></li>@E
.*	 <？index/License-@c>@E
|<？list/License-0>*<？list/License-1>*<？list/License-2>]
[<？index/License-0>*<？index/License-1>*<？index/License-2>|
.+\.html?	<a href="#License-@c" title="<？title/License-@c>"><？title/License-@c></a>
.*	<？title/License-@c>
|<？index/License-0>*<？index/License-1>*<？index/License-2>]
[<？title/License-0>|
.*	⓪-0．ライセンス及びソフト使用の補足ガイドライン
|<？title/License-0>]
[<？title/License-1>|
.*	⓪-1．インストール(ダウンロード・アンインストール)＆セットアップ
|<？title/License-1>]
[<？title/License-2>|
.*	⓪-2．その他現在わかっている不具合や今後の課題
|<？title/License-2>]

[<？https/License:LICENSE>*<？https/kanmap.tsv>*<？https/kanchar.tsv>*<？https/kanword.tsv>*<？https/License:wine_sh>|
:<＄path/License-0>	LICENSE
:<＄path/License-1>	LTsv/kanmap.tsv
:<＄path/License-2>	LTsv/kanchar.tsv
:<＄path/License-3>	kanword.tsv
:<＄path/License-4>	wine_sh
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/License-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/License-@c>"><＄path/License-@c></a>
.*	<＄path/License-@c>
|<？https/License:LICENSE>*<？https/kanmap.tsv>*<？https/kanchar.tsv>*<？https/kanword.tsv>*<？https/License:wine_sh>]

[<？https/License:kan5x5comic.woff>*<？https/License:yakuyon>|
:<＄word/Python-0>	kan5x5comic.woff
:<＄link/Python-0>	https://ooblog.github.io/kan5x5comic.woff
:<＄word/Python-1>	約四文字
:<＄link/Python-1>	https://ooblog.github.io/
.+\.html?	<a href="<＄link/License-@c>" title="<＄word/License-@c>"><＄word/License-@c></a>
.+\.css	<＄link/License-@c>
.*	<＄word/License-@c>
|<？https/License:kan5x5comic.woff>*<？https/License:yakuyon>]

[<？list/aboutLTsv-0>*<？list/aboutLTsv-1>|
.+\.html?	 <li><？index/aboutLTsv-@c></li>@E
.*	 <？index/aboutLTsv-@c>@E
|<？list/aboutLTsv-0>*<？list/aboutLTsv-1>]
[<？index/aboutLTsv-0>*<？index/aboutLTsv-1>*<？index/aboutLTsv-2>|
^index\.html?	<a href="#aboutLTsv-@c" title="<？title/aboutLTsv-@c>"><？title/aboutLTsv-@c></a>
.+\.html?	<a href="index.html#aboutLTsv-@c" title="<？title/aboutLTsv-@c>"><？titleimg/software-0><？title/aboutLTsv-@c></a>
LTsv10\.txt	<？title/aboutLTsv-@c>
.*	「LTsv10.txt」の<？title/aboutLTsv-@c>
|<？index/aboutLTsv-0>*<？index/aboutLTsv-1>*<？index/aboutLTsv-2>]
[<？title/aboutLTsv-0>|
.*	①-0．「L:Tsv」とは(「L:Tsv」と「LTSV」の違い)
|<？title/aboutLTsv-0>]
[<？title/aboutLTsv-1>|
.*	①-1．「L:Tsv」ファイルの構造
|<？title/aboutLTsv-1>]

[<？list/LTsv_printf-0>*<？list/LTsv_printf-1>|
.+\.html?	 <li><？index/LTsv_printf-@c></li>@E
.*	 <？index/LTsv_printf-@c>@E
|<？list/LTsv_printf-0>*<？list/LTsv_printf-1>]
[<？index/LTsv_printf-0>*<？index/LTsv_printf-1>|
^index\.html?	<a href="#LTsv_printf-@c" title="<？title/LTsv_printf-@c>"><？title/LTsv_printf-@c></a>
.+\.html?	<a href="index.html#LTsv_printf-@c" title="<？title/LTsv_printf-@c>"><？titleimg/software-0><？title/LTsv_printf-@c></a>
LTsv10\.txt	<？title/LTsv_printf-@c>
.*	「LTsv10.txt」の<？title/LTsv_printf-@c>
|<？index/LTsv_printf-0>*<？index/LTsv_printf-1>]
[<？title/LTsv_printf-0>|
.*	②-0．「LTsv_printf.py」の関数一覧
|<？title/LTsv_printf-0>]
[<？title/LTsv_printf-1>|
.*	②-1．ひらカナの変換「LTsv_kanare()」のLTsv_recaseの変換辞書一覧
|<？title/LTsv_printf-1>]
[<？https/LTsv_printf.py>|
:<＄path/LTsv_printf-0>	LTsv/LTsv_printf.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_printf-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_printf-@c>"><＄path/LTsv_printf-@c></a>
.*	<＄path/LTsv_printf-@c>
|<？https/LTsv_printf.py>]

[<？list/LTsv_file-0>|
.+\.html?	 <li><？index/LTsv_file-@c></li>@E
.*	 <？index/LTsv_file-@c>@E
|<？list/LTsv_file-0>]
[<？index/LTsv_file-0>|
^index\.html?	<a href="#LTsv_file-@c" title="<？title/LTsv_file-@c>"><？title/LTsv_file-@c></a>
.+\.html?	<a href="index.html#LTsv_file-@c" title="<？title/LTsv_file-@c>"><？titleimg/software-0><？title/LTsv_file-@c></a>
LTsv10\.txt	<？title/LTsv_file-@c>
.*	「LTsv10.txt」の<？title/LTsv_file-@c>
|<？index/LTsv_file-0>]
[<？title/LTsv_file-0>|
.*	③-0．「LTsv_file.py」の関数一覧
|<？title/LTsv_file-0>]
[<？https/LTsv_file.py>|
:<＄path/LTsv_file-0>	LTsv/LTsv_file.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_file-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_file-@c>"><＄path/LTsv_file-@c></a>
.*	<＄path/LTsv_file-@c>
|<？https/LTsv_file.py>]

[<？list/LTsv_time-0>*<？list/LTsv_time-1>|
.+\.html?	 <li><？index/LTsv_time-@c></li>@E
.*	 <？index/LTsv_time-@c>@E
|<？list/LTsv_time-0>*<？list/LTsv_time-1>]
[<？index/LTsv_time-0>*<？index/LTsv_time-1>|
^index\.html?	<a href="#LTsv_time-@c" title="<？title/LTsv_time-@c>"><？title/LTsv_time-@c></a>
.+\.html?	<a href="index.html#LTsv_time-@c" title="<？title/LTsv_time-@c>"><？titleimg/software-0><？title/LTsv_time-@c></a>
LTsv10\.txt	<？title/LTsv_time-@c>
.*	「LTsv10.txt」の<？title/LTsv_time-@c>
|<？index/LTsv_time-0>*<？index/LTsv_time-1>]
[<？title/LTsv_time-0>|
.*	④-0．「LTsv_time.py」の関数一覧
|<？title/LTsv_time-0>]
[<？title/LTsv_time-1>|
.*	④-1．日時フォーマットの概要
|<？title/LTsv_time-1>]
[<？https/LTsv_time.py>|
:<＄path/LTsv_time-0>	LTsv/LTsv_time.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_time-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_time-@c>"><＄path/LTsv_time-@c></a>
.*	<＄path/LTsv_time-@c>
|<？https/LTsv_time.py>]

[<？list/LTsv_calc-0>*<？list/LTsv_calc-1>|
.+\.html?	 <li><？index/LTsv_calc-@c></li>@E
.*	 <？index/LTsv_calc-@c>@E
|<？list/LTsv_calc-0>*<？list/LTsv_calc-1>]
[<？index/LTsv_calc-0>*<？index/LTsv_calc-1>|
^index\.html?	<a href="#LTsv_calc-@c" title="<？title/LTsv_calc-@c>"><？title/LTsv_calc-@c></a>
.+\.html?	<a href="index.html#LTsv_calc-@c" title="<？title/LTsv_calc-@c>"><？titleimg/software-0><？title/LTsv_calc-@c></a>
LTsv10\.txt	<？title/LTsv_calc-@c>
.*	「LTsv10.txt」の<？title/LTsv_calc-@c>
|<？index/LTsv_calc-0>*<？index/LTsv_calc-1>]
[<？title/LTsv_calc-0>|
.*	⑤-0．「LTsv_calc.py」の関数一覧
|<？title/LTsv_calc-0>]
[<？title/LTsv_calc-1>|
.*	⑤-1．電卓フォーマットの概要
|<？title/LTsv_calc-1>]
[<？https/LTsv_calc.py>|
:<＄path/LTsv_calc-0>	LTsv/LTsv_calc.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_calc-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_calc-@c>"><＄path/LTsv_calc-@c></a>
.*	<＄path/LTsv_calc-@c>
|<？https/LTsv_calc.py>]

[<？list/LTsv_joy-0>*<？list/LTsv_joy-1>*<？list/LTsv_joy-2>|
.+\.html?	 <li><？index/LTsv_joy-@c></li>@E
.*	 <？index/LTsv_joy-@c>@E
|<？list/LTsv_joy-0>*<？list/LTsv_joy-1>*<？list/LTsv_joy-2>]
[<？index/LTsv_joy-0>*<？index/LTsv_joy-1>*<？index/LTsv_joy-2>|
^index\.html?	<a href="#LTsv_joy-@c" title="<？title/LTsv_joy-@c>"><？title/LTsv_joy-@c></a>
.+\.html?	<a href="index.html#LTsv_joy-@c" title="<？title/LTsv_joy-@c>"><？titleimg/software-0><？title/LTsv_joy-@c></a>
LTsv10\.txt	<？title/LTsv_joy-@c>
.*	「LTsv10.txt」の<？title/LTsv_joy-@c>
|<？index/LTsv_joy-0>*<？index/LTsv_joy-1>*<？index/LTsv_joy-2>]
[<？title/LTsv_joy-0>|
.*	⑥-0．「LTsv_joy.py」の関数一覧
|<？title/LTsv_joy-0>]
[<？title/LTsv_joy-1>|
.*	⑥-1．「LTsv_joy.tsv」のタグ解説
|<？title/LTsv_joy-1>]
[<？title/LTsv_joy-2>|
.*	⑥-2．「LTsv_getjoystr()」の<？joyformat_label>一覧
|<？title/LTsv_joy-2>]
[<？joyformat_label>|
.*	joyformat縦軸ラベル(first)
|<？joyformat_label>]
[<？https/LTsv_joy.py>*<？https/LTsv_joy.tsv>|
:<＄path/LTsv_joy-0>	LTsv/LTsv_joy.py
:<＄path/LTsv_joy-1>	LTsv/LTsv_joy.tsv
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_joy-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_joy-@c>"><＄path/LTsv_joy-@c></a>
.*	<＄path/LTsv_joy-@c>
|<？https/LTsv_joy.py>*<？https/LTsv_joy.tsv>]

[<？list/LTsv_kbd-0>*<？list/LTsv_kbd-1>|
.+\.html?	 <li><？index/LTsv_kbd-@c></li>@E
.*	 <？index/LTsv_kbd-@c>@E
|<？list/LTsv_kbd-0>*<？list/LTsv_kbd-1>]
[<？index/LTsv_kbd-0>*<？index/LTsv_kbd-1>|
^index\.html?	<a href="#LTsv_kbd-@c" title="<？title/LTsv_kbd-@c>"><？title/LTsv_kbd-@c></a>
.+\.html?	<a href="index.html#LTsv_kbd-@c" title="<？title/LTsv_kbd-@c>"><？titleimg/software-0><？title/LTsv_kbd-@c></a>
LTsv10\.txt	<？title/LTsv_kbd-@c>
.*	「LTsv10.txt」の<？title/LTsv_kbd-@c>
|<？index/LTsv_kbd-0>*<？index/LTsv_kbd-1>]
[<？title/LTsv_kbd-0>|
.*	⑦-0．「LTsv_kbd.py」の関数一覧
|<？title/LTsv_kbd-0>]
[<？title/LTsv_kbd-1>|
.*	⑦-1．「LTsv_kbd.tsv」のタグ解説
|<？title/LTsv_kbd-1>]
[<？https/LTsv_kbd.py>*<？https/LTsv_kbd.tsv>|
:<＄path/LTsv_kbd-0>	LTsv/LTsv_kbd.py
:<＄path/LTsv_kbd-1>	LTsv/LTsv_kbd.tsv
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_kbd-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_kbd-@c>"><＄path/LTsv_kbd-@c></a>
.*	<＄path/LTsv_kbd-@c>
|<？https/LTsv_kbd.py>*<？https/LTsv_kbd.tsv>]

[<？list/LTsv_gui-0>*<？list/LTsv_gui-1>|
.+\.html?	 <li><？index/LTsv_gui-@c></li>@E
.*	 <？index/LTsv_gui-@c>@E
|<？list/LTsv_gui-0>*<？list/LTsv_gui-1>]
[<？index/LTsv_gui-0>*<？index/LTsv_gui-1>|
^index\.html?	<a href="#LTsv_gui-@c" title="<？title/LTsv_gui-@c>"><？title/LTsv_gui-@c></a>
.+\.html?	<a href="index.html#LTsv_gui-@c" title="<？title/LTsv_gui-@c>"><？titleimg/software-0><？title/LTsv_gui-@c></a>
.*	<？title/LTsv_gui-@c>
.*	「LTsv10.txt」の<？title/LTsv_gui-@c>
|<？index/LTsv_gui-0>*<？index/LTsv_gui-1>]
[<？title/LTsv_gui-0>|
.*	⑧-0．「LTsv_gui.py」の関数一覧
|<？title/LTsv_gui-0>]
[<？title/LTsv_gui-1>|
.*	⑧-1．「LTsv_widgetPAGEXYWH()」のオプション一覧
|<？title/LTsv_gui-1>]
[<？https/LTsv_gui.py>|
:<＄path/LTsv_gui-0>	LTsv/LTsv_gui.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_gui-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_gui-@c>"><＄path/LTsv_gui-@c></a>
.*	<＄path/LTsv_gui-@c>
|<？https/LTsv_gui.py>]

[<？list/LTsv_glyph-0>*<？list/LTsv_glyph-1>*<？list/LTsv_glyph-2>*<？list/LTsv_glyph-3>*<？list/LTsv_glyph-4>*<？list/LTsv_glyph-5>|
.+\.html?	 <li><？index/LTsv_glyph-@c></li>@E
.*	 <？index/LTsv_glyph-@c>@E
|<？list/LTsv_glyph-0>*<？list/LTsv_glyph-1>*<？list/LTsv_glyph-2>*<？list/LTsv_glyph-3>*<？list/LTsv_glyph-4>*<？list/LTsv_glyph-5>]
[<？index/LTsv_glyph-0>*<？index/LTsv_glyph-1>*<？index/LTsv_glyph-2>*<？index/LTsv_glyph-3>*<？index/LTsv_glyph-4>*<？index/LTsv_glyph-5>|
^index\.html?	<a href="#LTsv_glyph-@c" title="<？title/LTsv_glyph-@c>"><？title/LTsv_glyph-@c></a>
.+\.html?	<a href="index.html#LTsv_glyph-@c" title="<？title/LTsv_glyph-@c>"><？titleimg/software-0><？title/LTsv_glyph-@c></a>
LTsv10\.txt	<？title/LTsv_glyph-@c>
.*	「LTsv10.txt」の<？title/LTsv_glyph-@c>
|<？index/LTsv_glyph-0>*<？index/LTsv_glyph-1>*<？index/LTsv_glyph-2>*<？index/LTsv_glyph-3>*<？index/LTsv_glyph-4>*<？index/LTsv_glyph-5>]
[<？title/LTsv_glyph-0>|
.*	⑨-0．「LTsv_glyph.py」の関数一覧
|<？title/LTsv_glyph-0>]
[<？title/LTsv_glyph-1>|
.*	⑨-1．「LTsv_glyph.tsv」のタグ解説
|<？title/LTsv_glyph-1>]
[<？title/LTsv_glyph-2>|
.*	⑨-2．<？VRkeyboard>の操作方法
|<？title/LTsv_glyph-2>]
[<？title/LTsv_glyph-3>|
.*	⑨-3．<？VRcalc>の操作方法
|<？title/LTsv_glyph-3>]
[<？title/LTsv_glyph-4>|
.*	⑨-4．「漢字逆引きと分数電卓＆数値文字参照＆日時取得＆簡易辞書」の詳細
|<？title/LTsv_glyph-4>]
[<？title/LTsv_glyph-5>|
.*	⑨-5．単漢字辞書の辞書項目
|<？title/LTsv_glyph-5>]
[<？https/LTsv_glyph.py>*<？https/LTsv_glyph.tsv>*<？https/kanzip.py>|
:<＄path/LTsv_glyph-0>	LTsv/LTsv_glyph.py
:<＄path/LTsv_glyph-1>	LTsv/LTsv_glyph.tsv
:<＄path/LTsv_glyph-2>	LTsv/kanzip.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_glyph-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_glyph-@c>"><＄path/LTsv_glyph-@c></a>
.*	<＄path/LTsv_glyph-@c>
|<？https/LTsv_glyph.py>*<？https/LTsv_glyph.tsv>*<？https/kanzip.py>]

[<？list/LTsv10_faq-0>|
.+\.html?	 <li><？index/LTsv10_faq-@c></li>@E
.*	 <？index/LTsv10_faq-@c>@E
|<？list/LTsv10_faq-0>]
[<？index/LTsv10_faq-0>*<？index/LTsv10_faq-1>|
^index\.html?	<a href="#LTsv10_faq-@c" title="<？title/LTsv10_faq-@c>"><？title/LTsv10_faq-@c></a>
.+\.html?	<a href="index.html#LTsv10_faq-@c" title="<？title/LTsv10_faq-@c>"><？titleimg/software-0><？title/LTsv10_faq-@c></a>
LTsv10\.txt	<？title/LTsv10_faq-@c>
.*	「LTsv10.txt」の<？title/LTsv10_faq-@c>
|<？index/LTsv10_faq-0>*<？index/LTsv10_faq-1>]
[<？title/LTsv10_faq-0>|
.*	⑩-0．「L:Tsv」のＦＡＱ
|<？title/LTsv10_faq-0>]
[<？https/LTsv10_faq:python.org>*<？https/LTsv10_faq:python344>*<？https/LTsv10_faq:python352>*<？https/LTsv10_faq:pythonMSVCRTQiita>*<？https/LTsv10_faq:PortableWine>|
:<＄web/LTsv10_faq-0>	Welcome to Python.org
:<＄url/LTsv10_faq-0>	https://www.python.org/
:<＄web/LTsv10_faq-1>	Python Release Python 3.4.4 | Python.org
:<＄url/LTsv10_faq-1>	https://www.python.org/downloads/release/python-344/
:<＄web/LTsv10_faq-2>	Python Release Python 3.5.2 | Python.org
:<＄url/LTsv10_faq-2>	https://www.python.org/downloads/release/python-352/
:<＄web/LTsv10_faq-3>	Windows での Python 2.7, 3.4, 3.5 の拡張モジュールビルド環境 - Qiita
:<＄url/LTsv10_faq-3>	http://qiita.com/methane/items/2210712763b91e75fdf0
:<＄web/LTsv10_faq-4>	Index of /puppy/opt (Portable Wine:wine-portable-HELP_ja.html)
:<＄url/LTsv10_faq-4>	http://shinobar.server-on.net/puppy/opt/
.+\.html?	<dl class="faqlink"><dt><＄web/LTsv10_faq-@c></dt><dd><a href="<＄url/LTsv10_faq-@c>" title="<＄web/LTsv10_faq-@c>"><＄url/LTsv10_faq-@c></a></dd></dl>
.*	   <＄web/LTsv10_faq-@c><？BR>@E   <＄url/LTsv10_faq-@c><？BR>@E
|<？https/LTsv10_faq:python.org>*<？https/LTsv10_faq:python344>*<？https/LTsv10_faq:python352>*<？https/LTsv10_faq:pythonMSVCRTQiita>*<？https/LTsv10_faq:PortableWine>]
[<？https/python3install.sh>*<？https/kanmap.py>|
:<＄path/LTsv10_faq-0>	wine_sh/python3install.sh
:<＄path/LTsv10_faq-1>	kanmap.py
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv10_faq-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv10_faq-@c>"><＄path/LTsv10_faq-@c></a>
.*	<＄path/LTsv10_faq-@c>
|<？https/python3install.sh>*<？https/kanmap.py>]

[<？list/LTsv_doc_usage-0>|
.+\.html?	 <li><？index/LTsv_doc_usage-@c></li>@E
.*	 <？index/LTsv_doc_usage-@c>@E
|<？list/LTsv_doc_usage-0>]
[<？index/LTsv_doc_usage-0>|
^LTsv_doc\.html?	<a href="#LTsv_doc_usage-@c" title="<？title/LTsv_doc_usage-@c>"><？title/LTsv_doc_usage-@c></a>
.+\.html?	<a href="LTsv_doc.html#LTsv_doc_usage-@c" title="<？title/LTsv_doc_usage-@c>"><？titleimg/software-5><？title/LTsv_doc_usage-@c></a>
^LTsv_doc\.txt	<？title/LTsv_doc_usage-@c>
.*	「LTsv_doc.txt」の<？title/LTsv_doc_usage-@c>
|<？index/LTsv_doc_usage-0>]
[<？title/LTsv_doc_usage-0>|
.*	①-0．「LTsv_doc」の使い方
|<？title/LTsv_doc_usage-0>]

[<？list/LTsv_doc-0>*<？list/LTsv_doc-1>*<？list/LTsv_doc-2>|
.+\.html?	 <li><？index/LTsv_doc-@c></li>@E
.*	 <？index/LTsv_doc-@c>@E
|<？list/LTsv_doc-0>*<？list/LTsv_doc-1>*<？list/LTsv_doc-2>]
[<？index/LTsv_doc-0>*<？index/LTsv_doc-1>*<？index/LTsv_doc-2>|
^LTsv_doc\.html?	<a href="#LTsv_doc-@c" title="<？title/LTsv_doc-@c>"><？title/LTsv_doc-@c></a>
.+\.html?	<a href="LTsv_doc.html#LTsv_doc-@c" title="<？title/LTsv_doc-@c>"><？titleimg/software-5><？title/LTsv_doc-@c></a>
^LTsv_doc\.txt	<？title/LTsv_doc-@c>
.*	「LTsv_doc.txt」の<？title/LTsv_doc-@c>
|<？index/LTsv_doc-0>*<？index/LTsv_doc-1>*<？index/LTsv_doc-2>]
[<？title/LTsv_doc-0>|
.*	②-0．「LTsv_doc.py」の関数一覧
|<？title/LTsv_doc-0>]
[<？title/LTsv_doc-1>|
.*	②-1．「LTsv_doc.tsv」のタグ解説
|<？title/LTsv_doc-1>]
[<？title/LTsv_doc-2>|
.*	②-2．LTsv_docドキュメントの書き方
|<？title/LTsv_doc-2>]
[<？https/LTsv_doc.py>*<？https/LTsv_doc.tsv>*<？https/kanedit_etc.tsv>*<？https/README.md>|
:<＄path/LTsv_doc-0>	LTsv/LTsv_doc.py
:<＄path/LTsv_doc-1>	LTsv/LTsv_doc.tsv
:<＄path/LTsv_doc-2>	docs/kanedit_etc.tsv
:<＄path/LTsv_doc-3>	README.md
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_doc-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/LTsv_doc-@c>"><＄path/LTsv_doc-@c></a>
.*	<＄path/LTsv_doc-@c>
|<？https/LTsv_doc.py>*<？https/LTsv_doc.tsv>*<？https/kanedit_etc.tsv>*<？https/README.md>]

[<？list/LTsv_doc_faq-0>|
.+\.html?	 <li><？index/LTsv_doc_faq-@c></li>@E
.*	 <？index/LTsv_doc_faq-@c>@E
|<？list/LTsv_doc_faq-0>]
[<？index/LTsv_doc_faq-0>|
^LTsv_doc\.html?	<a href="#LTsv_doc_faq-@c" title="<？title/LTsv_doc_faq-@c>"><？title/LTsv_doc_faq-@c></a>
.+\.html?	<a href="LTsv_doc.html#LTsv_doc_faq-@c" title="<？title/LTsv_doc_faq-@c>"><？titleimg/software-5><？title/LTsv_doc_faq-@c></a>
^LTsv_doc\.txt	<？title/LTsv_doc_faq-@c>
.*	「LTsv_doc.txt」の<？title/LTsv_doc_faq-@c>
|<？index/LTsv_doc_faq-0>]
[<？title/LTsv_doc_faq-0>|
.*	③-0．「LTsv_doc」のＦＡＱ
|<？title/LTsv_doc_faq-0>]

[<？list/kanedit_usage-0>|
.+\.html?	 <li><？index/kanedit_usage-@c></li>@E
.*	 <？index/kanedit_usage-@c>@E
|<？list/kanedit_usage-0>]
[<？index/kanedit_usage-0>|
^kanedit\.html?	<a href="#kanedit_usage-@c" title="<？title/kanedit_usage-@c>"><？title/kanedit_usage-@c></a>
.+\.html?	<a href="kanedit.html#kanedit_usage-@c" title="<？title/kanedit_usage-@c>"><？titleimg/software-1><？title/kanedit_usage-@c></a>
^kanedit\.txt	<？title/kanedit_usage-@c>
.*	「kanedit.txt」の<？title/kanedit_usage-@c>
|<？index/kanedit_usage-0>]
[<？title/kanedit_usage-0>|
.*	①-0．「kanedit」の使い方(予定)
|<？title/kanedit_usage-0>]

[<？list/kanedit-0>*<？list/kanedit-1>|
.+\.html?	 <li><？index/kanedit-@c></li>@E
.*	 <？index/kanedit-@c>@E
|<？list/kanedit-0>*<？list/kanedit-1>]
[<？index/kanedit-0>*<？index/kanedit-1>|
^kanedit\.html?	<a href="#kanedit-@c" title="<？title/kanedit-@c>"><？title/kanedit-@c></a>
.+\.html?	<a href="kanedit.html#kanedit-@c" title="<？title/kanedit-@c>"><？titleimg/software-1><？title/kanedit-@c></a>
^kanedit\.txt	<？title/kanedit-@c>
.*	「kanedit.txt」の<？title/kanedit-@c>
|<？index/kanedit-0>*<？index/kanedit-1>]
[<？title/kanedit-0>|
.*	②-0．「kanedit.py」の関数一覧
|<？title/kanedit-0>]
[<？title/kanedit-1>|
.*	②-1．「kanedit.tsv」のタグ解説
|<？title/kanedit-1>]

[<？list/kanedit_faq-0>*<？list/kanedit_faq-1>*<？list/kanedit_faq-2>*<？list/kanedit_faq-3>*<？list/kanedit_faq-4>*<？list/kanedit_faq-5>|
.+\.html?	 <li><？index/kanedit_faq-@c></li>@E
.*	 <？index/kanedit_faq-@c>@E
|<？list/kanedit_faq-0>*<？list/kanedit_faq-1>*<？list/kanedit_faq-2>*<？list/kanedit_faq-3>*<？list/kanedit_faq-4>*<？list/kanedit_faq-5>]
[<？index/kanedit_faq-0>*<？index/kanedit_faq-1>*<？index/kanedit_faq-2>*<？index/kanedit_faq-3>*<？index/kanedit_faq-4>*<？index/kanedit_faq-5>|
^kanedit\.html?	<a href="#kanedit_faq-@c" title="<？title/kanedit_faq-@c>"><？title/kanedit_faq-@c></a>
.+\.html?	<a href="kanedit.html#kanedit_faq-@c" title="<？title/kanedit_faq-@c>"><？titleimg/software-1><？title/kanedit_faq-@c></a>
^kanedit\.txt	<？title/kanedit_faq-@c>
.*	「kanedit.txt」の<？title/kanedit_faq-@c>
|<？index/kanedit_faq-0>*<？index/kanedit_faq-1>*<？index/kanedit_faq-2>*<？index/kanedit_faq-3>*<？index/kanedit_faq-4>*<？index/kanedit_faq-5>]
[<？title/kanedit_faq-0>|
.*	③-0．「kanedit」のＦＡＱ
|<？title/kanedit_faq-0>]
[<？title/kanedit_faq-1>|
.*	③-1．漢直(漢字直接入力)の解説・相席の基本概念と一ヶ所系相席
|<？title/kanedit_faq-1>]
[<？title/kanedit_faq-2>|
.*	③-2．漢直(漢字直接入力)の解説・熟語隣接系相席
|<？title/kanedit_faq-2>]
[<？title/kanedit_faq-3>|
.*	③-3．漢直(漢字直接入力)の解説・字引入力系の相席
|<？title/kanedit_faq-3>]
[<？title/kanedit_faq-4>|
.*	③-4．漢直(漢字直接入力)の解説・都道府県国名などの字引
|<？title/kanedit_faq-4>]
[<？title/kanedit_faq-5>|
.*	③-5．難読漢字など参考資料リンク集
|<？title/kanedit_faq-5>]

[<？list/kanfont_usage-0>|
.+\.html?	 <li><？index/kanfont_usage-@c></li>@E
.*	 <？index/kanfont_usage-@c>@E
|<？list/kanfont_usage-0>]
[<？index/kanfont_usage-0>|
^kanfont\.html?	<a href="#kanfont_usage-@c" title="<？title/kanfont_usage-@c>"><？title/kanfont_usage-@c></a>
.+\.html?	<a href="kanfont.html#kanfont_usage-@c" title="<？title/kanfont_usage-@c>"><？titleimg/software-2><？title/kanfont_usage-@c></a>
^kanfont\.txt	<？title/kanfont_usage-@c>
.*	「kanfont.txt」の<？title/kanfont-@c>
|<？index/kanfont_usage-0>]
[<？title/kanfont_usage-0>|
.*	①-0．「kanfont」の使い方
|<？title/kanfont_usage-0>]

[<？list/kanfont-0>*<？list/kanfont-1>*<？list/kanfont-2>|
.+\.html?	 <li><？index/kanfont-@c></li>@E
.*	 <？index/kanfont-@c>@E
|<？list/kanfont-0>*<？list/kanfont-1>*<？list/kanfont-2>]
[<？index/kanfont-0>*<？index/kanfont-1>*<？index/kanfont-2>|
^kanfont\.html?	<a href="#kanfont-@c" title="<？title/kanfont-@c>"><？title/kanfont-@c></a>
.+\.html?	<a href="kanfont.html#kanfont-@c" title="<？title/kanfont-@c>"><？titleimg/software-2><？title/kanfont-@c></a>
^kanfont\.txt	<？title/kanfont-@c>
.*	「kanfont.txt」の<？title/kanfont-@c>
|<？index/kanfont-0>*<？index/kanfont-1>*<？index/kanfont-2>]
[<？title/kanfont-0>|
.*	②-0．「kanfont.py」と「5x10xTO5x10x20x.py」の関数一覧
|<？title/kanfont-0>]
[<？title/kanfont-1>|
.*	②-1．「kanfont.tsv」のタグ解説
|<？title/kanfont-1>]
[<？title/kanfont-2>|
.*	②-2．グリフキャンバスの座標とSVGパスの座標の違い＆圧縮形式5x10x20xの解説
|<？title/kanfont-2>]

[<？list/kanfont_faq-0>|
.+\.html?	 <li><？index/kanfont_faq-@c></li>@E
.*	 <？index/kanfont_faq-@c>@E
|<？list/kanfont_faq-0>]
[<？index/kanfont_faq-0>|
^kanfont\.html?	<a href="#kanfont_faq-@c" title="<？title/kanfont_faq-@c>"><？title/kanfont_faq-@c></a>
.+\.html?	<a href="kanfont.html#kanfont_faq-@c" title="<？title/kanfont_faq-@c>"><？titleimg/software-2><？title/kanfont_faq-@c></a>
^kanfont\.txt	<？title/kanfont_faq-@c>
.*	「kanfont.txt」の<？title/kanfont_faq-@c>
|<？index/kanfont_faq-0>]
[<？title/kanfont_faq-0>|
.*	③-0．「kanfont」のＦＡＱ
|<？title/kanfont_faq-0>]

[<？list/kanmap_usage-0>*<？list/kanmap_usage-1>|
.+\.html?	 <li><？index/kanmap_usage-@c></li>@E
.*	 <？index/kanmap_usage-@c>@E
|<？list/kanmap_usage-0>*<？list/kanmap_usage-1>]
[<？index/kanmap_usage-0>*<？index/kanmap_usage-1>|
^kanmap\.html?	<a href="#kanmap_usage-@c" title="<？title/kanmap_usage-@c>"><？title/kanmap_usage-@c></a>
.+\.html?	<a href="kanmap.html#kanmap_usage-@c" title="<？title/kanmap_usage-@c>"><？titleimg/software-3><？title/kanmap_usage-@c></a>
^kanmap\.txt	<？title/kanmap_usage-@c>
.*	「kanmap.txt」の<？title/kanmap-@c>
|<？index/kanmap_usage-0>*<？index/kanmap_usage-1>]
[<？title/kanmap_usage-0>|
.*	①-0．「kanmap」の使い方(初回起動・表示編)
|<？title/kanmap_usage-0>]
[<？title/kanmap_usage-1>|
.*	①-1．「kanmap」の使い方(漢字配列編集編)
|<？title/kanmap_usage-1>]

[<？list/kanmap-0>|
.+\.html?	 <li><？index/kanmap-@c></li>@E
.*	 <？index/kanmap-@c>@E
|<？list/kanmap-0>]
[<？index/kanmap-0>|
^kanmap\.html?	<a href="#kanmap-@c" title="<？title/kanmap-@c>"><？title/kanmap-@c></a>
.+\.html?	<a href="kanmap.html#kanmap-@c" title="<？title/kanmap-@c>"><？titleimg/software-3><？title/kanmap-@c></a>
^kanmap\.txt	<？title/kanmap-@c>
.*	「kanmap.txt」の<？title/kanmap-@c>
|<？index/kanmap-0>]
[<？title/kanmap-0>|
.*	②-0．「kanmap.py」の関数一覧
|<？title/kanmap-0>]

[<？list/kanmap_faq-0>|
.+\.html?	 <li><？index/kanmap_faq-@c></li>@E
.*	 <？index/kanmap_faq-@c>@E
|<？list/kanmap_faq-0>]
[<？index/kanmap_faq-0>|
^kanmap\.html?	<a href="#kanmap_faq-@c" title="<？title/kanmap_faq-@c>"><？title/kanmap_faq-@c></a>
.+\.html?	<a href="kanmap.html#kanmap_faq-@c" title="<？title/kanmap_faq-@c>"><？titleimg/software-3><？title/kanmap_faq-@c></a>
^kanmap\.txt	<？title/kanmap_faq-@c>
.*	「kanmap.txt」の<？title/kanmap_faq-@c>
|<？index/kanmap_faq-0>]
[<？title/kanmap_faq-0>|
.*	③-0．「kanmap」のＦＡＱ
|<？title/kanmap_faq-0>]

[<？list/kanzip_usage-0>|
.+\.html?	 <li><？index/kanzip_usage-@c></li>@E
.*	 <？index/kanzip_usage-@c>@E
|<？list/kanzip_usage-0>]
[<？index/kanzip_usage-0>|
^kanzip\.html?	<a href="#kanzip_usage-@c" title="<？title/kanzip_usage-@c>"><？title/kanzip_usage-@c></a>
.+\.html?	<a href="kanzip.html#kanzip_usage-@c" title="<？title/kanzip_usage-@c>"><？titleimg/software-4><？title/kanzip_usage-@c></a>
^kanzip\.txt	<？title/kanzip_usage-@c>
.*	「kanzip.txt」の<？title/kanzip-@c>
|<？index/kanzip_usage-0>]
[<？title/kanzip_usage-0>|
.*	①-0．「kanzip」の使い方
|<？title/kanzip_usage-0>]

[<？list/kanzip-0>|
.+\.html?	 <li><？index/kanzip-@c></li>@E
.*	 <？index/kanzip-@c>@E
|<？list/kanzip-0>]
[<？index/kanzip-0>|
^kanzip\.html?	<a href="#kanzip-@c" title="<？title/kanzip-@c>"><？title/kanzip-@c></a>
.+\.html?	<a href="kanzip.html#kanzip-@c" title="<？title/kanzip-@c>"><？titleimg/software-4><？title/kanzip-@c></a>
^kanzip\.txt	<？title/kanzip-@c>
.*	「kanzip.txt」の<？title/kanzip-@c>
|<？index/kanzip-0>]
[<？title/kanzip-0>|
.*	②-0．「kanzip.py」の関数一覧
|<？title/kanzip-0>]

[<？list/kanzip_faq-0>|
.+\.html?	 <li><？index/kanzip_faq-@c></li>@E
.*	 <？index/kanzip_faq-@c>@E
|<？list/kanzip_faq-0>]
[<？index/kanzip_faq-0>|
^kanzip\.html?	<a href="#kanzip_faq-@c" title="<？title/kanzip_faq-@c>"><？title/kanzip_faq-@c></a>
.+\.html?	<a href="kanzip.html#kanzip_faq-@c" title="<？title/kanzip_faq-@c>"><？titleimg/software-4><？title/kanzip_faq-@c></a>
^kanzip\.txt	<？title/kanzip_faq-@c>
.*	「kanzip.txt」の<？title/kanzip_faq-@c>
|<？index/kanzip_faq-0>]
[<？title/kanzip_faq-0>|
.*	③-0．「kanzip」のＦＡＱ
|<？title/kanzip_faq-0>]

[<？list/KEV_usage-0>*<？list/KEV_usage-1>*<？list/KEV_usage-2>*<？list/KEV_usage-3>|
.+\.html?	 <li><？index/KEV_usage-@c></li>@E
.*	 <？index/KEV_usage-@c>@E
|<？list/KEV_usage-0>*<？list/KEV_usage-1>*<？list/KEV_usage-2>*<？list/KEV_usage-3>]
[<？index/KEV_usage-0>*<？index/KEV_usage-1>*<？index/KEV_usage-2>*<？index/KEV_usage-3>|
^KEV\.html?	<a href="#KEV_usage-@c" title="<？title/KEV_usage-@c>"><？title/KEV_usage-@c></a>
.+\.html?	<a href="KEV.html#KEV_usage-@c" title="<？title/KEV_usage-@c>"><？titleimg/software-4><？title/KEV_usage-@c></a>
^KEV\.txt	<？title/KEV_usage-@c>
.*	「KEV.txt」の<？title/KEV-@c>
|<？index/KEV_usage-0>*<？index/KEV_usage-1>*<？index/KEV_usage-2>*<？index/KEV_usage-3>]
[<？title/KEV_usage-0>|
.*	①-0．「KEV(kanedit.vim)」をVimへセットアップ
|<？title/KEV_usage-0>]
[<？title/KEV_usage-1>|
.*	①-1．「KEV」の使い方([Shift]省略)
|<？title/KEV_usage-1>]
[<？title/KEV_usage-2>|
.*	①-2．「KEV」の[Shift]使用によるショートカット
|<？title/KEV_usage-2>]
[<？title/KEV_usage-3>|
.*	①-3．単漢字辞書の辞書項目
|<？title/KEV_usage-3>]

[<？list/KEV-0>|
.+\.html?	 <li><？index/KEV-@c></li>@E
.*	 <？index/KEV-@c>@E
|<？list/KEV-0>]
[<？index/KEV-0>|
^KEV\.html?	<a href="#KEV-@c" title="<？title/KEV-@c>"><？title/KEV-@c></a>
.+\.html?	<a href="KEV.html#KEV-@c" title="<？title/KEV-@c>"><？titleimg/software-4><？title/KEV-@c></a>
^KEV\.txt	<？title/KEV-@c>
.*	「KEV.txt」の<？title/KEV-@c>
|<？index/KEV-0>]
[<？title/KEV-0>|
.*	②-0．「kanedit.vim」の関数一覧
|<？title/KEV-0>]

[<？list/KEV_faq-0>|
.+\.html?	 <li><？index/KEV_faq-@c></li>@E
.*	 <？index/KEV_faq-@c>@E
|<？list/KEV_faq-0>]
[<？index/KEV_faq-0>|
^KEV\.html?	<a href="#KEV_faq-@c" title="<？title/KEV_faq-@c>"><？title/KEV_faq-@c></a>
.+\.html?	<a href="KEV.html#KEV_faq-@c" title="<？title/KEV_faq-@c>"><？titleimg/software-6><？title/KEV_faq-@c></a>
^KEV\.txt	<？title/KEV_faq-@c>
.*	「kanzip.txt」の<？title/KEV_faq-@c>
|<？index/KEV_faq-0>]
[<？title/KEV_faq-0>|
.*	③-0．「KEV」のＦＡＱ
|<？title/KEV_faq-0>]
[<？https/kanedit.vim>|
:<＄path/KEV-0>	LTsv/kanedit.vim
.+\.html?	<a href="<？url/ooblog:LTsv10repository>/blob/master/<＄path/KEV-@c>" title="<？url/ooblog:LTsv10repository>/blob/master/<＄path/KEV-@c>"><＄path/KEV-@c></a>
.*	<＄path/LTsv_glyph-@c>
|<？https/kanedit.vim>]

[<？list/KEV_interpret-0>*<？list/KEV_interpret-1>*<？list/KEV_interpret-2>*<？list/KEV_interpret-3>*<？list/KEV_interpret-4>|
.+\.html?	 <li><？index/KEV_interpret-@c></li>@E
.*	 <？index/KEV_interpret-@c>@E
|<？list/KEV_interpret-0>*<？list/KEV_interpret-1>*<？list/KEV_interpret-2>*<？list/KEV_interpret-3>*<？list/KEV_interpret-4>]
[<？index/KEV_interpret-0>*<？index/KEV_interpret-1>*<？index/KEV_interpret-2>*<？index/KEV_interpret-3>*<？index/KEV_interpret-4>|
^KEV\.html?	<a href="#KEV_interpret-@c" title="<？title/KEV_interpret-@c>"><？title/KEV_interpret-@c></a>
.+\.html?	<a href="KEV.html#KEV_interpret-@c" title="<？title/KEV_interpret-@c>"><？titleimg/software-6><？title/KEV_interpret-@c></a>
^KEV\.txt	<？title/KEV_interpret-@c>
.*	「kanzip.txt」の<？title/KEV_interpret-@c>
|<？index/KEV_interpret-0>*<？index/KEV_interpret-1>*<？index/KEV_interpret-2>*<？index/KEV_interpret-3>*<？index/KEV_interpret-4>]
[<？title/KEV_interpret-0>|
.*	④-0．漢直(漢字直接入力)の解説・相席の基本概念と一ヶ所系相席
|<？title/KEV_interpret-0>]
[<？title/KEV_interpret-1>|
.*	④-1．漢直(漢字直接入力)の解説・熟語隣接系相席
|<？title/KEV_interpret-1>]
[<？title/KEV_interpret-2>|
.*	④-2．漢直(漢字直接入力)の解説・字引入力系の相席
|<？title/KEV_interpret-2>]
[<？title/KEV_interpret-3>|
.*	④-3．漢直(漢字直接入力)の解説・都道府県国名などの字引
|<？title/KEV_interpret-3>]
[<？title/KEV_interpret-4>|
.*	④-4．難読漢字など参考資料リンク集
|<？title/KEV_interpret-4>]

[<？list/address-0>|
.+\.html?	 <li><？index/address-@c></li>@E
.*	 <？index/address-@c>@E
|<？list/address-0>]
[<？index/address-0>|
.+\.html?	<a href="#address-@c" title="<？title/address-@c>"><？title/address-@c></a>
.*	<？title/address-@c>
|<？index/address-0>]
[<？title/address-0>|
index|LTsv10	⑪-0．<？title/address>
kanedit	④-0．<？title/address>
kanfont	④-0．<？title/address>
kanmap	④-0．<？title/address>
kanzip	④-0．<？title/address>
LTsv_doc	④-0．<？title/address>
KEV	⑤-0．<？title/address>
|<？title/address-0>]
[<？title/address>|
.*	作者について、例えば連絡先。
|<？title/address>]
[<？https12:github_ooblog>*<？https12:hatena_ooblog>|
:<＄web/ooblog-0>	ooblog/LTsv10kanedit(GitHub)
:<＄url/ooblog-0>	<？url/ooblog:LTsv10repository>
:<＄web/ooblog-1>	[kanedit] - 大風呂ダ敷
:<＄url/ooblog-1>	http://d.hatena.ne.jp/ooblog/searchdiary?word=*[kanedit]
.+\.html?	<dl><dt><＄web/ooblog-@c></dt><dd><a href="<＄url/ooblog-@c>" title="<＄web/ooblog-@c>"><＄url/ooblog-@c></a></dd></dl>
.*	@E   <＄web/ooblog-@c><？BR>@E   <＄url/ooblog-@c><？BR>
|<？https12:github_ooblog>*<？https12:hatena_ooblog>]

[<？list/software-0>*<？list/software-1>*<？list/software-2>*<？list/software-3>*<？list/software-4>*<？list/software-5>*<？list/software-6>|
.+\.html?	 <li><？index/software-@c></li>@E
.*	 <？index/software-@c>@E
|<？list/software-0>*<？list/software-1>*<？list/software-2>*<？list/software-3>*<？list/software-4>*<？list/software-5>*<？list/software-6>]
[<？index/software-0>*<？index/software-1>*<？index/software-2>*<？index/software-3>*<？index/software-4>*<？index/software-5>*<？index/software-6>|
.+\.html?	<a href="<？url/software-@c>" title="<？title/software-@c>"><？titleimg/software-@c><？title/software-@c></a>
.*	<？title/software-@c>
|<？index/software-0>*<？index/software-1>*<？index/software-2>*<？index/software-3>*<？index/software-4>*<？index/software-5>*<？index/software-6>]
[<？titleimg/software-0>|
.*	<img src="LTsv10_logo.png" width="48" height="48" alt="<？LTsv>" title="<？LTsv>">
|<？titleimg/software-0>]
[<？title/software-0>|
.*	<？title:LTsv10>
|<？title/software-0>]
[<？url/software-0>|
.*	index.html
|<？url/software-0>]
[<？titleimg/software-1>|
.*	<img src="kanedit_logo.png" width="48" height="48" alt="kanedit" title="kanedit">
|<？titleimg/software-1>]
[<？title/software-1>|
.*	<？title:kanedit>
|<？title/software-1>]
[<？url/software-1>|
.*	kanedit.html
|<？url/software-1>]
[<？titleimg/software-2>|
.*	<img src="kanfont_logo.png" width="48" height="48" alt="kanfont" title="kanfont">
|<？titleimg/software-2>]
[<？title/software-2>|
.*	<？title:kanfont>
|<？title/software-2>]
[<？url/software-2>|
.*	kanfont.html
|<？url/software-2>]
[<？titleimg/software-3>|
.*	<img src="kanmap_logo.png" width="48" height="48" alt="kanmap" title="kanmap">
|<？titleimg/software-3>]
[<？title/software-3>|
.*	<？title:kanmap>
|<？title/software-3>]
[<？url/software-3>|
.*	kanmap.html
|<？url/software-3>]
[<？titleimg/software-4>|
.*	<img src="kanzip_logo.png" width="48" height="48" alt="kanzip" title="kanzip">
|<？titleimg/software-4>]
[<？title/software-4>|
.*	<？title:kanzip>
|<？title/software-4>]
[<？url/software-4>|
.*	kanzip.html
|<？url/software-4>]
[<？titleimg/software-5>|
.*	<img src="LTsv_doc_logo.png" width="48" height="48" alt="LTsv_doc" title="LTsv_doc">
|<？titleimg/software-5>]
[<？title/software-5>|
.*	<？title:LTsv_doc>
|<？title/software-5>]
[<？url/software-5>|
.*	LTsv_doc.html
|<？url/software-5>]
[<？titleimg/software-6>|
.*	<img src="KEV_logo.png" width="48" height="48" alt="KEV" title="KEV">
|<？titleimg/software-6>]
[<？title/software-6>|
.*	<？title:KEV>
|<？title/software-6>]
[<？url/software-6>|
.*	KEV.html
|<？url/software-6>]

[<？title>|
(LTsv10|index|404)	<？title:LTsv10>
kanedit	<？title:kanedit>
kanfon	<？title:kanfont>
kanmap	<？title:kanmap>
kanzip	<？title:kanzip>
LTsv_doc	<？title:LTsv_doc>
KEV	<？title:KEV>
|<？title>]
[<？title:LTsv10>|
.*	「<？LTsv>」は「L:Tsv」の読み書きを中心としたモジュール群です。
|<？title:LTsv10>]
[<？title:kanedit>|
.*	「kanedit」は「<？LTsv>」を用いた漢直テキストエディタの予定です。
|<？title:kanedit>]
[<？title:kanfont>|
.*	「kanfont」は「<？LTsv>」を用いたフォントエディタ(グリフエディタ)です。
|<？title:kanfont>]
[<？title:kanmap>|
.*	「kanmap」は「<？LTsv>」を用いたグリフ進捗ビュアーです。
|<？title:kanmap>]
[<？title:kanzip>|
.*	「kanzip」は「<？LTsv>」を用いた郵便番号ダウンローダーです。
|<？title:kanzip>]
[<？title:LTsv_doc>|
.*	「LTsv_doc」は「<？LTsv>」を用いたドキュメントジェネレーターです。
|<？title:LTsv_doc>]
[<？title:KEV>|
.*	「KEV」はVimスクリプトでできてる漢字直接入力です。
|<？title:KEV>]

[<？ooblog>|
.+\.html?	# <？Copyright><br />@E# <？LicenseMIT><br />@E# <？https/ooblog:LTsv10LICENSE><br />@E
.*	# <？Copyright>@E# <？LicenseMIT>@E# <？https/ooblog:LTsv10LICENSE>@E
|<？ooblog>]
[<？https/ooblog:LTsv10LICENSE>|
.+\.html?	<a href="<？url/ooblog:LTsv10LICENSE>" title="<？title/ooblog:LTsv10LICENSE>"><？url/ooblog:LTsv10LICENSE></a>
.*	<？url/ooblog:LTsv10LICENSE>
|<？https/ooblog:LTsv10LICENSE>]
[<？url/ooblog:LTsv10LICENSE>|
.*	https://github.com/ooblog/LTsv10kanedit/blob/master/LICENSE
|<？url/ooblog:LTsv10LICENSE>]
[<？title/ooblog:LTsv10LICENSE>|
.*	LTsv10kanedit/LICENSE at master · ooblog/LTsv10kanedit
|<？title/ooblog:LTsv10LICENSE>]
[<？https/ooblog:LTsv10repository>|
.+\.html?	<a href="<？url/ooblog:LTsv10repository>" title="<？title/ooblog:LTsv10repository>"><？url/ooblog:LTsv10repository></a>
.*	<？url/ooblog:LTsv10repository>
|<？https/ooblog:LTsv10repository>]
[<？url/ooblog:LTsv10repository>|
.*	https://github.com/ooblog/LTsv10kanedit
|<？url/ooblog:LTsv10repository>]
[<？title/ooblog:LTsv10repository>|
.*	ooblog/LTsv10kanedit: 「L:Tsv」の読み書きを中心としたモジュール群と漢字入力「kanedit」のPythonによる実装です(準備中)。
|<？title/ooblog:LTsv10repository>]
[<？https/ooblog:LTsv_doc.py>|
.+\.html?	<a href="https://github.com/ooblog/LTsv10kanedit/blob/master/LTsv/<？url/ooblog:LTsv_doc.py>" title="<？title/ooblog:LTsv_doc.py>"><？url/ooblog:LTsv_doc.py></a>
.*	<？url/ooblog:LTsv_doc.py>
|<？https/ooblog:LTsv_doc.py>]
[<？url/ooblog:LTsv_doc.py>|
.*	LTsv_doc.py
|<？url/ooblog:LTsv_doc.py>]
[<？title/ooblog:LTsv_doc.py>|
.*	LTsv10kanedit/LTsv_doc.py at master · ooblog/LTsv10kanedit
|<？title/ooblog:LTsv_doc.py>]

[<？yakuyon>|
.*	「約四文字」(http://ooblog.github.io/)
|<？yakuyon>]
[<？Copyright>|
.*	Copyright (c) 2016 ooblog
|<？Copyright>]
[<？LicenseMIT>|
.*	License: MIT
|<？LicenseMIT>]
[<？LTsv>|
.*	LTsv10kanedit(tsvtool10)
|<？LTsv>]
[<？modify_style>|
.*	<＠L:TsvLTsvver>形式(@@000y@@0m@@0dm@@wdec@@0h@@0n@@0s)
|<？modify_style>]
[<？modify>|
.*	@000y@0m@0dm@wdec@0h@0n@0s
|<？modify>]
[<？CP932>|
.*	CP932(いわゆるシフトJIS、BMP基本多言語面0xffff範囲内)
|<？CP932>]
[<？gamepad>|
.*	ジョイスティック(ゲームPAD)
|<？gamepad>]
[<？PCkeyboard>|
.*	PCキーボード
|<？PCkeyboard>]
[<？keycode00FF>|
.*	キーコード($00〜$FF)
|<？keycode00FF>]
[<？tasktrayNotify>|
.*	通知タスクトレイ(Notify)
|<？tasktrayNotify>]
[<？GUIwidget>|
.*	GUIオブジェクト(widget)
|<？GUIwidget>]
[<？reversi>|
.*	リバーシー
|<？reversi>]
[<？VRkeyboard>|
.*	漢直鍵盤
|<？VRkeyboard>]
[<？VRcalc>|
.*	テキスト入力欄(電卓)
|<？VRcalc>]

[<？P>|
.+\.html?	<p>@E
.*	
|<？P>]
[<？Pcenter>|
.+\.html?	<p class="capcenter">@E
.*	
|<？Pcenter>]
[<？/PP>|
.+\.html?	</p><p>
.*	
|<？/PP>]
[<？/P>|
.+\.html?	@E</p>
.*	
|<？/P>]
[<？DLDT>|
.+\.html?	<dl><dt>@E
.*	
|<？DLDT>]
[<？DLDTfaq>|
.+\.html?	<dl class="faq"><dt>@E
.*	
|<？DLDTfaq>]
[<？DLDTfaqlink>|
.+\.html?	<dl class="faqlink"><dt>@E
.*	
|<？DLDTfaqlink>]
[<？DLDTinputstroke>|
.+\.html?	<dl class="inputstroke"><dt>@E
.*	
|<？DLDTinputstroke>]
[<？/DTDD>|
.+\.html?	</dt>@E<dd>@E
.*	
|<？/DTDD>]
[<？/DD/DL>|
.+\.html?	@E</dd></dl>
.*	
|<？/DD/DL>]
[<？/DD/DLclearboth>|
.+\.html?	@E</dd><br class="yonmoji_both" /></dl>
.*	
|<？/DD/DLclearboth>]
[<？BR>|
.+\.html?	<br />
.+\.md	  
.*	
|<？BR>]
[<？CODE>|
.+\.html?	@E<pre><code>
.*	
|<？CODE>]
[<？/CODE>|
.+\.html?	</code></pre>@E
.*	
|<？/CODE>]

[<？firstL>|
.+\.html?	<dl><dt>
.*	 【
|<？firstL>]
[<？firstR>|
.+\.html?	</dt>
.*	】@E
|<？firstR>]
[<？restL>|
.+\.html?	<dd>@E
.*	  
|<？restL>]
[<？restC>|
.+\.html?	<br />@E
.*	@E  
|<？restC>]
[<？restR>|
.+\.html?	</dd></dl>@E
.*	@E@E
|<？restR>]
[<？restRLast>|
.+\.html?	</dd></dl>
.*	
|<？restRLast>]

[<？&lt;>|
.+\.html?	&lt;
.*	<
|<？&lt;>]
[<？&gt;>|
.+\.html?	&gt;
.*	>
|<？&gt;>]
[<？&#x7C;>|
.+\.html?	&#x7C;
.*	|
|<？&#x7C;>]
[<？@T>|
.*	@T
|<？@T>]

[<＠kanedit_etc_outlist>|
LTsv_doc.css
404.html	
index.html	LTsv10
kanedit.html	kanedit
kanfont.html	kanfont
kanmap.html	kanmap
kanzip.html	kanzip
LTsv_doc.html	LTsv_doc
KEV.html	KEV
LTsv10.txt	LTsv10
kanedit.txt	kanedit
kanfont.txt	kanfont
kanmap.txt	kanmap
kanzip.txt	kanzip
LTsv_doc.txt	LTsv_doc
KEV.txt	KEV
|<＠kanedit_etc_outlist>]

# Copyright (c) 2016 ooblog
# License: MIT
# https://github.com/ooblog/LTsv10kanedit/blob/master/LICENSE
？sectio
