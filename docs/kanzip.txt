「kanzip」は「LTsv10kanedit(tsvtool10)」を用いた郵便番号ダウンローダーです。
version(branch):20161128M153500	modify:20161207W233650

目次

 ⓪-0．ライセンス及びソフト使用の補足ガイドライン
 ⓪-1．インストール(ダウンロード・アンインストール)＆セットアップ
 ⓪-2．その他現在わかっている不具合や今後の課題
 ①-0．「kanzip」の使い方
 ②-0．「kanzip.py」の関数一覧
 ③-0．「kanzip」のＦＡＱ
 ④-0．作者について、例えば連絡先。

⓪-0．ライセンス及びソフト使用の補足ガイドライン

 ※「MIT License」準拠。

   MIT License - Choose a License
   http://choosealicense.com/licenses/mit/

   licenses/MIT_license - Open Source Group Japan Wiki - Open Source Group Japan - OSDN
   https://ja.osdn.net/projects/opensource/wiki/licenses%2FMIT_license

   MITライセンスを1行1行読んでいく | プログラミング | POSTD
   http://postd.cc/mit-license-line-by-line/

 ※口語的説明。
   ・「LICENSE」も含めソースコードの閲覧やコピーに制限を設けない事。
   ・いかなる場合においても作者または著作権者は一切責任を負わない事。


⓪-1．インストール(ダウンロード・アンインストール)＆セットアップ

 ※Pythonは別途インストールされているものとします(Pythonの導入分からない人は「「LTsv_doc.txt」の⑩-0．「L:Tsv」のＦＡＱ」も参考)。
 ダウンロードは「https://github.com/ooblog/LTsv10kanedit」にある「Clone or download」ボタンを押すと出る「Download ZIP」メニューをクリック。
 インストールは任意(なるだけユーザーディレクトリ内)のフォルダに「LTsv10kanedit-master.zip」を解凍するだけです。
 「*.py」のパーミッションがOFFになってたら実行可能に変更、Wineで使う場合は「wine_sh」フォルダ内の「*.sh」のWineパスを適宜修正。
 フォント「kan5x5comic.ttf」を用意する場合は「「LTsv_doc.txt」の③-0．「kanfont」のＦＡＱ」を参考。

   ooblog/LTsv10kanedit: 「L:Tsv」の読み書きを中心としたモジュール群と漢字入力「kanedit」のPythonによる実装です(準備中)。
   https://github.com/ooblog/LTsv10kanedit


⓪-2．その他現在わかっている不具合や今後の課題

 Python 2.7.6(Tahrpup6.0.5)およびPython3.4.4(Wine1.7.18)で開発しています。Windows,cygwin,darwinなどでの動作は確認しておりません。
 フォント(グリフ)「kan5x5comic」は半角と全角の幅の比率が約5:3(1024:624)なのでアスキーアートで問題になる場合があります。グリフ不足で表示できない文字などあります。
 「LTsv/kanpickle.bin」にグリフデータが蓄積されるまでは動作が重いです。「kanmap.py」で解決できます。
 グリフデータ「kan5x5.svg」をフォント「kan5x5comic.ttf」に変換する手段として「FontForge」が必要。本当は単漢字辞書「LTsv/kanchar.tsv」から直接生成したいけど優先順位が低い。
 人名に使える漢字の異体字を漢字配列「LTsv/kanmap.tsv」から単漢字辞書「LTsv/kanchar.tsv」に移管作業中。なので漢直鍵盤の漢字配列「LTsv/kanmap.tsv」が大幅に変更するかも。
 マウスボタンの取得は保留。ホイールの取得は放置。tkk方面は手を出さない予定(コンボボックスなどはGTKのみサポート)。
 GTKのコールバックからデータを受けとる方法が不明のため、GUIイベント経由のPCキーボード取得やファイルダイアログからのキャンセル取得などが不明。
 「LTsv/LTsv_doc.py」で安全に再帰する方法思いつくまで置換タグの順序に厳しい手間が。
 「docs/」フォルダ内のドキュメントを「docs/kanedit_etc.tsv」ベースで描き直し中。


①-0．「kanzip」の使い方

 まず「kanzip.py」配下に作業用の「kanzip」フォルダが作成されます。
 初期状態なら「jigyosyo.zip」「01hokkai.zip」など各都道府県(大口事業所個別番号含む)のボタンがあり、押すと「*.zip」をダウンロード。
 「*.zip」ダウンロード同様に「*.csv」から必要事項を取りだして「*.tsv」に変換の手順を、47都道府県で行います。手順は手動でボタンを押します。
 全ての「*.tsv」を作成(かつ「kanzip.tsv」が無い状態)すると「都道府県と事業所をダウンロード＆コンバートし終えてから[kanzip.tsv]にマージ。」ボタンの封印が解除されるので、
 最終的に「郵便番号辞書「kanzip.tsv」kanzip.tsv」にマージして完成。


②-0．「kanzip.py」の関数一覧

 「kanzip.py」の解説は準備中です。


③-0．「kanzip」のＦＡＱ

 Ｑ．ボタンを手動で１個ずつ押していくのが面倒くさいです。
 Ａ．ダウンロードがうまくいかない場合(回線が襲いとかzipの破損など)自動化しづらい箇所があるので手動確認は大事です。
 Ｑ．ダウンロードできなくなりました。
 Ａ．日本郵便にあるはずのzipファイルのURL変更などが考えられますが、ブラウザでzipをダウンロードして「kanzip」フォルダにコピーすれば作業続行可能なはずです。
   事業所の個別郵便番号のダウンロード zip形式 - 日本郵便
   http://www.post.japanpost.jp/zipcode/dl/jigyosyo/index-zip.html
   読み仮名データの促音・拗音を小書きで表記するもの - zip圧縮形式 日本郵便
   http://www.post.japanpost.jp/zipcode/dl/kogaki-zip.html


④-0．作者について、例えば連絡先。

 更新情報はGitHubやブログを確認してください。

   ooblog/LTsv10kanedit(GitHub)
   https://github.com/ooblog/LTsv10kanedit

   [kanedit] - 大風呂ダ敷
   http://d.hatena.ne.jp/ooblog/searchdiary?word=*[kanedit]


# Copyright (c) 2016 ooblog
# License: MIT
# https://github.com/ooblog/LTsv10kanedit/blob/master/LICENSE


